{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useRegisterUserMutation, useLoginUserQuery, useFindUserQuery, userApi } from \"../services/apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [entired, setEntired] = useState(false); // 是否全部填写\n  const [user, setUser] = useState(''); // 监测 user 输入框\n  const [pwd, setPWD] = useState(''); // 监测 pwd 输入框\n\n  // 使用 useCallback, 确保监测函数只在挂载时创建一次\n  const handleInputUser = useCallback(e => {\n    // user 监听器\n    setUser(e.target.value);\n  }, []);\n  const handleInputPWD = useCallback(e => {\n    // \tpwd 监听器\n    setPWD(e.target.value);\n  }, []);\n  const handleEntiredCheck = useCallback((user, pwd) => {\n    // 检查是否全部填写\n    return !!user && !!pwd;\n  }, []);\n\n  // 注册处理\n  const [regis, regisResult] = useRegisterUserMutation();\n  // 注册处理器\n  // 发送请求到服务器的过程为异步, 需要时间传输数据并等待服务器处理, 若不使用异步, 代码会不等待请求完成直接继续执行, 导致无法正确获取服务器的返回结果\n  async function handleRegister(e) {\n    e.preventDefault();\n    if (!handleEntiredCheck(user, pwd)) {\n      console.log('请输入完整的用户名和密码');\n      return;\n    }\n    const data = {\n      attributes: {\n        username: user,\n        pwd\n      }\n    };\n    try {\n      // 调用注册api, 通过 unwrap 获取原始响应\n      const resp = await regis(data).unwrap();\n      console.log('注册成功\\n', resp);\n      localStorage.setItem('token', resp.data.documentId);\n    } catch (err) {\n      console.log('注册失败: ', err);\n    }\n  }\n\n  // 登录处理\n  const lgi = useLoginUserQuery(null, {\n    selectFromResult: result => {\n      console.log(result);\n      if (result.data.data) {\n        result.data.data = result.data.data.filter(item => {\n          return item.username === user && item.pwd === pwd;\n        });\n      }\n      return result;\n    }\n  });\n  async function handleLogin(e) {\n    e.preventDefault();\n    if (!handleEntiredCheck(user, pwd)) {\n      console.log('请输入完整的用户名和密码');\n    }\n    try {} catch (err) {\n      console.log('登录失败');\n    }\n  }\n  useEffect(() => {\n    setEntired(handleEntiredCheck(user, pwd));\n  }, [user, pwd, handleEntiredCheck]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleInputUser,\n        value: user,\n        placeholder: \"\\u7528\\u6237\\u540D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleInputPWD,\n        value: pwd,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        type: \"submit\",\n        children: \"\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        type: \"submit\",\n        children: \"\\u6CE8\\u518C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"/hOqGWD4xk27Rgw8VJoVy3Lp9VM=\", false, function () {\n  return [useRegisterUserMutation, useLoginUserQuery];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRegisterUserMutation","useLoginUserQuery","useFindUserQuery","userApi","jsxDEV","_jsxDEV","Login","_s","entired","setEntired","user","setUser","pwd","setPWD","handleInputUser","e","target","value","handleInputPWD","handleEntiredCheck","regis","regisResult","handleRegister","preventDefault","console","log","data","attributes","username","resp","unwrap","localStorage","setItem","documentId","err","lgi","selectFromResult","result","filter","item","handleLogin","children","action","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/login.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useRegisterUserMutation, useLoginUserQuery, useFindUserQuery, userApi} from \"../services/apis\";\r\n\r\n\r\nconst Login = () => {\r\n\tconst [entired, setEntired] = useState(false); // 是否全部填写\r\n\tconst [user, setUser] = useState(''); // 监测 user 输入框\r\n\tconst [pwd, setPWD] = useState(''); // 监测 pwd 输入框\r\n\r\n\t// 使用 useCallback, 确保监测函数只在挂载时创建一次\r\n\tconst handleInputUser = useCallback((e) => {\r\n\t\t// user 监听器\r\n\t\tsetUser(e.target.value);\r\n\t}, []);\r\n\tconst handleInputPWD = useCallback((e) => {\r\n\t\t// \tpwd 监听器\r\n\t\tsetPWD(e.target.value);\r\n\t}, []);\r\n\tconst handleEntiredCheck = useCallback((user, pwd) => {\r\n\t\t// 检查是否全部填写\r\n\t\treturn (!!user && !!pwd);\r\n\t}, [])\r\n\r\n\t// 注册处理\r\n\tconst [regis, regisResult] = useRegisterUserMutation();\r\n\t// 注册处理器\r\n\t// 发送请求到服务器的过程为异步, 需要时间传输数据并等待服务器处理, 若不使用异步, 代码会不等待请求完成直接继续执行, 导致无法正确获取服务器的返回结果\r\n\tasync function handleRegister(e) {\r\n\t\te.preventDefault();\r\n\t\tif (!handleEntiredCheck(user, pwd)) {\r\n\t\t\tconsole.log('请输入完整的用户名和密码');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst data = {\r\n\t\t\tattributes: {\r\n\t\t\t\tusername: user,\r\n\t\t\t\tpwd\r\n\t\t\t}\r\n\t\t}\r\n\t\ttry {\r\n\t\t\t// 调用注册api, 通过 unwrap 获取原始响应\r\n\t\t\tconst resp = await regis(data).unwrap();\r\n\t\t\tconsole.log('注册成功\\n', resp);\r\n\t\t\tlocalStorage.setItem('token', resp.data.documentId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('注册失败: ', err);\r\n\t\t}\r\n\t}\r\n\r\n\t// 登录处理\r\n\tconst lgi = useLoginUserQuery(null, {\r\n\t\tselectFromResult: result => {\r\n\t\t\tconsole.log(result);\r\n\t\t\tif (result.data.data) {\r\n\t\t\t\tresult.data.data = result.data.data.filter(item => {\r\n\t\t\t\t\treturn item.username === user && item.pwd===pwd;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t});\r\n\tasync function handleLogin(e) {\r\n\t\te.preventDefault();\r\n\t\tif(!handleEntiredCheck(user,pwd)){\r\n\t\t\tconsole.log('请输入完整的用户名和密码')\r\n\t\t}\r\n\t\ttry {\r\n\r\n\t\t}catch (err){\r\n\t\t\tconsole.log('登录失败')\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEntired(handleEntiredCheck(user, pwd));\r\n\t}, [user, pwd, handleEntiredCheck]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form action=\"\">\r\n\t\t\t\t<input type=\"text\" onChange={handleInputUser} value={user} placeholder=\"用户名\"/>\r\n\t\t\t\t<input type=\"text\" onChange={handleInputPWD} value={pwd} placeholder=\"请输入密码\"/>\r\n\t\t\t\t<button onClick={handleLogin} type=\"submit\">登录</button>\r\n\t\t\t\t<button onClick={handleRegister} type=\"submit\">注册</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
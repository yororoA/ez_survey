{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useRegisterUserMutation, useFindUserQuery, userApi } from \"../services/apis\";\nimport { Outlet } from \"react-router-dom\";\nimport login from '../style/login/login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [entired, setEntired] = useState(false); // 是否全部填写\n  const [user, setUser] = useState(''); // 监测 user 输入框\n  const [pwd, setPWD] = useState(''); // 监测 pwd 输入框\n\n  // 使用 useCallback, 确保监测函数只在挂载时创建一次\n  const handleInputUser = useCallback(e => {\n    // user 监听器\n    setUser(e.target.value);\n  }, []);\n  const handleInputPWD = useCallback(e => {\n    // \tpwd 监听器\n    setPWD(e.target.value);\n  }, []);\n  const handleEntiredCheck = useCallback((user, pwd) => {\n    // 检查是否全部填写\n    return !!user && !!pwd;\n  }, []);\n  const preventSpaceInput = useCallback(e => {\n    if (e.key === ' ') {\n      e.preventDefault();\n    }\n  });\n\n  // 登陆状态管理\n  const [haslogin, setLogin] = useState(false);\n  // 注册处理\n  const [regis, regisResult] = useRegisterUserMutation();\n  // 注册处理器\n  // 发送请求到服务器的过程为异步, 需要时间传输数据并等待服务器处理, 若不使用异步, 代码会不等待请求完成直接继续执行, 导致无法正确获取服务器的返回结果\n  async function handleRegister(e) {\n    e.preventDefault();\n    if (!handleEntiredCheck(user, pwd)) {\n      console.log('请输入完整的用户名和密码');\n      return;\n    }\n    const data = {\n      attributes: {\n        username: user,\n        pwd\n      }\n    };\n    try {\n      // 调用注册api, 通过 unwrap 获取原始响应\n      const resp = await regis(data).unwrap();\n      console.log('注册成功\\n', resp);\n      localStorage.setItem('token', resp.data.documentId);\n      setLogin(true);\n    } catch (err) {\n      console.log('注册失败: ', err);\n    }\n  }\n\n  // 登录处理\n  async function handleLogin(e) {\n    e.preventDefault();\n    if (!handleEntiredCheck(user, pwd)) {\n      console.log('请输入完整的用户名和密码');\n    }\n    try {\n      const resp = await fetch('http://localhost:1337/api/clients/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: user,\n          pwd\n        })\n      });\n      if (!resp.ok) {\n        throw new Error(`登录失败: ${resp.status}`);\n      }\n      console.log('登录成功\\n', resp);\n      const data = await resp.json();\n      localStorage.setItem('token', data.data.documentId);\n      setLogin(true);\n    } catch (err) {\n      console.log('登录失败', err);\n    }\n  }\n\n  // 检查本地是否有用户token\n  useEffect(() => {\n    if (localStorage.token) {\n      console.log(localStorage.token);\n      // 存在时检查该token对应的用户是否存在\n      fetch(`http://localhost:1337/api/clients/${localStorage.token}`).then(resp => {\n        console.log(resp);\n        if (!resp.ok) {\n          // 不存在则移除原用户登录状态\n          setLogin(false);\n          localStorage.removeItem('token');\n        } else {\n          setLogin(true);\n        }\n      });\n    }\n  }, []);\n\n  // 如果已登录, 渲染子路由, 否则重定向到登录页面\n  return haslogin ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: login.entire,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: login.main,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: '在线问卷系统(并非并非)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: '请登录以继续使用'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onKeyDown: preventSpaceInput,\n        onChange: handleInputUser,\n        value: user,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onKeyDown: preventSpaceInput,\n        onChange: handleInputPWD,\n        value: pwd,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        type: \"submit\",\n        style: {\n          color: 'white',\n          backgroundColor: '#387df6'\n        },\n        children: '登录'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        type: \"submit\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: '注册'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"x+kvAHsjllCFcnL9/RDxwvCM2/A=\", false, function () {\n  return [useRegisterUserMutation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","useRegisterUserMutation","useFindUserQuery","userApi","Outlet","login","jsxDEV","_jsxDEV","Login","_s","entired","setEntired","user","setUser","pwd","setPWD","handleInputUser","e","target","value","handleInputPWD","handleEntiredCheck","preventSpaceInput","key","preventDefault","haslogin","setLogin","regis","regisResult","handleRegister","console","log","data","attributes","username","resp","unwrap","localStorage","setItem","documentId","err","handleLogin","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","token","then","removeItem","fileName","_jsxFileName","lineNumber","columnNumber","className","entire","children","action","main","type","onKeyDown","onChange","placeholder","onClick","style","color","backgroundColor","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/login.jsx"],"sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {useRegisterUserMutation, useFindUserQuery, userApi} from \"../services/apis\";\r\nimport {Outlet} from \"react-router-dom\";\r\nimport login from '../style/login/login.module.css'\r\n\r\n\r\nconst Login = () => {\r\n\tconst [entired, setEntired] = useState(false); // 是否全部填写\r\n\tconst [user, setUser] = useState(''); // 监测 user 输入框\r\n\tconst [pwd, setPWD] = useState(''); // 监测 pwd 输入框\r\n\r\n\t// 使用 useCallback, 确保监测函数只在挂载时创建一次\r\n\tconst handleInputUser = useCallback((e) => {\r\n\t\t// user 监听器\r\n\t\tsetUser(e.target.value);\r\n\t}, []);\r\n\tconst handleInputPWD = useCallback((e) => {\r\n\t\t// \tpwd 监听器\r\n\t\tsetPWD(e.target.value);\r\n\t}, []);\r\n\tconst handleEntiredCheck = useCallback((user, pwd) => {\r\n\t\t// 检查是否全部填写\r\n\t\treturn (!!user && !!pwd);\r\n\t}, [])\r\n\tconst preventSpaceInput = useCallback((e) => {\r\n\t\tif (e.key === ' ') {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t})\r\n\r\n\t// 登陆状态管理\r\n\tconst [haslogin, setLogin] = useState(false);\r\n\t// 注册处理\r\n\tconst [regis, regisResult] = useRegisterUserMutation();\r\n\t// 注册处理器\r\n\t// 发送请求到服务器的过程为异步, 需要时间传输数据并等待服务器处理, 若不使用异步, 代码会不等待请求完成直接继续执行, 导致无法正确获取服务器的返回结果\r\n\tasync function handleRegister(e) {\r\n\t\te.preventDefault();\r\n\t\tif (!handleEntiredCheck(user, pwd)) {\r\n\t\t\tconsole.log('请输入完整的用户名和密码');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst data = {\r\n\t\t\tattributes: {\r\n\t\t\t\tusername: user,\r\n\t\t\t\tpwd\r\n\t\t\t}\r\n\t\t}\r\n\t\ttry {\r\n\t\t\t// 调用注册api, 通过 unwrap 获取原始响应\r\n\t\t\tconst resp = await regis(data).unwrap();\r\n\t\t\tconsole.log('注册成功\\n', resp);\r\n\t\t\tlocalStorage.setItem('token', resp.data.documentId);\r\n\t\t\tsetLogin(true);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('注册失败: ', err);\r\n\t\t}\r\n\t}\r\n\r\n\t// 登录处理\r\n\tasync function handleLogin(e) {\r\n\t\te.preventDefault();\r\n\t\tif (!handleEntiredCheck(user, pwd)) {\r\n\t\t\tconsole.log('请输入完整的用户名和密码')\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst resp = await fetch('http://localhost:1337/api/clients/login', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({username: user, pwd}),\r\n\t\t\t});\r\n\t\t\tif (!resp.ok) {\r\n\t\t\t\tthrow new Error(`登录失败: ${resp.status}`)\r\n\t\t\t}\r\n\t\t\tconsole.log('登录成功\\n', resp);\r\n\t\t\tconst data = await resp.json();\r\n\t\t\tlocalStorage.setItem('token', data.data.documentId);\r\n\t\t\tsetLogin(true);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('登录失败', err);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t// 检查本地是否有用户token\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.token) {\r\n\t\t\tconsole.log(localStorage.token);\r\n\t\t\t// 存在时检查该token对应的用户是否存在\r\n\t\t\tfetch(`http://localhost:1337/api/clients/${localStorage.token}`)\r\n\t\t\t\t.then(resp => {\r\n\t\t\t\t\tconsole.log(resp);\r\n\t\t\t\t\tif(!resp.ok) {\r\n\t\t\t\t\t\t// 不存在则移除原用户登录状态\r\n\t\t\t\t\t\tsetLogin(false);\r\n\t\t\t\t\t\tlocalStorage.removeItem('token');\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetLogin(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// 如果已登录, 渲染子路由, 否则重定向到登录页面\r\n\treturn haslogin ? <Outlet/> : (\r\n\t\t<div className={login.entire}>\r\n\t\t\t<form action=\"\" className={login.main}>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h2>{'在线问卷系统(并非并非)'}</h2>\r\n\t\t\t\t\t<span>{'请登录以继续使用'}</span>\r\n\t\t\t\t</header>\r\n\t\t\t\t<input type=\"text\" onKeyDown={preventSpaceInput} onChange={handleInputUser} value={user} placeholder=\"请输入用户名\"/>\r\n\t\t\t\t<input type=\"password\" onKeyDown={preventSpaceInput} onChange={handleInputPWD} value={pwd}\r\n\t\t\t\t\t\t\t placeholder=\"请输入密码\"/>\r\n\t\t\t\t<button onClick={handleLogin} type=\"submit\" style={{color:'white', backgroundColor:'#387df6'}}>{'登录'}</button>\r\n\t\t\t\t<button onClick={handleRegister} type=\"submit\" style={{backgroundColor:'white'}}>{'注册'}</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
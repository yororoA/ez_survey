{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\components\\\\involvedDisplay\\\\renderInvolved.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { InvolvedDataContext } from \"./context/involvedDataContext\";\nimport { getSurveyQues } from \"../../utils/getSurveyQues\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderInvolved = () => {\n  _s();\n  const involvedData = useContext(InvolvedDataContext);\n  console.log(involvedData);\n  // 获取填写过的问卷相关信息\n  const [surveysDetails, setSurveysDetails] = useState([]);\n  useEffect(() => {\n    setSurveysDetails([]);\n    async function fetchInvolvedSurveyDetail() {\n      // 所有请求的Promise数组\n      const fetchPromises = involvedData.map(involved => {\n        return {\n          survey: getSurveyQues(involved.survey),\n          answer: involved.answers\n        };\n      });\n      // 等待所有promise完成， 获取结果数组\n      const results = await Promise.all(fetchPromises);\n      console.log(results);\n      // 一次性更新所有 involved surveys\n      setSurveysDetails(results);\n    }\n    fetchInvolvedSurveyDetail();\n  }, [involvedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n_s(RenderInvolved, \"iy/g8GHlmcgX29+6p1lafmFgyUI=\");\n_c = RenderInvolved;\nexport default RenderInvolved;\nvar _c;\n$RefreshReg$(_c, \"RenderInvolved\");","map":{"version":3,"names":["React","useContext","useEffect","useState","InvolvedDataContext","getSurveyQues","jsxDEV","_jsxDEV","RenderInvolved","_s","involvedData","console","log","surveysDetails","setSurveysDetails","fetchInvolvedSurveyDetail","fetchPromises","map","involved","survey","answer","answers","results","Promise","all","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/components/involvedDisplay/renderInvolved.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {InvolvedDataContext} from \"./context/involvedDataContext\";\r\nimport {getSurveyQues} from \"../../utils/getSurveyQues\";\r\n\r\nconst RenderInvolved = () => {\r\n\tconst involvedData = useContext(InvolvedDataContext);\r\n\tconsole.log(involvedData);\r\n\t// 获取填写过的问卷相关信息\r\n\tconst [surveysDetails, setSurveysDetails] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tsetSurveysDetails([]);\r\n\r\n\t\tasync function fetchInvolvedSurveyDetail() {\r\n\t\t\t// 所有请求的Promise数组\r\n\t\t\tconst fetchPromises = involvedData.map(involved => {\r\n\t\t\t\treturn {survey: getSurveyQues(involved.survey), answer: involved.answers};\r\n\t\t\t});\r\n\t\t\t// 等待所有promise完成， 获取结果数组\r\n\t\t\tconst results = await Promise.all(fetchPromises);\r\n\t\t\tconsole.log(results);\r\n\t\t\t// 一次性更新所有 involved surveys\r\n\t\t\tsetSurveysDetails(results);\r\n\t\t}\r\n\r\n\t\tfetchInvolvedSurveyDetail();\r\n\t}, [involvedData]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RenderInvolved;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,SAAQC,mBAAmB,QAAO,+BAA+B;AACjE,SAAQC,aAAa,QAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,YAAY,GAAGT,UAAU,CAACG,mBAAmB,CAAC;EACpDO,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EACzB;EACA,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxDD,SAAS,CAAC,MAAM;IACfY,iBAAiB,CAAC,EAAE,CAAC;IAErB,eAAeC,yBAAyBA,CAAA,EAAG;MAC1C;MACA,MAAMC,aAAa,GAAGN,YAAY,CAACO,GAAG,CAACC,QAAQ,IAAI;QAClD,OAAO;UAACC,MAAM,EAAEd,aAAa,CAACa,QAAQ,CAACC,MAAM,CAAC;UAAEC,MAAM,EAAEF,QAAQ,CAACG;QAAO,CAAC;MAC1E,CAAC,CAAC;MACF;MACA,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACR,aAAa,CAAC;MAChDL,OAAO,CAACC,GAAG,CAACU,OAAO,CAAC;MACpB;MACAR,iBAAiB,CAACQ,OAAO,CAAC;IAC3B;IAEAP,yBAAyB,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAElB,oBACCH,OAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAER,CAAC;AAACnB,EAAA,CA5BID,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\check_fill_survey\\\\checkSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { checkSurvey } from \"../../utils/checkSurvey\";\nimport { RenderFillContext } from \"../../components/check&fill/context/renderFillContext\";\nimport { render } from \"./render\";\n\n// 检查 surveyId 是否合法\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CheckSurvey = () => {\n  _s();\n  // 获取url中的surveyId参数\n  const {\n    surveyId\n  } = useParams();\n  const [checkResult, setCheckResult] = useState({\n    isValid: false,\n    // 问卷是否有效\n    surveyData: null,\n    // 问卷详情, title, description, questions, endCollection, userId\n    error: {} // 无效原因 code, message\n  });\n  // 将要渲染到页面中的组件\n  const [elements, setElement] = useState(null);\n  // 是否正在检查\n  const [isChecking, setIsChecking] = useState(true);\n\n  // 检查 surveyId 是否合法\n  useEffect(() => {\n    if (surveyId) {\n      checkSurvey(surveyId).then(r => {\n        setCheckResult(r);\n        setElement(render(r.error.code, surveyId));\n      });\n      setIsChecking(false);\n    }\n  }, [surveyId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isChecking ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: '让我来大调查一下你要填的问卷...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RenderFillContext.Provider, {\n        value: checkResult,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(CheckSurvey, \"jbBivjv3kQ18MvkQcAJk9Gqyx7s=\", false, function () {\n  return [useParams];\n});\n_c = CheckSurvey;\nexport default CheckSurvey;\nvar _c;\n$RefreshReg$(_c, \"CheckSurvey\");","map":{"version":3,"names":["React","useEffect","useState","useParams","checkSurvey","RenderFillContext","render","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckSurvey","_s","surveyId","checkResult","setCheckResult","isValid","surveyData","error","elements","setElement","isChecking","setIsChecking","then","r","code","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/check_fill_survey/checkSurvey.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {checkSurvey} from \"../../utils/checkSurvey\";\r\nimport {RenderFillContext} from \"../../components/check&fill/context/renderFillContext\";\r\nimport {render} from \"./render\";\r\n\r\n\r\n// 检查 surveyId 是否合法\r\nconst CheckSurvey = () => {\r\n\t// 获取url中的surveyId参数\r\n\tconst {surveyId} = useParams();\r\n\r\n\tconst [checkResult, setCheckResult] = useState({\r\n\t\tisValid: false, // 问卷是否有效\r\n\t\tsurveyData: null, // 问卷详情, title, description, questions, endCollection, userId\r\n\t\terror: {} // 无效原因 code, message\r\n\t});\r\n\t// 将要渲染到页面中的组件\r\n\tconst [elements, setElement] = useState(null);\r\n\t// 是否正在检查\r\n\tconst [isChecking, setIsChecking] = useState(true);\r\n\r\n\t// 检查 surveyId 是否合法\r\n\tuseEffect(() => {\r\n\t\tif (surveyId) {\r\n\t\t\tcheckSurvey(surveyId).then(r => {\r\n\t\t\t\tsetCheckResult(r);\r\n\t\t\t\tsetElement(render(r.error.code, surveyId));\r\n\t\t\t});\r\n\t\t\tsetIsChecking(false);\r\n\t\t}\r\n\t}, [surveyId]);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isChecking ? <h1>{'让我来大调查一下你要填的问卷...'}</h1> : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<RenderFillContext.Provider value={checkResult}>\r\n\t\t\t\t\t\t{elements}\r\n\t\t\t\t\t</RenderFillContext.Provider>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CheckSurvey;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,WAAW,QAAO,yBAAyB;AACnD,SAAQC,iBAAiB,QAAO,uDAAuD;AACvF,SAAQC,MAAM,QAAO,UAAU;;AAG/B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM;IAACC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAE9B,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC;IAC9Cc,OAAO,EAAE,KAAK;IAAE;IAChBC,UAAU,EAAE,IAAI;IAAE;IAClBC,KAAK,EAAE,CAAC,CAAC,CAAC;EACX,CAAC,CAAC;EACF;EACA,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC7C;EACA,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACAD,SAAS,CAAC,MAAM;IACf,IAAIY,QAAQ,EAAE;MACbT,WAAW,CAACS,QAAQ,CAAC,CAACU,IAAI,CAACC,CAAC,IAAI;QAC/BT,cAAc,CAACS,CAAC,CAAC;QACjBJ,UAAU,CAACd,MAAM,CAACkB,CAAC,CAACN,KAAK,CAACO,IAAI,EAAEZ,QAAQ,CAAC,CAAC;MAC3C,CAAC,CAAC;MACFS,aAAa,CAAC,KAAK,CAAC;IACrB;EACD,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAGd,oBACCL,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACEL,UAAU,gBAAGb,OAAA;MAAAkB,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAC3CtB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,eACClB,OAAA,CAACH,iBAAiB,CAAC0B,QAAQ;QAACC,KAAK,EAAElB,WAAY;QAAAY,QAAA,EAC7CP;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACkB;IAAC,gBAC5B;EACF,gBACA,CAAC;AAEL,CAAC;AAAClB,EAAA,CArCID,WAAW;EAAA,QAEGR,SAAS;AAAA;AAAA8B,EAAA,GAFvBtB,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
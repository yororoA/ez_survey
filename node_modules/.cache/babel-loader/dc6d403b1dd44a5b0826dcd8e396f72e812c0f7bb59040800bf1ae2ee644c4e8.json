{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useRegisterUserMutation, useLoginUserMutation, useFindUserQuery, userApi } from \"../services/apis\";\nimport { useLogin } from '../utils/login';\nimport { register } from \"../utils/register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [entired, setEntired] = useState(false); // 是否全部填写\n  const [user, setUser] = useState(''); // 监测 user 输入框\n  const [pwd, setPWD] = useState(''); // 监测 pwd 输入框\n  // 使用 useCallback, 确保监测函数只在挂载时创建一次\n  const handleInputUser = useCallback(e => {\n    // user 监听器\n    setUser(e.target.value);\n  }, []);\n  const handleInputPWD = useCallback(e => {\n    // \tpwd 监听器\n    setPWD(e.target.value);\n  }, []);\n  const handleEntiredCheck = useCallback(() => {\n    // \tentired 监听器\n    if (!!user && !!pwd) setEntired(true);else setEntired(false);\n  }, []);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user,\n        placeholder: \"\\u7528\\u6237\\u540D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pwd,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u6CE8\\u518C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"hey+jN2OVf81rNojNOqlpDoWFCg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRegisterUserMutation","useLoginUserMutation","useFindUserQuery","userApi","useLogin","register","jsxDEV","_jsxDEV","Login","_s","entired","setEntired","user","setUser","pwd","setPWD","handleInputUser","e","target","value","handleInputPWD","handleEntiredCheck","children","action","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/login.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useRegisterUserMutation, useLoginUserMutation, useFindUserQuery, userApi} from \"../services/apis\";\r\nimport {useLogin} from '../utils/login'\r\nimport {register} from \"../utils/register\";\r\n\r\n\r\nconst Login = () => {\r\n\tconst [entired, setEntired] = useState(false); // 是否全部填写\r\n\tconst [user, setUser] = useState(''); // 监测 user 输入框\r\n\tconst [pwd, setPWD] = useState(''); // 监测 pwd 输入框\r\n\t// 使用 useCallback, 确保监测函数只在挂载时创建一次\r\n\tconst handleInputUser = useCallback((e) => {\r\n\t\t// user 监听器\r\n\t\tsetUser(e.target.value);\r\n\t}, []);\r\n\tconst handleInputPWD = useCallback((e) => {\r\n\t\t// \tpwd 监听器\r\n\t\tsetPWD(e.target.value);\r\n\t}, []);\r\n\tconst handleEntiredCheck = useCallback(() => {\r\n\t\t// \tentired 监听器\r\n\t\tif (!!user && !!pwd) setEntired(true);\r\n\t\telse setEntired(false);\r\n\t}, [])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form action=\"\">\r\n\t\t\t\t<input type=\"text\" value={user} placeholder=\"用户名\"/>\r\n\t\t\t\t<input type=\"text\" value={pwd} placeholder=\"请输入密码\"/>\r\n\t\t\t\t<button type=\"submit\">登录</button>\r\n\t\t\t\t<button type=\"submit\">注册</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC7D,SAAQC,uBAAuB,EAAEC,oBAAoB,EAAEC,gBAAgB,EAAEC,OAAO,QAAO,kBAAkB;AACzG,SAAQC,QAAQ,QAAO,gBAAgB;AACvC,SAAQC,QAAQ,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC;EACA,MAAMiB,eAAe,GAAGnB,WAAW,CAAEoB,CAAC,IAAK;IAC1C;IACAJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,cAAc,GAAGvB,WAAW,CAAEoB,CAAC,IAAK;IACzC;IACAF,MAAM,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,kBAAkB,GAAGxB,WAAW,CAAC,MAAM;IAC5C;IACA,IAAI,CAAC,CAACe,IAAI,IAAI,CAAC,CAACE,GAAG,EAAEH,UAAU,CAAC,IAAI,CAAC,CAAC,KACjCA,UAAU,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAGNb,SAAS,CAAC,MAAM,CAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCS,OAAA;IAAAe,QAAA,eACCf,OAAA;MAAMgB,MAAM,EAAC,EAAE;MAAAD,QAAA,gBACdf,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACL,KAAK,EAAEP,IAAK;QAACa,WAAW,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnDtB,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACL,KAAK,EAAEL,GAAI;QAACW,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpDtB,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjCtB,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAACpB,EAAA,CAjCID,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAmCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\components\\\\editSurvey\\\\addQue.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useReducer, useState } from 'react';\nimport { QueContext, QueDispatchContext } from \"./typeContext/typeContext\";\nimport Single from \"./ques/single\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction queReducer(que, action) {\n  switch (action.type) {\n    case 'single':\n      {\n        return /*#__PURE__*/_jsxDEV(Single, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this);\n      }\n    case 'checkbox':\n    case 'text':\n    case 'rating':\n    case 'slider':\n    case 'select':\n    case 'location':\n      return action.type;\n    default:\n      {\n        throw new Error('Unknown que type');\n      }\n  }\n}\nconst initialQue = 'single';\nlet tpe = 'single';\nconst AddQue = () => {\n  _s();\n  const [que, dispatch] = useReducer(queReducer, initialQue);\n  const handleCheckType = useCallback(e => {\n    // console.log(e);\n    // console.log(e.target.value)\n    tpe = e.target.value;\n    dispatch({\n      type: e.target.value\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleCheckType,\n      name: \"type\",\n      id: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"single\",\n        children: \"\\u5355\\u9009\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"checkbox\",\n        children: \"\\u591A\\u9009\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"text\",\n        children: \"\\u586B\\u7A7A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"rating\",\n        children: \"\\u8BC4\\u5206\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"slider\",\n        children: \"\\u6ED1\\u5757\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"select\",\n        children: \"\\u4E0B\\u62C9\\u6846\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"location\",\n        children: \"\\u5B9A\\u4F4D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(QueContext.Provider, {\n      value: que,\n      children: /*#__PURE__*/_jsxDEV(QueDispatchContext.Provider, {\n        value: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n_s(AddQue, \"Ob5ewZSHxpS5dCZPY0uFMefhmX4=\");\n_c = AddQue;\nexport default AddQue;\nexport { tpe };\nvar _c;\n$RefreshReg$(_c, \"AddQue\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useReducer","useState","QueContext","QueDispatchContext","Single","jsxDEV","_jsxDEV","queReducer","que","action","type","fileName","_jsxFileName","lineNumber","columnNumber","Error","initialQue","tpe","AddQue","_s","dispatch","handleCheckType","e","target","value","children","onChange","name","id","Provider","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/components/editSurvey/addQue.jsx"],"sourcesContent":["import React, {createContext, useCallback, useContext, useReducer, useState} from 'react';\r\nimport {QueContext, QueDispatchContext} from \"./typeContext/typeContext\";\r\nimport Single from \"./ques/single\";\r\n\r\n\r\nfunction queReducer(que, action) {\r\n\tswitch (action.type){\r\n\t\tcase 'single':{\r\n\t\t\treturn <Single/>;\r\n\t\t}\r\n\t\tcase 'checkbox':\r\n\t\tcase 'text':\r\n\t\tcase 'rating':\r\n\t\tcase 'slider':\r\n\t\tcase 'select':\r\n\t\tcase 'location':\r\n\t\t\treturn action.type;\r\n\t\tdefault:{\r\n\t\t\tthrow new Error('Unknown que type');\r\n\t\t}\r\n\t}\r\n}\r\nconst initialQue = 'single';\r\n\r\n\r\nlet tpe = 'single';\r\n\r\n\r\nconst AddQue = () => {\r\n\tconst [que, dispatch] = useReducer(queReducer, initialQue);\r\n\r\n\tconst handleCheckType = useCallback(e => {\r\n\t\t// console.log(e);\r\n\t\t// console.log(e.target.value)\r\n\t\ttpe = e.target.value;\r\n\t\tdispatch({\r\n\t\t\ttype: e.target.value,\r\n\t\t});\r\n\t}, []);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<select onChange={handleCheckType} name=\"type\" id=\"\">\r\n\t\t\t\t<option value=\"single\">单选</option>\r\n\t\t\t\t<option value=\"checkbox\">多选</option>\r\n\t\t\t\t<option value=\"text\">填空</option>\r\n\t\t\t\t<option value=\"rating\">评分</option>\r\n\t\t\t\t{/* 拖动滑动条选择数值 */}\r\n\t\t\t\t<option value=\"slider\">滑块</option>\r\n\t\t\t\t{/* 选项较多时, 如省份选择 */}\r\n\t\t\t\t<option value=\"select\">下拉框</option>\r\n\t\t\t\t<option value=\"location\">定位</option>\r\n\t\t\t</select>\r\n\t\t\t<QueContext.Provider value={que}>\r\n\t\t\t\t<QueDispatchContext.Provider value={dispatch}>\r\n\r\n\t\t\t\t</QueDispatchContext.Provider>\r\n\t\t\t</QueContext.Provider>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddQue;\r\nexport {tpe};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\main_nav_pages\\\\nav_pages\\\\published.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserSurveys } from \"../../../utils/getUserSurveys\";\nimport RenderPublished from \"../../../components/publishedDisplay/renderPublished\";\nimport { RenderPublishedContext } from \"../../../components/publishedDisplay/context/renderPublishedContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Published = () => {\n  _s();\n  console.log('>>>>>>>');\n  // 获得所有属于当前用户的已发布问卷\n  const [publishedSurveys, setPublishedSurveys] = useState([]);\n  // 是否存在已发布问卷\n  const [hasPublished, setHasPublished] = useState(false);\n  fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`).then(resp => {\n    console.log('>>>>>');\n    if (!resp.ok) {\n      throw new Error(`获取用户数据失败: ${resp.status}`);\n    }\n    return resp.json();\n  }).then(data => {\n    const surveys = data.data.surveys.filter(survey => survey.published === false);\n    if (surveys == null || surveys.length === 0) {\n      setHasPublished(false);\n    } else {\n      setHasPublished(true);\n    }\n  }).catch(err => {\n    if (err.message.includes('Failed to fetch')) {\n      console.error(`服务器都没开还想连服务器吗`);\n    } else {\n      console.error('嘟嘟嘟', err.message);\n    }\n  });\n  useEffect(() => {\n    // 获取已发布问卷\n    if (hasPublished) getUserSurveys(false).then(r => {\n      setPublishedSurveys(r);\n      console.log(r);\n      console.log('>>>>');\n    });\n  }, [hasPublished]);\n  return /*#__PURE__*/_jsxDEV(RenderPublishedContext.Provider, {\n    value: publishedSurveys,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hasPublished ? /*#__PURE__*/_jsxDEV(RenderPublished, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: '暂无已发布的问卷, 快去发布一份吧'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n_s(Published, \"v2eHekcZmO2EXrrjI/e5q62Yoeg=\");\n_c = Published;\nexport default Published;\nvar _c;\n$RefreshReg$(_c, \"Published\");","map":{"version":3,"names":["React","useEffect","useState","getUserSurveys","RenderPublished","RenderPublishedContext","jsxDEV","_jsxDEV","Published","_s","console","log","publishedSurveys","setPublishedSurveys","hasPublished","setHasPublished","fetch","localStorage","getItem","then","resp","ok","Error","status","json","data","surveys","filter","survey","published","length","catch","err","message","includes","error","r","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/main_nav_pages/nav_pages/published.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {getUserSurveys} from \"../../../utils/getUserSurveys\";\r\nimport RenderPublished from \"../../../components/publishedDisplay/renderPublished\";\r\nimport {RenderPublishedContext} from \"../../../components/publishedDisplay/context/renderPublishedContext\";\r\n\r\nconst Published = () => {\r\n\tconsole.log('>>>>>>>')\r\n\t// 获得所有属于当前用户的已发布问卷\r\n\tconst [publishedSurveys, setPublishedSurveys] = useState([]);\r\n\t// 是否存在已发布问卷\r\n\tconst [hasPublished, setHasPublished] = useState(false);\r\n\tfetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`)\r\n\t\t.then(resp => {\r\n\t\t\tconsole.log('>>>>>')\r\n\t\t\tif (!resp.ok) {\r\n\t\t\t\tthrow new Error(`获取用户数据失败: ${resp.status}`);\r\n\t\t\t}\r\n\t\t\treturn resp.json();\r\n\t\t})\r\n\t\t.then(data => {\r\n\t\t\tconst surveys = data.data.surveys.filter(survey => survey.published === false);\r\n\t\t\tif (surveys == null || surveys.length === 0) {\r\n\t\t\t\tsetHasPublished(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetHasPublished(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tif (err.message.includes('Failed to fetch')) {\r\n\t\t\t\tconsole.error(`服务器都没开还想连服务器吗`)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('嘟嘟嘟', err.message)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// 获取已发布问卷\r\n\t\tif (hasPublished) getUserSurveys(false).then(r => {\r\n\t\t\tsetPublishedSurveys(r);\r\n\t\t\tconsole.log(r);\r\n\t\t\tconsole.log('>>>>')\r\n\t\t});\r\n\t}, [hasPublished]);\r\n\r\n\treturn (\r\n\t\t<RenderPublishedContext.Provider value={publishedSurveys}>\r\n\t\t\t<div>\r\n\t\t\t\t{hasPublished ? <RenderPublished/> : <h1>{'暂无已发布的问卷, 快去发布一份吧'}</h1>}\r\n\t\t\t</div>\r\n\t\t</RenderPublishedContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default Published;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,cAAc,QAAO,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,sDAAsD;AAClF,SAAQC,sBAAsB,QAAO,qEAAqE;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3G,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACtB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D;EACA,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvDc,KAAK,CAAC,qCAAqCC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CACzEC,IAAI,CAACC,IAAI,IAAI;IACbV,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,CAACS,IAAI,CAACC,EAAE,EAAE;MACb,MAAM,IAAIC,KAAK,CAAC,aAAaF,IAAI,CAACG,MAAM,EAAE,CAAC;IAC5C;IACA,OAAOH,IAAI,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;IACb,MAAMC,OAAO,GAAGD,IAAI,CAACA,IAAI,CAACC,OAAO,CAACC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,SAAS,KAAK,KAAK,CAAC;IAC9E,IAAIH,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACI,MAAM,KAAK,CAAC,EAAE;MAC5Cf,eAAe,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACNA,eAAe,CAAC,IAAI,CAAC;IACtB;EACD,CAAC,CAAC,CACDgB,KAAK,CAACC,GAAG,IAAI;IACb,IAAIA,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MAC5CxB,OAAO,CAACyB,KAAK,CAAC,eAAe,CAAC;IAC/B,CAAC,MAAM;MACNzB,OAAO,CAACyB,KAAK,CAAC,KAAK,EAAEH,GAAG,CAACC,OAAO,CAAC;IAClC;EACD,CAAC,CAAC;EAGHhC,SAAS,CAAC,MAAM;IACf;IACA,IAAIa,YAAY,EAAEX,cAAc,CAAC,KAAK,CAAC,CAACgB,IAAI,CAACiB,CAAC,IAAI;MACjDvB,mBAAmB,CAACuB,CAAC,CAAC;MACtB1B,OAAO,CAACC,GAAG,CAACyB,CAAC,CAAC;MACd1B,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACpB,CAAC,CAAC;EACH,CAAC,EAAE,CAACG,YAAY,CAAC,CAAC;EAElB,oBACCP,OAAA,CAACF,sBAAsB,CAACgC,QAAQ;IAACC,KAAK,EAAE1B,gBAAiB;IAAA2B,QAAA,eACxDhC,OAAA;MAAAgC,QAAA,EACEzB,YAAY,gBAAGP,OAAA,CAACH,eAAe;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAAGpC,OAAA;QAAAgC,QAAA,EAAK;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC0B,CAAC;AAEpC,CAAC;AAAClC,EAAA,CA/CID,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\main_nav_pages\\\\nav_pages\\\\edit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport QuesList from \"../../../components/editSurvey/quesList\";\nimport AddQue from \"../../../components/editSurvey/addQue\";\nimport { GetTitleContext } from \"../../../components/editSurvey/context/getTitleContext\";\nimport { useCreateQueMutation, useSaveSurveyMutation, useUpdateSurveyMutation } from \"../../../services/apis\";\nimport { filterQueDetails } from \"../../../components/editSurvey/filterQueDetails\";\nimport { CancelEditContext, ConfirmEditContext, EditingQueContext, InitialDataContext, IsEditingContext, ReEditQueContext } from \"../../../components/editSurvey/context/reEditQueContext\";\nimport { updateUser } from \"../../../utils/updateUser\";\nimport { useNavigate } from \"react-router-dom\";\nimport edit from '../../../style/edit/edit.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const navigate = useNavigate();\n  // 监测是否正在添加某个问题\n  const [adding, setAdding] = useState(false);\n  // 正在添加的问题信息\n  const [addingTitle, setAddingTitle] = useState({});\n  // 是否添加完毕\n  const [addComplete, setAddComplete] = useState(false);\n  //  问题列表\n  const [ques, setQues] = useState([]);\n  // 检测是否保存或发布\n  const [draftOrPublish, setDraftOrPublish] = useState(false);\n\n  // 从草稿页面点击编辑跳转到publish时\n  // 检测sessionStorage中是否存在需要编辑的键值对, 若为null则不是从草稿页面跳转过来的\n  const storageSurveyTitle = sessionStorage.getItem('surveyTitleBefore');\n  const storageSurveyDescription = sessionStorage.getItem('surveyDescriptionBefore');\n  const isFromDrafts = storageSurveyTitle !== null || storageSurveyDescription !== null;\n\n  // 问卷标题\n  const [surveyTitle, setSurveyTitle] = useState(isFromDrafts ? storageSurveyTitle : '');\n  // 问卷描述\n  const [surveyDescr, setSurveyDescr] = useState(isFromDrafts ? storageSurveyDescription : '');\n  useEffect(() => {\n    if (isFromDrafts) {\n      // 如果跳转自drafts的编辑link\n      const nums = sessionStorage.length; // 相应draft从服务器拉取到本地的数据数目\n      const questionDatas = [];\n      for (let i = 0; i < nums; i++) {\n        // 读取每个数据的key, 若为题目key则存储在列表中, 用于之后上传给ques\n        const key = sessionStorage.key(i);\n        if (key === 'surveyTitleBefore' || key === 'surveyDescriptionBefore' || key === 'surveyTokenBefore' || key === 'queTokensBefore') {\n          continue;\n        }\n        const data = JSON.parse(sessionStorage.getItem(key));\n        questionDatas.push(data);\n      }\n      // 将data按index升序排序\n      questionDatas.sort((a, b) => a.index - b.index);\n      // 将所需数据传递给ques\n      const questions = [];\n      questionDatas.forEach(data => {\n        questions.push({\n          title: data.title,\n          type: data.type\n        });\n      });\n      setQues(questions);\n    }\n  }, [isFromDrafts]);\n\n  // 问卷标题\n  const handleTitleChange = useCallback(e => {\n    const newTitle = e.target.value;\n    setSurveyTitle(newTitle);\n    // 将标题存储到 sessionStorage\n    sessionStorage.setItem('surveyTitle', newTitle);\n  }, []);\n  // 问卷描述\n  const handleDescrChange = useCallback(e => {\n    const newDescr = e.target.value;\n    setSurveyDescr(newDescr);\n    // 将描述存储到 sessionStorage\n    sessionStorage.setItem('surveyDescription', newDescr);\n  }, []);\n\n  // 添加问题\n  const handleAddQue = useCallback(e => {\n    e.preventDefault();\n    setAdding(true);\n    setAddComplete(false);\n    setDraftOrPublish(false);\n    // 清除上一次草稿中保存的题目title, 避免因取消空标题的添加造成的清除前一个sessionStorage\n    setAddingTitle({\n      title: '',\n      id: Date.now()\n    });\n  }, [adding, addComplete]);\n  // 获得问题 title 用于定位 sessionStorage 中的存储\n  // 草稿---未确认添加\n  function draftTitle(title) {\n    console.log(title);\n    // 将获得的标题传给 addingTitle, 即正在使用的标题\n    setAddingTitle({\n      title,\n      id: Date.now()\n    });\n  }\n\n  // 确认添加---保存问题->ques\n  function saveTitle() {\n    if (addingTitle.title.length !== 0) {\n      const queType = JSON.parse(sessionStorage.getItem(addingTitle.title)).type;\n      setQues([...ques, {\n        ...addingTitle,\n        type: queType\n      }]);\n    } else {\n      alert('问题内容不可为空');\n    }\n  }\n\n  // 确认添加\n  const handleCompleteQue = e => {\n    e.preventDefault();\n    saveTitle();\n    setAdding(false);\n    setAddComplete(true);\n  };\n\n  // 取消添加\n  const handleCancel = useCallback(e => {\n    e.preventDefault();\n    setAdding(false);\n    setAddComplete(false);\n    setDraftOrPublish(false);\n    // 取消添加时移除sessionStorage中存储的临时信息\n    sessionStorage.removeItem(addingTitle.title);\n    // 清空当前问题草稿\n    setAddingTitle({});\n  }, [adding, addComplete, addingTitle]);\n\n  // 编辑问题\n  const [queToEdit, setQueToEdit] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [edintType, setEdingType] = useState(null);\n  const [editCompleted, setEditCompleted] = useState(false);\n  const [initialData, setInitialData] = useState(null);\n  const lastEditTitle = useRef('');\n\n  /*\r\n  * 编辑问题\r\n  * @title 需要编辑的问题title\r\n  * @deleteOrEdit Bool, true:delete, false:edit*/\n  function editQue(title, delteOrEdit) {\n    // 删除问题\n    if (delteOrEdit) {\n      setQues(prevQues => prevQues.filter(que => que.title !== title));\n      sessionStorage.removeItem(title);\n      setIsEditing(false);\n      setQueToEdit('');\n      return;\n    }\n    // 编辑问题\n    // 需要编辑的问题\n    const data = JSON.parse(sessionStorage.getItem(title));\n    console.log('点击编辑前的数据------', data);\n    const type = data.type;\n    setQueToEdit(title);\n    setIsEditing(true);\n    setEdingType(type);\n    // 将点击编辑前的数据保留下来\n    setInitialData(data);\n    lastEditTitle.current = title;\n  }\n\n  /*\r\n  * 确认编辑\r\n  * */\n  function confirmEdit(title) {\n    setQueToEdit(title);\n    setIsEditing(false);\n    setEditCompleted(true);\n    // 更新 ques\n    const newQues = ques;\n    newQues.forEach(que => {\n      if (que.title === lastEditTitle.current) {\n        que.title = title;\n        que.type = edintType;\n      }\n    });\n    setQues(newQues);\n  }\n\n  /*\r\n  * 取消编辑\r\n  * */\n  function cancelEdit() {\n    setQueToEdit('');\n    setIsEditing(false);\n    setEditCompleted(true);\n    // 重传 ques\n    setQues(ques);\n  }\n\n  // 将survey保存到草稿\n  const [doSaveDraft, {}] = useSaveSurveyMutation();\n  const [doSaveDraftQue, {}] = useCreateQueMutation();\n  const [doUpdateDraft, {}] = useUpdateSurveyMutation();\n  async function saveDraft(e) {\n    e.preventDefault();\n    // 1. 先上传survey的基础信息\n    const data = {\n      attributes: {\n        title: surveyTitle,\n        description: surveyDescr,\n        clientId: localStorage.getItem('token'),\n        published: false\n      }\n    };\n    if (!ques[0] || !surveyTitle || !surveyDescr) {\n      console.log('问题不可为空!');\n      return;\n    }\n    try {\n      const resp = await doSaveDraft(data).unwrap();\n      console.log('保存问卷成功', resp);\n      // 将surveyToken临时储存在本地, 用于问题上传的绑定\n      sessionStorage.setItem('tempSurveyToken', resp.data.documentId);\n    } catch (err) {\n      console.log('保存draft失败', err);\n    }\n    const surveyToken = sessionStorage.getItem('tempSurveyToken');\n    // 将该survey绑定给创建问卷的用户\n    await updateUser('surveys', {\n      id: surveyToken,\n      published: false\n    }, false);\n    // 2. 上传问题信息并绑定survey\n    sessionStorage.removeItem(''); // 移除会话存储中的空白token\n    const queTokens = [];\n    for (const [index, que] of ques.entries()) {\n      const detail = filterQueDetails(que, index, surveyToken);\n      if (!detail) continue;\n      try {\n        const resp = await doSaveDraftQue(detail).unwrap();\n        console.log('保存问题成功', resp);\n        // 将queToken保存在数组中, 用于后续更新survey中的questions\n        queTokens.push(resp.data.documentId);\n      } catch (err) {\n        console.log('保存问题失败', err);\n      }\n    }\n    // 3. 更新survey中的questions\n    data.attributes.questions = JSON.stringify(queTokens);\n    try {\n      const resp = await doUpdateDraft(data).unwrap();\n      console.log('绑定问题成功', resp);\n    } catch (err) {\n      console.log('绑定问题失败', err);\n    }\n    // 3.5 移除原来的draft相关内容\n    if (isFromDrafts) {\n      try {\n        const resp = await fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`);\n        const result = await resp.json();\n        console.log(result);\n        const surveys = result.data.surveys;\n        const surveyTokenBefore = sessionStorage.getItem('surveyTokenBefore');\n        // 移除原survey绑定的question\n        const surveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`);\n        const surveyResult = await surveyResp.json();\n        const quesBefore = surveyResult.data.questions;\n        for (const q of quesBefore) {\n          const qresp = await fetch(`http://localhost:1337/api/quests/${q}`, {\n            method: 'DELETE'\n          });\n          if (!resp.ok) {\n            console.error(`删除原问题失败: ${resp.status}`);\n          }\n        }\n        // 移除原survey\n        const delSurveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`, {\n          method: 'DELETE'\n        });\n        if (!delSurveyResp.ok) {\n          console.error(`移除原survey失败: ${delSurveyResp.status}`);\n        }\n        // 移除绑定surveys中的原问卷id\n\n        surveys.forEach((survey, index) => {\n          if (survey.id === surveyTokenBefore) {\n            surveys.splice(index, 1);\n          }\n        });\n        // 将移除了原surveyId的surveys覆盖给client\n        await updateUser('surveys', surveys, true);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    // 4. 清除创建问卷产生的会话存储, 以免影响后续使用\n    sessionStorage.clear();\n    setDraftOrPublish(true);\n    // // 直接刷新页面, 绕开因清理sessionStorage可能造成的null错误\n    // window.location.reload();\n    navigate('../draft');\n  }\n\n  // 取消问卷\n  function cancelSurvey(e) {\n    e.preventDefault();\n    // 清除创建问卷产生的会话存储, 以免影响后续使用\n    sessionStorage.clear();\n    // 清理缓存\n    setQues([]);\n    setSurveyTitle('');\n    setSurveyDescr('');\n    if (isFromDrafts) navigate('../draft');\n  }\n  async function publishSurvey(e) {\n    e.preventDefault();\n    // 1. 先上传survey的基础信息\n    const data = {\n      attributes: {\n        title: surveyTitle,\n        description: surveyDescr,\n        clientId: localStorage.getItem('token'),\n        published: true,\n        endCollection: false\n      }\n    };\n    if (!ques[0] || !surveyTitle || !surveyDescr) {\n      console.log('问题不可为空!');\n      return;\n    }\n    try {\n      const resp = await doSaveDraft(data).unwrap();\n      console.log('保存问卷成功', resp);\n      // 将surveyToken临时储存在本地, 用于问题上传的绑定\n      sessionStorage.setItem('tempSurveyToken', resp.data.documentId);\n    } catch (err) {\n      console.log('保存draft失败', err);\n    }\n    const surveyToken = sessionStorage.getItem('tempSurveyToken');\n    // 将该survey绑定给创建问卷的用户\n    await updateUser('surveys', {\n      id: surveyToken,\n      published: true\n    }, false);\n    // 2. 上传问题信息并绑定survey\n    sessionStorage.removeItem(''); // 移除会话存储中的空白token\n    const queTokens = [];\n    for (const [index, que] of ques.entries()) {\n      const detail = filterQueDetails(que, index, surveyToken);\n      if (!detail) continue;\n      try {\n        const resp = await doSaveDraftQue(detail).unwrap();\n        console.log('保存问题成功', resp);\n        // 将queToken保存在数组中, 用于后续更新survey中的questions\n        queTokens.push(resp.data.documentId);\n      } catch (err) {\n        console.log('保存问题失败', err);\n      }\n    }\n    // 3. 更新survey中的questions\n    data.attributes.questions = JSON.stringify(queTokens);\n    try {\n      const resp = await doUpdateDraft(data).unwrap();\n      console.log('绑定问题成功', resp);\n    } catch (err) {\n      console.log('绑定问题失败', err);\n    }\n    // 3.5 移除原来的draft相关内容\n    if (isFromDrafts) {\n      try {\n        const resp = await fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`);\n        const result = await resp.json();\n        console.log(result);\n        const surveys = result.data.surveys;\n        const surveyTokenBefore = sessionStorage.getItem('surveyTokenBefore');\n        // 移除原survey绑定的question\n        const surveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`);\n        const surveyResult = await surveyResp.json();\n        const quesBefore = surveyResult.data.questions;\n        for (const q of quesBefore) {\n          const qresp = await fetch(`http://localhost:1337/api/quests/${q}`, {\n            method: 'DELETE'\n          });\n          if (!resp.ok) {\n            console.error(`删除原问题失败: ${resp.status}`);\n          }\n        }\n        // 移除原survey\n        const delSurveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`, {\n          method: 'DELETE'\n        });\n        if (!delSurveyResp.ok) {\n          console.error(`移除原survey失败: ${delSurveyResp.status}`);\n        }\n        // 移除绑定surveys中的原问卷id\n\n        surveys.forEach((survey, index) => {\n          if (survey.id === surveyTokenBefore) {\n            surveys.splice(index, 1);\n          }\n        });\n        // 将移除了原surveyId的surveys覆盖给client\n        await updateUser('surveys', surveys, true);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    // 4. 清除创建问卷产生的会话存储, 以免影响后续使用\n    sessionStorage.clear();\n    setDraftOrPublish(true);\n    // // 直接刷新页面, 绕开因清理sessionStorage可能造成的null错误\n    // window.location.reload();\n    navigate('../published');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: edit.entire,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: edit.summaries,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleTitleChange,\n          type: \"text\",\n          value: surveyTitle,\n          placeholder: '请输入问卷标题'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleDescrChange,\n          type: \"text\",\n          value: surveyDescr,\n          placeholder: '请输入问卷描述'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: edit.headerButtonBox,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveDraft,\n          style: {\n            backgroundColor: 'transparent'\n          },\n          children: '保存草稿'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: edit.rightBtns,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: publishSurvey,\n            style: {\n              color: \"black\"\n            },\n            children: '发布问卷'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 7\n          }, this), !!sessionStorage.length && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelSurvey,\n            style: {\n              backgroundColor: '#ff760e'\n            },\n            children: '取消'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: edit.quesDisplayZone,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: '问卷编辑'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(GetTitleContext.Provider, {\n        value: draftTitle,\n        children: /*#__PURE__*/_jsxDEV(ConfirmEditContext.Provider, {\n          value: confirmEdit,\n          children: /*#__PURE__*/_jsxDEV(CancelEditContext.Provider, {\n            value: cancelEdit,\n            children: /*#__PURE__*/_jsxDEV(InitialDataContext.Provider, {\n              value: initialData,\n              children: [/*#__PURE__*/_jsxDEV(ReEditQueContext.Provider, {\n                value: editQue,\n                children: /*#__PURE__*/_jsxDEV(IsEditingContext.Provider, {\n                  value: isEditing,\n                  children: /*#__PURE__*/_jsxDEV(EditingQueContext.Provider, {\n                    value: queToEdit,\n                    children: !draftOrPublish && /*#__PURE__*/_jsxDEV(QuesList, {\n                      ques: ques,\n                      editingType: edintType,\n                      editCompleted: editCompleted\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [!adding && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddQue,\n                  children: '添加问题'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 22\n                }, this), adding && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(AddQue, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCompleteQue,\n                    style: {\n                      backgroundColor: '#92e3ff'\n                    },\n                    children: '确认'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCancel,\n                    children: '取消'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 3\n  }, this);\n};\n_s(Edit, \"mOeKmiwgzncTW06Fmj84fIctZZ8=\", false, function () {\n  return [useNavigate, useSaveSurveyMutation, useCreateQueMutation, useUpdateSurveyMutation];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","QuesList","AddQue","GetTitleContext","useCreateQueMutation","useSaveSurveyMutation","useUpdateSurveyMutation","filterQueDetails","CancelEditContext","ConfirmEditContext","EditingQueContext","InitialDataContext","IsEditingContext","ReEditQueContext","updateUser","useNavigate","edit","jsxDEV","_jsxDEV","Fragment","_Fragment","Edit","_s","navigate","adding","setAdding","addingTitle","setAddingTitle","addComplete","setAddComplete","ques","setQues","draftOrPublish","setDraftOrPublish","storageSurveyTitle","sessionStorage","getItem","storageSurveyDescription","isFromDrafts","surveyTitle","setSurveyTitle","surveyDescr","setSurveyDescr","nums","length","questionDatas","i","key","data","JSON","parse","push","sort","a","b","index","questions","forEach","title","type","handleTitleChange","e","newTitle","target","value","setItem","handleDescrChange","newDescr","handleAddQue","preventDefault","id","Date","now","draftTitle","console","log","saveTitle","queType","alert","handleCompleteQue","handleCancel","removeItem","queToEdit","setQueToEdit","isEditing","setIsEditing","edintType","setEdingType","editCompleted","setEditCompleted","initialData","setInitialData","lastEditTitle","editQue","delteOrEdit","prevQues","filter","que","current","confirmEdit","newQues","cancelEdit","doSaveDraft","doSaveDraftQue","doUpdateDraft","saveDraft","attributes","description","clientId","localStorage","published","resp","unwrap","documentId","err","surveyToken","queTokens","entries","detail","stringify","fetch","result","json","surveys","surveyTokenBefore","surveyResp","surveyResult","quesBefore","q","qresp","method","ok","error","status","delSurveyResp","survey","splice","clear","cancelSurvey","publishSurvey","endCollection","className","entire","children","summaries","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","headerButtonBox","onClick","style","backgroundColor","rightBtns","color","quesDisplayZone","Provider","editingType","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/main_nav_pages/nav_pages/edit.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport QuesList from \"../../../components/editSurvey/quesList\";\r\nimport AddQue from \"../../../components/editSurvey/addQue\";\r\nimport {GetTitleContext} from \"../../../components/editSurvey/context/getTitleContext\";\r\nimport {useCreateQueMutation, useSaveSurveyMutation, useUpdateSurveyMutation} from \"../../../services/apis\";\r\nimport {filterQueDetails} from \"../../../components/editSurvey/filterQueDetails\";\r\nimport {\r\n\tCancelEditContext,\r\n\tConfirmEditContext,\r\n\tEditingQueContext, InitialDataContext,\r\n\tIsEditingContext,\r\n\tReEditQueContext\r\n} from \"../../../components/editSurvey/context/reEditQueContext\";\r\nimport {updateUser} from \"../../../utils/updateUser\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport edit from '../../../style/edit/edit.module.css'\r\n\r\n\r\nconst Edit = () => {\r\n\tconst navigate = useNavigate();\r\n\t// 监测是否正在添加某个问题\r\n\tconst [adding, setAdding] = useState(false);\r\n\t// 正在添加的问题信息\r\n\tconst [addingTitle, setAddingTitle] = useState({});\r\n\t// 是否添加完毕\r\n\tconst [addComplete, setAddComplete] = useState(false);\r\n\t//  问题列表\r\n\tconst [ques, setQues] = useState([]);\r\n\t// 检测是否保存或发布\r\n\tconst [draftOrPublish, setDraftOrPublish] = useState(false);\r\n\r\n\t// 从草稿页面点击编辑跳转到publish时\r\n\t// 检测sessionStorage中是否存在需要编辑的键值对, 若为null则不是从草稿页面跳转过来的\r\n\tconst storageSurveyTitle = sessionStorage.getItem('surveyTitleBefore');\r\n\tconst storageSurveyDescription = sessionStorage.getItem('surveyDescriptionBefore');\r\n\tconst isFromDrafts = (storageSurveyTitle !== null || storageSurveyDescription !== null);\r\n\r\n\t// 问卷标题\r\n\tconst [surveyTitle, setSurveyTitle] = useState(isFromDrafts ? storageSurveyTitle : '');\r\n\t// 问卷描述\r\n\tconst [surveyDescr, setSurveyDescr] = useState(isFromDrafts ? storageSurveyDescription : '');\r\n\tuseEffect(() => {\r\n\t\tif (isFromDrafts) { // 如果跳转自drafts的编辑link\r\n\t\t\tconst nums = sessionStorage.length; // 相应draft从服务器拉取到本地的数据数目\r\n\t\t\tconst questionDatas = [];\r\n\t\t\tfor (let i = 0; i < nums; i++) {\r\n\t\t\t\t// 读取每个数据的key, 若为题目key则存储在列表中, 用于之后上传给ques\r\n\t\t\t\tconst key = sessionStorage.key(i);\r\n\t\t\t\tif (key === 'surveyTitleBefore' || key === 'surveyDescriptionBefore' || key === 'surveyTokenBefore' || key === 'queTokensBefore') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst data = JSON.parse(sessionStorage.getItem(key));\r\n\t\t\t\tquestionDatas.push(data);\r\n\t\t\t}\r\n\t\t\t// 将data按index升序排序\r\n\t\t\tquestionDatas.sort((a, b) => a.index - b.index);\r\n\t\t\t// 将所需数据传递给ques\r\n\t\t\tconst questions = [];\r\n\t\t\tquestionDatas.forEach(data => {\r\n\t\t\t\tquestions.push({title: data.title, type: data.type});\r\n\t\t\t});\r\n\t\t\tsetQues(questions);\r\n\t\t}\r\n\t}, [isFromDrafts]);\r\n\r\n\t// 问卷标题\r\n\tconst handleTitleChange = useCallback(e => {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tsetSurveyTitle(newTitle);\r\n\t\t// 将标题存储到 sessionStorage\r\n\t\tsessionStorage.setItem('surveyTitle', newTitle);\r\n\t}, []);\r\n\t// 问卷描述\r\n\tconst handleDescrChange = useCallback(e => {\r\n\t\tconst newDescr = e.target.value;\r\n\t\tsetSurveyDescr(newDescr);\r\n\t\t// 将描述存储到 sessionStorage\r\n\t\tsessionStorage.setItem('surveyDescription', newDescr);\r\n\t}, [])\r\n\r\n\t// 添加问题\r\n\tconst handleAddQue = useCallback((e) => {\r\n\t\te.preventDefault();\r\n\t\tsetAdding(true);\r\n\t\tsetAddComplete(false);\r\n\t\tsetDraftOrPublish(false);\r\n\t\t// 清除上一次草稿中保存的题目title, 避免因取消空标题的添加造成的清除前一个sessionStorage\r\n\t\tsetAddingTitle({title: '', id: Date.now()});\r\n\t}, [adding, addComplete]);\r\n\t// 获得问题 title 用于定位 sessionStorage 中的存储\r\n\t// 草稿---未确认添加\r\n\tfunction draftTitle(title) {\r\n\t\tconsole.log(title);\r\n\t\t// 将获得的标题传给 addingTitle, 即正在使用的标题\r\n\t\tsetAddingTitle({title, id: Date.now()});\r\n\t}\r\n\r\n\t// 确认添加---保存问题->ques\r\n\tfunction saveTitle() {\r\n\t\tif (addingTitle.title.length !== 0) {\r\n\t\t\tconst queType = JSON.parse(sessionStorage.getItem(addingTitle.title)).type;\r\n\t\t\tsetQues([...ques, {...addingTitle, type: queType}]);\r\n\t\t} else {\r\n\t\t\talert('问题内容不可为空')\r\n\t\t}\r\n\t}\r\n\r\n\t// 确认添加\r\n\tconst handleCompleteQue = e => {\r\n\t\te.preventDefault()\r\n\t\tsaveTitle();\r\n\t\tsetAdding(false);\r\n\t\tsetAddComplete(true);\r\n\t};\r\n\r\n\r\n\t// 取消添加\r\n\tconst handleCancel = useCallback(e => {\r\n\t\te.preventDefault();\r\n\t\tsetAdding(false);\r\n\t\tsetAddComplete(false);\r\n\t\tsetDraftOrPublish(false);\r\n\t\t// 取消添加时移除sessionStorage中存储的临时信息\r\n\t\tsessionStorage.removeItem(addingTitle.title);\r\n\t\t// 清空当前问题草稿\r\n\t\tsetAddingTitle({});\r\n\t}, [adding, addComplete, addingTitle])\r\n\r\n\r\n\t// 编辑问题\r\n\tconst [queToEdit, setQueToEdit] = useState('');\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst [edintType, setEdingType] = useState(null);\r\n\tconst [editCompleted, setEditCompleted] = useState(false);\r\n\tconst [initialData, setInitialData] = useState(null);\r\n\tconst lastEditTitle = useRef('');\r\n\r\n\t/*\r\n\t* 编辑问题\r\n\t* @title 需要编辑的问题title\r\n\t* @deleteOrEdit Bool, true:delete, false:edit*/\r\n\tfunction editQue(title, delteOrEdit) {\r\n\t\t// 删除问题\r\n\t\tif (delteOrEdit) {\r\n\t\t\tsetQues(prevQues => prevQues.filter(que => que.title !== title));\r\n\t\t\tsessionStorage.removeItem(title);\r\n\t\t\tsetIsEditing(false);\r\n\t\t\tsetQueToEdit('');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 编辑问题\r\n\t\t// 需要编辑的问题\r\n\t\tconst data = JSON.parse(sessionStorage.getItem(title));\r\n\t\tconsole.log('点击编辑前的数据------', data);\r\n\t\tconst type = data.type;\r\n\t\tsetQueToEdit(title);\r\n\t\tsetIsEditing(true);\r\n\t\tsetEdingType(type)\r\n\t\t// 将点击编辑前的数据保留下来\r\n\t\tsetInitialData(data);\r\n\t\tlastEditTitle.current = title;\r\n\t}\r\n\r\n\t/*\r\n\t* 确认编辑\r\n\t* */\r\n\tfunction confirmEdit(title) {\r\n\t\tsetQueToEdit(title);\r\n\t\tsetIsEditing(false);\r\n\t\tsetEditCompleted(true);\r\n\t\t// 更新 ques\r\n\t\tconst newQues = ques;\r\n\t\tnewQues.forEach(que => {\r\n\t\t\tif (que.title === lastEditTitle.current) {\r\n\t\t\t\tque.title = title;\r\n\t\t\t\tque.type = edintType;\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetQues(newQues);\r\n\t}\r\n\r\n\t/*\r\n\t* 取消编辑\r\n\t* */\r\n\tfunction cancelEdit() {\r\n\t\tsetQueToEdit('');\r\n\t\tsetIsEditing(false);\r\n\t\tsetEditCompleted(true);\r\n\t\t// 重传 ques\r\n\t\tsetQues(ques);\r\n\t}\r\n\r\n\t// 将survey保存到草稿\r\n\tconst [doSaveDraft, {}] = useSaveSurveyMutation();\r\n\tconst [doSaveDraftQue, {}] = useCreateQueMutation();\r\n\tconst [doUpdateDraft, {}] = useUpdateSurveyMutation();\r\n\r\n\tasync function saveDraft(e) {\r\n\t\te.preventDefault();\r\n\t\t// 1. 先上传survey的基础信息\r\n\t\tconst data = {\r\n\t\t\tattributes: {\r\n\t\t\t\ttitle: surveyTitle,\r\n\t\t\t\tdescription: surveyDescr,\r\n\t\t\t\tclientId: localStorage.getItem('token'),\r\n\t\t\t\tpublished: false\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (!ques[0] || !surveyTitle || !surveyDescr) {\r\n\t\t\tconsole.log('问题不可为空!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst resp = await doSaveDraft(data).unwrap();\r\n\t\t\tconsole.log('保存问卷成功', resp);\r\n\t\t\t// 将surveyToken临时储存在本地, 用于问题上传的绑定\r\n\t\t\tsessionStorage.setItem('tempSurveyToken', resp.data.documentId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('保存draft失败', err);\r\n\t\t}\r\n\t\tconst surveyToken = sessionStorage.getItem('tempSurveyToken');\r\n\t\t// 将该survey绑定给创建问卷的用户\r\n\t\tawait updateUser('surveys', {id: surveyToken, published: false}, false);\r\n\t\t// 2. 上传问题信息并绑定survey\r\n\t\tsessionStorage.removeItem(''); // 移除会话存储中的空白token\r\n\t\tconst queTokens = [];\r\n\t\tfor (const [index, que] of ques.entries()) {\r\n\t\t\tconst detail = filterQueDetails(que, index, surveyToken);\r\n\t\t\tif (!detail) continue;\r\n\t\t\ttry {\r\n\t\t\t\tconst resp = await doSaveDraftQue(detail).unwrap();\r\n\t\t\t\tconsole.log('保存问题成功', resp);\r\n\t\t\t\t// 将queToken保存在数组中, 用于后续更新survey中的questions\r\n\t\t\t\tqueTokens.push(resp.data.documentId);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log('保存问题失败', err);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 3. 更新survey中的questions\r\n\t\tdata.attributes.questions = JSON.stringify(queTokens);\r\n\t\ttry {\r\n\t\t\tconst resp = await doUpdateDraft(data).unwrap();\r\n\t\t\tconsole.log('绑定问题成功', resp);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('绑定问题失败', err);\r\n\t\t}\r\n\t\t// 3.5 移除原来的draft相关内容\r\n\t\tif (isFromDrafts) {\r\n\t\t\ttry {\r\n\t\t\t\tconst resp = await fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`);\r\n\t\t\t\tconst result = await resp.json();\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tconst surveys = result.data.surveys;\r\n\t\t\t\tconst surveyTokenBefore = sessionStorage.getItem('surveyTokenBefore');\r\n\t\t\t\t// 移除原survey绑定的question\r\n\t\t\t\tconst surveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`);\r\n\t\t\t\tconst surveyResult = await surveyResp.json();\r\n\t\t\t\tconst quesBefore = surveyResult.data.questions;\r\n\t\t\t\tfor (const q of quesBefore) {\r\n\t\t\t\t\tconst qresp = await fetch(`http://localhost:1337/api/quests/${q}`, {\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (!resp.ok) {\r\n\t\t\t\t\t\tconsole.error(`删除原问题失败: ${resp.status}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 移除原survey\r\n\t\t\t\tconst delSurveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`, {\r\n\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t});\r\n\t\t\t\tif (!delSurveyResp.ok) {\r\n\t\t\t\t\tconsole.error(`移除原survey失败: ${delSurveyResp.status}`);\r\n\t\t\t\t}\r\n\t\t\t\t// 移除绑定surveys中的原问卷id\r\n\r\n\t\t\t\tsurveys.forEach((survey, index) => {\r\n\t\t\t\t\tif (survey.id === surveyTokenBefore) {\r\n\t\t\t\t\t\tsurveys.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// 将移除了原surveyId的surveys覆盖给client\r\n\t\t\t\tawait updateUser('surveys', surveys, true);\r\n\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// 4. 清除创建问卷产生的会话存储, 以免影响后续使用\r\n\t\tsessionStorage.clear();\r\n\t\tsetDraftOrPublish(true);\r\n\t\t// // 直接刷新页面, 绕开因清理sessionStorage可能造成的null错误\r\n\t\t// window.location.reload();\r\n\t\tnavigate('../draft');\r\n\t}\r\n\r\n\t// 取消问卷\r\n\tfunction cancelSurvey(e) {\r\n\t\te.preventDefault();\r\n\t\t// 清除创建问卷产生的会话存储, 以免影响后续使用\r\n\t\tsessionStorage.clear();\r\n\t\t// 清理缓存\r\n\t\tsetQues([]);\r\n\t\tsetSurveyTitle('');\r\n\t\tsetSurveyDescr('');\r\n\t\tif (isFromDrafts) navigate('../draft');\r\n\t}\r\n\r\n\tasync function publishSurvey(e) {\r\n\t\te.preventDefault();\r\n\t\t// 1. 先上传survey的基础信息\r\n\t\tconst data = {\r\n\t\t\tattributes: {\r\n\t\t\t\ttitle: surveyTitle,\r\n\t\t\t\tdescription: surveyDescr,\r\n\t\t\t\tclientId: localStorage.getItem('token'),\r\n\t\t\t\tpublished: true,\r\n\t\t\t\tendCollection: false\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (!ques[0] || !surveyTitle || !surveyDescr) {\r\n\t\t\tconsole.log('问题不可为空!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst resp = await doSaveDraft(data).unwrap();\r\n\t\t\tconsole.log('保存问卷成功', resp);\r\n\t\t\t// 将surveyToken临时储存在本地, 用于问题上传的绑定\r\n\t\t\tsessionStorage.setItem('tempSurveyToken', resp.data.documentId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('保存draft失败', err);\r\n\t\t}\r\n\t\tconst surveyToken = sessionStorage.getItem('tempSurveyToken');\r\n\t\t// 将该survey绑定给创建问卷的用户\r\n\t\tawait updateUser('surveys', {id: surveyToken, published: true}, false);\r\n\t\t// 2. 上传问题信息并绑定survey\r\n\t\tsessionStorage.removeItem(''); // 移除会话存储中的空白token\r\n\t\tconst queTokens = [];\r\n\t\tfor (const [index, que] of ques.entries()) {\r\n\t\t\tconst detail = filterQueDetails(que, index, surveyToken);\r\n\t\t\tif (!detail) continue;\r\n\t\t\ttry {\r\n\t\t\t\tconst resp = await doSaveDraftQue(detail).unwrap();\r\n\t\t\t\tconsole.log('保存问题成功', resp);\r\n\t\t\t\t// 将queToken保存在数组中, 用于后续更新survey中的questions\r\n\t\t\t\tqueTokens.push(resp.data.documentId);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log('保存问题失败', err);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 3. 更新survey中的questions\r\n\t\tdata.attributes.questions = JSON.stringify(queTokens);\r\n\t\ttry {\r\n\t\t\tconst resp = await doUpdateDraft(data).unwrap();\r\n\t\t\tconsole.log('绑定问题成功', resp);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('绑定问题失败', err);\r\n\t\t}\r\n\t\t// 3.5 移除原来的draft相关内容\r\n\t\tif (isFromDrafts) {\r\n\t\t\ttry {\r\n\t\t\t\tconst resp = await fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`);\r\n\t\t\t\tconst result = await resp.json();\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tconst surveys = result.data.surveys;\r\n\t\t\t\tconst surveyTokenBefore = sessionStorage.getItem('surveyTokenBefore');\r\n\t\t\t\t// 移除原survey绑定的question\r\n\t\t\t\tconst surveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`);\r\n\t\t\t\tconst surveyResult = await surveyResp.json();\r\n\t\t\t\tconst quesBefore = surveyResult.data.questions;\r\n\t\t\t\tfor (const q of quesBefore) {\r\n\t\t\t\t\tconst qresp = await fetch(`http://localhost:1337/api/quests/${q}`, {\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (!resp.ok) {\r\n\t\t\t\t\t\tconsole.error(`删除原问题失败: ${resp.status}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 移除原survey\r\n\t\t\t\tconst delSurveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyTokenBefore}`, {\r\n\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t});\r\n\t\t\t\tif (!delSurveyResp.ok) {\r\n\t\t\t\t\tconsole.error(`移除原survey失败: ${delSurveyResp.status}`);\r\n\t\t\t\t}\r\n\t\t\t\t// 移除绑定surveys中的原问卷id\r\n\r\n\t\t\t\tsurveys.forEach((survey, index) => {\r\n\t\t\t\t\tif (survey.id === surveyTokenBefore) {\r\n\t\t\t\t\t\tsurveys.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// 将移除了原surveyId的surveys覆盖给client\r\n\t\t\t\tawait updateUser('surveys', surveys, true);\r\n\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// 4. 清除创建问卷产生的会话存储, 以免影响后续使用\r\n\t\tsessionStorage.clear();\r\n\t\tsetDraftOrPublish(true);\r\n\t\t// // 直接刷新页面, 绕开因清理sessionStorage可能造成的null错误\r\n\t\t// window.location.reload();\r\n\t\tnavigate('../published');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={edit.entire}>\r\n\t\t\t<header>\r\n\t\t\t\t<div className={edit.summaries}>\r\n\t\t\t\t\t<input onChange={handleTitleChange} type=\"text\" value={surveyTitle} placeholder={'请输入问卷标题'}/>\r\n\t\t\t\t\t<input onChange={handleDescrChange} type=\"text\" value={surveyDescr} placeholder={'请输入问卷描述'}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={edit.headerButtonBox}>\r\n\t\t\t\t\t<button onClick={saveDraft} style={{\r\n\t\t\t\t\t\tbackgroundColor: 'transparent'\r\n\t\t\t\t\t}}>{'保存草稿'}</button>\r\n\t\t\t\t\t<div className={edit.rightBtns}>\r\n\t\t\t\t\t\t<button onClick={publishSurvey} style={{\r\n\t\t\t\t\t\t\tcolor: \"black\"\r\n\t\t\t\t\t\t}}>{'发布问卷'}</button>\r\n\t\t\t\t\t\t{!!sessionStorage.length && <button onClick={cancelSurvey} style={{\r\n\t\t\t\t\t\t\tbackgroundColor: '#ff760e'\r\n\t\t\t\t\t\t}}>{'取消'}</button>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<div className={edit.quesDisplayZone}>\r\n\t\t\t\t<header>{'问卷编辑'}</header>\r\n\t\t\t\t<GetTitleContext.Provider value={draftTitle}>\r\n\t\t\t\t\t<ConfirmEditContext.Provider value={confirmEdit}>\r\n\t\t\t\t\t\t<CancelEditContext.Provider value={cancelEdit}>\r\n\t\t\t\t\t\t\t<InitialDataContext.Provider value={initialData}>\r\n\t\t\t\t\t\t\t\t<ReEditQueContext.Provider value={editQue}>\r\n\t\t\t\t\t\t\t\t\t<IsEditingContext.Provider value={isEditing}>\r\n\t\t\t\t\t\t\t\t\t\t<EditingQueContext.Provider value={queToEdit}>\r\n\t\t\t\t\t\t\t\t\t\t\t{!draftOrPublish &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t<QuesList ques={ques} editingType={edintType} editCompleted={editCompleted}/>}\r\n\t\t\t\t\t\t\t\t\t\t</EditingQueContext.Provider>\r\n\t\t\t\t\t\t\t\t\t</IsEditingContext.Provider>\r\n\t\t\t\t\t\t\t\t</ReEditQueContext.Provider>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{!adding && <button onClick={handleAddQue}>{'添加问题'}</button>}\r\n\t\t\t\t\t\t\t\t\t{adding && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* 使用context传递获取标题的函数 */}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* 存储到草稿中, 确认添加时通过handleCompleteQue将问题存储到ques, 取消时通过handleCancel移除草稿 */}\r\n\t\t\t\t\t\t\t\t\t\t\t<AddQue/>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={handleCompleteQue} style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#92e3ff'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>{'确认'}</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={handleCancel}>{'取消'}</button>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</InitialDataContext.Provider>\r\n\t\t\t\t\t\t</CancelEditContext.Provider>\r\n\t\t\t\t\t</ConfirmEditContext.Provider>\r\n\t\t\t\t</GetTitleContext.Provider>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Edit;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACrE,OAAOC,QAAQ,MAAM,yCAAyC;AAC9D,OAAOC,MAAM,MAAM,uCAAuC;AAC1D,SAAQC,eAAe,QAAO,wDAAwD;AACtF,SAAQC,oBAAoB,EAAEC,qBAAqB,EAAEC,uBAAuB,QAAO,wBAAwB;AAC3G,SAAQC,gBAAgB,QAAO,iDAAiD;AAChF,SACCC,iBAAiB,EACjBC,kBAAkB,EAClBC,iBAAiB,EAAEC,kBAAkB,EACrCC,gBAAgB,EAChBC,gBAAgB,QACV,yDAAyD;AAChE,SAAQC,UAAU,QAAO,2BAA2B;AACpD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,qCAAqC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B;EACA,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACA,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD;EACA,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD;EACA,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA;EACA,MAAMkC,kBAAkB,GAAGC,cAAc,CAACC,OAAO,CAAC,mBAAmB,CAAC;EACtE,MAAMC,wBAAwB,GAAGF,cAAc,CAACC,OAAO,CAAC,yBAAyB,CAAC;EAClF,MAAME,YAAY,GAAIJ,kBAAkB,KAAK,IAAI,IAAIG,wBAAwB,KAAK,IAAK;;EAEvF;EACA,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAACsC,YAAY,GAAGJ,kBAAkB,GAAG,EAAE,CAAC;EACtF;EACA,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAACsC,YAAY,GAAGD,wBAAwB,GAAG,EAAE,CAAC;EAC5FvC,SAAS,CAAC,MAAM;IACf,IAAIwC,YAAY,EAAE;MAAE;MACnB,MAAMK,IAAI,GAAGR,cAAc,CAACS,MAAM,CAAC,CAAC;MACpC,MAAMC,aAAa,GAAG,EAAE;MACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,EAAE,EAAE;QAC9B;QACA,MAAMC,GAAG,GAAGZ,cAAc,CAACY,GAAG,CAACD,CAAC,CAAC;QACjC,IAAIC,GAAG,KAAK,mBAAmB,IAAIA,GAAG,KAAK,yBAAyB,IAAIA,GAAG,KAAK,mBAAmB,IAAIA,GAAG,KAAK,iBAAiB,EAAE;UACjI;QACD;QACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACf,cAAc,CAACC,OAAO,CAACW,GAAG,CAAC,CAAC;QACpDF,aAAa,CAACM,IAAI,CAACH,IAAI,CAAC;MACzB;MACA;MACAH,aAAa,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC;MAC/C;MACA,MAAMC,SAAS,GAAG,EAAE;MACpBX,aAAa,CAACY,OAAO,CAACT,IAAI,IAAI;QAC7BQ,SAAS,CAACL,IAAI,CAAC;UAACO,KAAK,EAAEV,IAAI,CAACU,KAAK;UAAEC,IAAI,EAAEX,IAAI,CAACW;QAAI,CAAC,CAAC;MACrD,CAAC,CAAC;MACF5B,OAAO,CAACyB,SAAS,CAAC;IACnB;EACD,CAAC,EAAE,CAAClB,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMsB,iBAAiB,GAAG/D,WAAW,CAACgE,CAAC,IAAI;IAC1C,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC/BxB,cAAc,CAACsB,QAAQ,CAAC;IACxB;IACA3B,cAAc,CAAC8B,OAAO,CAAC,aAAa,EAAEH,QAAQ,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMI,iBAAiB,GAAGrE,WAAW,CAACgE,CAAC,IAAI;IAC1C,MAAMM,QAAQ,GAAGN,CAAC,CAACE,MAAM,CAACC,KAAK;IAC/BtB,cAAc,CAACyB,QAAQ,CAAC;IACxB;IACAhC,cAAc,CAAC8B,OAAO,CAAC,mBAAmB,EAAEE,QAAQ,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGvE,WAAW,CAAEgE,CAAC,IAAK;IACvCA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB5C,SAAS,CAAC,IAAI,CAAC;IACfI,cAAc,CAAC,KAAK,CAAC;IACrBI,iBAAiB,CAAC,KAAK,CAAC;IACxB;IACAN,cAAc,CAAC;MAAC+B,KAAK,EAAE,EAAE;MAAEY,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAAChD,MAAM,EAAEI,WAAW,CAAC,CAAC;EACzB;EACA;EACA,SAAS6C,UAAUA,CAACf,KAAK,EAAE;IAC1BgB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;IAClB;IACA/B,cAAc,CAAC;MAAC+B,KAAK;MAAEY,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EACxC;;EAEA;EACA,SAASI,SAASA,CAAA,EAAG;IACpB,IAAIlD,WAAW,CAACgC,KAAK,CAACd,MAAM,KAAK,CAAC,EAAE;MACnC,MAAMiC,OAAO,GAAG5B,IAAI,CAACC,KAAK,CAACf,cAAc,CAACC,OAAO,CAACV,WAAW,CAACgC,KAAK,CAAC,CAAC,CAACC,IAAI;MAC1E5B,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAC,GAAGJ,WAAW;QAAEiC,IAAI,EAAEkB;MAAO,CAAC,CAAC,CAAC;IACpD,CAAC,MAAM;MACNC,KAAK,CAAC,UAAU,CAAC;IAClB;EACD;;EAEA;EACA,MAAMC,iBAAiB,GAAGlB,CAAC,IAAI;IAC9BA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClBO,SAAS,CAAC,CAAC;IACXnD,SAAS,CAAC,KAAK,CAAC;IAChBI,cAAc,CAAC,IAAI,CAAC;EACrB,CAAC;;EAGD;EACA,MAAMmD,YAAY,GAAGnF,WAAW,CAACgE,CAAC,IAAI;IACrCA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB5C,SAAS,CAAC,KAAK,CAAC;IAChBI,cAAc,CAAC,KAAK,CAAC;IACrBI,iBAAiB,CAAC,KAAK,CAAC;IACxB;IACAE,cAAc,CAAC8C,UAAU,CAACvD,WAAW,CAACgC,KAAK,CAAC;IAC5C;IACA/B,cAAc,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACH,MAAM,EAAEI,WAAW,EAAEF,WAAW,CAAC,CAAC;;EAGtC;EACA,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoF,SAAS,EAAEC,YAAY,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsF,SAAS,EAAEC,YAAY,CAAC,GAAGvF,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACwF,aAAa,EAAEC,gBAAgB,CAAC,GAAGzF,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC0F,WAAW,EAAEC,cAAc,CAAC,GAAG3F,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM4F,aAAa,GAAG7F,MAAM,CAAC,EAAE,CAAC;;EAEhC;AACD;AACA;AACA;EACC,SAAS8F,OAAOA,CAACnC,KAAK,EAAEoC,WAAW,EAAE;IACpC;IACA,IAAIA,WAAW,EAAE;MAChB/D,OAAO,CAACgE,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACvC,KAAK,KAAKA,KAAK,CAAC,CAAC;MAChEvB,cAAc,CAAC8C,UAAU,CAACvB,KAAK,CAAC;MAChC2B,YAAY,CAAC,KAAK,CAAC;MACnBF,YAAY,CAAC,EAAE,CAAC;MAChB;IACD;IACA;IACA;IACA,MAAMnC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACf,cAAc,CAACC,OAAO,CAACsB,KAAK,CAAC,CAAC;IACtDgB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE3B,IAAI,CAAC;IACnC,MAAMW,IAAI,GAAGX,IAAI,CAACW,IAAI;IACtBwB,YAAY,CAACzB,KAAK,CAAC;IACnB2B,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC5B,IAAI,CAAC;IAClB;IACAgC,cAAc,CAAC3C,IAAI,CAAC;IACpB4C,aAAa,CAACM,OAAO,GAAGxC,KAAK;EAC9B;;EAEA;AACD;AACA;EACC,SAASyC,WAAWA,CAACzC,KAAK,EAAE;IAC3ByB,YAAY,CAACzB,KAAK,CAAC;IACnB2B,YAAY,CAAC,KAAK,CAAC;IACnBI,gBAAgB,CAAC,IAAI,CAAC;IACtB;IACA,MAAMW,OAAO,GAAGtE,IAAI;IACpBsE,OAAO,CAAC3C,OAAO,CAACwC,GAAG,IAAI;MACtB,IAAIA,GAAG,CAACvC,KAAK,KAAKkC,aAAa,CAACM,OAAO,EAAE;QACxCD,GAAG,CAACvC,KAAK,GAAGA,KAAK;QACjBuC,GAAG,CAACtC,IAAI,GAAG2B,SAAS;MACrB;IACD,CAAC,CAAC;IACFvD,OAAO,CAACqE,OAAO,CAAC;EACjB;;EAEA;AACD;AACA;EACC,SAASC,UAAUA,CAAA,EAAG;IACrBlB,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,KAAK,CAAC;IACnBI,gBAAgB,CAAC,IAAI,CAAC;IACtB;IACA1D,OAAO,CAACD,IAAI,CAAC;EACd;;EAEA;EACA,MAAM,CAACwE,WAAW,EAAE,CAAC,CAAC,CAAC,GAAGjG,qBAAqB,CAAC,CAAC;EACjD,MAAM,CAACkG,cAAc,EAAE,CAAC,CAAC,CAAC,GAAGnG,oBAAoB,CAAC,CAAC;EACnD,MAAM,CAACoG,aAAa,EAAE,CAAC,CAAC,CAAC,GAAGlG,uBAAuB,CAAC,CAAC;EAErD,eAAemG,SAASA,CAAC5C,CAAC,EAAE;IAC3BA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB;IACA,MAAMrB,IAAI,GAAG;MACZ0D,UAAU,EAAE;QACXhD,KAAK,EAAEnB,WAAW;QAClBoE,WAAW,EAAElE,WAAW;QACxBmE,QAAQ,EAAEC,YAAY,CAACzE,OAAO,CAAC,OAAO,CAAC;QACvC0E,SAAS,EAAE;MACZ;IACD,CAAC;IACD,IAAI,CAAChF,IAAI,CAAC,CAAC,CAAC,IAAI,CAACS,WAAW,IAAI,CAACE,WAAW,EAAE;MAC7CiC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB;IACD;IACA,IAAI;MACH,MAAMoC,IAAI,GAAG,MAAMT,WAAW,CAACtD,IAAI,CAAC,CAACgE,MAAM,CAAC,CAAC;MAC7CtC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoC,IAAI,CAAC;MAC3B;MACA5E,cAAc,CAAC8B,OAAO,CAAC,iBAAiB,EAAE8C,IAAI,CAAC/D,IAAI,CAACiE,UAAU,CAAC;IAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbxC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEuC,GAAG,CAAC;IAC9B;IACA,MAAMC,WAAW,GAAGhF,cAAc,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC7D;IACA,MAAMtB,UAAU,CAAC,SAAS,EAAE;MAACwD,EAAE,EAAE6C,WAAW;MAAEL,SAAS,EAAE;IAAK,CAAC,EAAE,KAAK,CAAC;IACvE;IACA3E,cAAc,CAAC8C,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,MAAMmC,SAAS,GAAG,EAAE;IACpB,KAAK,MAAM,CAAC7D,KAAK,EAAE0C,GAAG,CAAC,IAAInE,IAAI,CAACuF,OAAO,CAAC,CAAC,EAAE;MAC1C,MAAMC,MAAM,GAAG/G,gBAAgB,CAAC0F,GAAG,EAAE1C,KAAK,EAAE4D,WAAW,CAAC;MACxD,IAAI,CAACG,MAAM,EAAE;MACb,IAAI;QACH,MAAMP,IAAI,GAAG,MAAMR,cAAc,CAACe,MAAM,CAAC,CAACN,MAAM,CAAC,CAAC;QAClDtC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoC,IAAI,CAAC;QAC3B;QACAK,SAAS,CAACjE,IAAI,CAAC4D,IAAI,CAAC/D,IAAI,CAACiE,UAAU,CAAC;MACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACbxC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuC,GAAG,CAAC;MAC3B;IACD;IACA;IACAlE,IAAI,CAAC0D,UAAU,CAAClD,SAAS,GAAGP,IAAI,CAACsE,SAAS,CAACH,SAAS,CAAC;IACrD,IAAI;MACH,MAAML,IAAI,GAAG,MAAMP,aAAa,CAACxD,IAAI,CAAC,CAACgE,MAAM,CAAC,CAAC;MAC/CtC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOG,GAAG,EAAE;MACbxC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuC,GAAG,CAAC;IAC3B;IACA;IACA,IAAI5E,YAAY,EAAE;MACjB,IAAI;QACH,MAAMyE,IAAI,GAAG,MAAMS,KAAK,CAAC,qCAAqCX,YAAY,CAACzE,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC9F,MAAMqF,MAAM,GAAG,MAAMV,IAAI,CAACW,IAAI,CAAC,CAAC;QAChChD,OAAO,CAACC,GAAG,CAAC8C,MAAM,CAAC;QACnB,MAAME,OAAO,GAAGF,MAAM,CAACzE,IAAI,CAAC2E,OAAO;QACnC,MAAMC,iBAAiB,GAAGzF,cAAc,CAACC,OAAO,CAAC,mBAAmB,CAAC;QACrE;QACA,MAAMyF,UAAU,GAAG,MAAML,KAAK,CAAC,qCAAqCI,iBAAiB,EAAE,CAAC;QACxF,MAAME,YAAY,GAAG,MAAMD,UAAU,CAACH,IAAI,CAAC,CAAC;QAC5C,MAAMK,UAAU,GAAGD,YAAY,CAAC9E,IAAI,CAACQ,SAAS;QAC9C,KAAK,MAAMwE,CAAC,IAAID,UAAU,EAAE;UAC3B,MAAME,KAAK,GAAG,MAAMT,KAAK,CAAC,oCAAoCQ,CAAC,EAAE,EAAE;YAClEE,MAAM,EAAE;UACT,CAAC,CAAC;UACF,IAAI,CAACnB,IAAI,CAACoB,EAAE,EAAE;YACbzD,OAAO,CAAC0D,KAAK,CAAC,YAAYrB,IAAI,CAACsB,MAAM,EAAE,CAAC;UACzC;QACD;QACA;QACA,MAAMC,aAAa,GAAG,MAAMd,KAAK,CAAC,qCAAqCI,iBAAiB,EAAE,EAAE;UAC3FM,MAAM,EAAE;QACT,CAAC,CAAC;QACF,IAAI,CAACI,aAAa,CAACH,EAAE,EAAE;UACtBzD,OAAO,CAAC0D,KAAK,CAAC,gBAAgBE,aAAa,CAACD,MAAM,EAAE,CAAC;QACtD;QACA;;QAEAV,OAAO,CAAClE,OAAO,CAAC,CAAC8E,MAAM,EAAEhF,KAAK,KAAK;UAClC,IAAIgF,MAAM,CAACjE,EAAE,KAAKsD,iBAAiB,EAAE;YACpCD,OAAO,CAACa,MAAM,CAACjF,KAAK,EAAE,CAAC,CAAC;UACzB;QACD,CAAC,CAAC;QACF;QACA,MAAMzC,UAAU,CAAC,SAAS,EAAE6G,OAAO,EAAE,IAAI,CAAC;MAE3C,CAAC,CAAC,OAAOT,GAAG,EAAE;QACbxC,OAAO,CAAC0D,KAAK,CAAClB,GAAG,CAAC;MACnB;IACD;;IAGA;IACA/E,cAAc,CAACsG,KAAK,CAAC,CAAC;IACtBxG,iBAAiB,CAAC,IAAI,CAAC;IACvB;IACA;IACAV,QAAQ,CAAC,UAAU,CAAC;EACrB;;EAEA;EACA,SAASmH,YAAYA,CAAC7E,CAAC,EAAE;IACxBA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB;IACAlC,cAAc,CAACsG,KAAK,CAAC,CAAC;IACtB;IACA1G,OAAO,CAAC,EAAE,CAAC;IACXS,cAAc,CAAC,EAAE,CAAC;IAClBE,cAAc,CAAC,EAAE,CAAC;IAClB,IAAIJ,YAAY,EAAEf,QAAQ,CAAC,UAAU,CAAC;EACvC;EAEA,eAAeoH,aAAaA,CAAC9E,CAAC,EAAE;IAC/BA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB;IACA,MAAMrB,IAAI,GAAG;MACZ0D,UAAU,EAAE;QACXhD,KAAK,EAAEnB,WAAW;QAClBoE,WAAW,EAAElE,WAAW;QACxBmE,QAAQ,EAAEC,YAAY,CAACzE,OAAO,CAAC,OAAO,CAAC;QACvC0E,SAAS,EAAE,IAAI;QACf8B,aAAa,EAAE;MAChB;IACD,CAAC;IACD,IAAI,CAAC9G,IAAI,CAAC,CAAC,CAAC,IAAI,CAACS,WAAW,IAAI,CAACE,WAAW,EAAE;MAC7CiC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB;IACD;IACA,IAAI;MACH,MAAMoC,IAAI,GAAG,MAAMT,WAAW,CAACtD,IAAI,CAAC,CAACgE,MAAM,CAAC,CAAC;MAC7CtC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoC,IAAI,CAAC;MAC3B;MACA5E,cAAc,CAAC8B,OAAO,CAAC,iBAAiB,EAAE8C,IAAI,CAAC/D,IAAI,CAACiE,UAAU,CAAC;IAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbxC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEuC,GAAG,CAAC;IAC9B;IACA,MAAMC,WAAW,GAAGhF,cAAc,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC7D;IACA,MAAMtB,UAAU,CAAC,SAAS,EAAE;MAACwD,EAAE,EAAE6C,WAAW;MAAEL,SAAS,EAAE;IAAI,CAAC,EAAE,KAAK,CAAC;IACtE;IACA3E,cAAc,CAAC8C,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,MAAMmC,SAAS,GAAG,EAAE;IACpB,KAAK,MAAM,CAAC7D,KAAK,EAAE0C,GAAG,CAAC,IAAInE,IAAI,CAACuF,OAAO,CAAC,CAAC,EAAE;MAC1C,MAAMC,MAAM,GAAG/G,gBAAgB,CAAC0F,GAAG,EAAE1C,KAAK,EAAE4D,WAAW,CAAC;MACxD,IAAI,CAACG,MAAM,EAAE;MACb,IAAI;QACH,MAAMP,IAAI,GAAG,MAAMR,cAAc,CAACe,MAAM,CAAC,CAACN,MAAM,CAAC,CAAC;QAClDtC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoC,IAAI,CAAC;QAC3B;QACAK,SAAS,CAACjE,IAAI,CAAC4D,IAAI,CAAC/D,IAAI,CAACiE,UAAU,CAAC;MACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACbxC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuC,GAAG,CAAC;MAC3B;IACD;IACA;IACAlE,IAAI,CAAC0D,UAAU,CAAClD,SAAS,GAAGP,IAAI,CAACsE,SAAS,CAACH,SAAS,CAAC;IACrD,IAAI;MACH,MAAML,IAAI,GAAG,MAAMP,aAAa,CAACxD,IAAI,CAAC,CAACgE,MAAM,CAAC,CAAC;MAC/CtC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOG,GAAG,EAAE;MACbxC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuC,GAAG,CAAC;IAC3B;IACA;IACA,IAAI5E,YAAY,EAAE;MACjB,IAAI;QACH,MAAMyE,IAAI,GAAG,MAAMS,KAAK,CAAC,qCAAqCX,YAAY,CAACzE,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC9F,MAAMqF,MAAM,GAAG,MAAMV,IAAI,CAACW,IAAI,CAAC,CAAC;QAChChD,OAAO,CAACC,GAAG,CAAC8C,MAAM,CAAC;QACnB,MAAME,OAAO,GAAGF,MAAM,CAACzE,IAAI,CAAC2E,OAAO;QACnC,MAAMC,iBAAiB,GAAGzF,cAAc,CAACC,OAAO,CAAC,mBAAmB,CAAC;QACrE;QACA,MAAMyF,UAAU,GAAG,MAAML,KAAK,CAAC,qCAAqCI,iBAAiB,EAAE,CAAC;QACxF,MAAME,YAAY,GAAG,MAAMD,UAAU,CAACH,IAAI,CAAC,CAAC;QAC5C,MAAMK,UAAU,GAAGD,YAAY,CAAC9E,IAAI,CAACQ,SAAS;QAC9C,KAAK,MAAMwE,CAAC,IAAID,UAAU,EAAE;UAC3B,MAAME,KAAK,GAAG,MAAMT,KAAK,CAAC,oCAAoCQ,CAAC,EAAE,EAAE;YAClEE,MAAM,EAAE;UACT,CAAC,CAAC;UACF,IAAI,CAACnB,IAAI,CAACoB,EAAE,EAAE;YACbzD,OAAO,CAAC0D,KAAK,CAAC,YAAYrB,IAAI,CAACsB,MAAM,EAAE,CAAC;UACzC;QACD;QACA;QACA,MAAMC,aAAa,GAAG,MAAMd,KAAK,CAAC,qCAAqCI,iBAAiB,EAAE,EAAE;UAC3FM,MAAM,EAAE;QACT,CAAC,CAAC;QACF,IAAI,CAACI,aAAa,CAACH,EAAE,EAAE;UACtBzD,OAAO,CAAC0D,KAAK,CAAC,gBAAgBE,aAAa,CAACD,MAAM,EAAE,CAAC;QACtD;QACA;;QAEAV,OAAO,CAAClE,OAAO,CAAC,CAAC8E,MAAM,EAAEhF,KAAK,KAAK;UAClC,IAAIgF,MAAM,CAACjE,EAAE,KAAKsD,iBAAiB,EAAE;YACpCD,OAAO,CAACa,MAAM,CAACjF,KAAK,EAAE,CAAC,CAAC;UACzB;QACD,CAAC,CAAC;QACF;QACA,MAAMzC,UAAU,CAAC,SAAS,EAAE6G,OAAO,EAAE,IAAI,CAAC;MAE3C,CAAC,CAAC,OAAOT,GAAG,EAAE;QACbxC,OAAO,CAAC0D,KAAK,CAAClB,GAAG,CAAC;MACnB;IACD;;IAGA;IACA/E,cAAc,CAACsG,KAAK,CAAC,CAAC;IACtBxG,iBAAiB,CAAC,IAAI,CAAC;IACvB;IACA;IACAV,QAAQ,CAAC,cAAc,CAAC;EACzB;EAEA,oBACCL,OAAA;IAAK2H,SAAS,EAAE7H,IAAI,CAAC8H,MAAO;IAAAC,QAAA,gBAC3B7H,OAAA;MAAA6H,QAAA,gBACC7H,OAAA;QAAK2H,SAAS,EAAE7H,IAAI,CAACgI,SAAU;QAAAD,QAAA,gBAC9B7H,OAAA;UAAO+H,QAAQ,EAAErF,iBAAkB;UAACD,IAAI,EAAC,MAAM;UAACK,KAAK,EAAEzB,WAAY;UAAC2G,WAAW,EAAE;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC7FpI,OAAA;UAAO+H,QAAQ,EAAE/E,iBAAkB;UAACP,IAAI,EAAC,MAAM;UAACK,KAAK,EAAEvB,WAAY;UAACyG,WAAW,EAAE;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzF,CAAC,eACNpI,OAAA;QAAK2H,SAAS,EAAE7H,IAAI,CAACuI,eAAgB;QAAAR,QAAA,gBACpC7H,OAAA;UAAQsI,OAAO,EAAE/C,SAAU;UAACgD,KAAK,EAAE;YAClCC,eAAe,EAAE;UAClB,CAAE;UAAAX,QAAA,EAAE;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACpBpI,OAAA;UAAK2H,SAAS,EAAE7H,IAAI,CAAC2I,SAAU;UAAAZ,QAAA,gBAC9B7H,OAAA;YAAQsI,OAAO,EAAEb,aAAc;YAACc,KAAK,EAAE;cACtCG,KAAK,EAAE;YACR,CAAE;YAAAb,QAAA,EAAE;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,EACnB,CAAC,CAACnH,cAAc,CAACS,MAAM,iBAAI1B,OAAA;YAAQsI,OAAO,EAAEd,YAAa;YAACe,KAAK,EAAE;cACjEC,eAAe,EAAE;YAClB,CAAE;YAAAX,QAAA,EAAE;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACTpI,OAAA;MAAK2H,SAAS,EAAE7H,IAAI,CAAC6I,eAAgB;MAAAd,QAAA,gBACpC7H,OAAA;QAAA6H,QAAA,EAAS;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACzBpI,OAAA,CAACf,eAAe,CAAC2J,QAAQ;QAAC9F,KAAK,EAAES,UAAW;QAAAsE,QAAA,eAC3C7H,OAAA,CAACT,kBAAkB,CAACqJ,QAAQ;UAAC9F,KAAK,EAAEmC,WAAY;UAAA4C,QAAA,eAC/C7H,OAAA,CAACV,iBAAiB,CAACsJ,QAAQ;YAAC9F,KAAK,EAAEqC,UAAW;YAAA0C,QAAA,eAC7C7H,OAAA,CAACP,kBAAkB,CAACmJ,QAAQ;cAAC9F,KAAK,EAAE0B,WAAY;cAAAqD,QAAA,gBAC/C7H,OAAA,CAACL,gBAAgB,CAACiJ,QAAQ;gBAAC9F,KAAK,EAAE6B,OAAQ;gBAAAkD,QAAA,eACzC7H,OAAA,CAACN,gBAAgB,CAACkJ,QAAQ;kBAAC9F,KAAK,EAAEoB,SAAU;kBAAA2D,QAAA,eAC3C7H,OAAA,CAACR,iBAAiB,CAACoJ,QAAQ;oBAAC9F,KAAK,EAAEkB,SAAU;oBAAA6D,QAAA,EAC3C,CAAC/G,cAAc,iBACfd,OAAA,CAACjB,QAAQ;sBAAC6B,IAAI,EAAEA,IAAK;sBAACiI,WAAW,EAAEzE,SAAU;sBAACE,aAAa,EAAEA;oBAAc;sBAAA2D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAC;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnD;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eAC5BpI,OAAA;gBAAA6H,QAAA,GACE,CAACvH,MAAM,iBAAIN,OAAA;kBAAQsI,OAAO,EAAEpF,YAAa;kBAAA2E,QAAA,EAAE;gBAAM;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,EAC3D9H,MAAM,iBACNN,OAAA,CAAAE,SAAA;kBAAA2H,QAAA,gBAGC7H,OAAA,CAAChB,MAAM;oBAAAiJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC,CAAC,eACTpI,OAAA;oBAAQsI,OAAO,EAAEzE,iBAAkB;oBAAC0E,KAAK,EAAE;sBAC1CC,eAAe,EAAE;oBAClB,CAAE;oBAAAX,QAAA,EAAE;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,eAClBpI,OAAA;oBAAQsI,OAAO,EAAExE,YAAa;oBAAA+D,QAAA,EAAE;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC;gBAAA,eAC7C,CACF;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACsB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAChI,EAAA,CAhcID,IAAI;EAAA,QACQN,WAAW,EA8KFV,qBAAqB,EAClBD,oBAAoB,EACrBE,uBAAuB;AAAA;AAAA0J,EAAA,GAjL9C3I,IAAI;AAkcV,eAAeA,IAAI;AAAC,IAAA2I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
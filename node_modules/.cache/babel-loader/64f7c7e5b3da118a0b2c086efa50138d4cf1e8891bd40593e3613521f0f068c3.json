{"ast":null,"code":"import { getUserData } from \"./getUserData\";\nimport { getSurveyQues } from \"./getSurveyQues\";\n\n/*查询用户绑定的survey\r\n* @accept`getDrafts:` Bool, 是否获取草稿, false为获取已发布*/\nexport async function getUserSurveys(getDrafts) {\n  // 获取用户数据\n  const data = await getUserData();\n  console.log(data);\n  // 获取草稿\n  if (getDrafts) {\n    const surveys = data.data.surveys.filter(survey => survey.published === false);\n    const surveysDetails = [];\n    for (const survey of surveys) {\n      const detail = await getSurveyQues(survey.id, true);\n      surveysDetails.push(detail);\n    }\n    return surveysDetails;\n  }\n  // 获取已发布\n  const surveys = data.data.surveys.filter(survey => survey.published === true);\n  const surveysDetails = [];\n  for (const survey of surveys) {\n    const detail = await getSurveyQues(survey.id, false);\n    surveysDetails.push(detail);\n  }\n  return surveysDetails;\n}\n\n/* 根据 `questionId` 获取对应的 `questionDetail` */\nexport async function getQueDetails(questionId) {\n  const url = `http://localhost:1337/api/quests/${questionId}`;\n  try {\n    const resp = await fetch(url);\n    if (!resp.ok) {\n      throw new Error(`获取数据失败: ${resp.status}`);\n    }\n    const questionDetails = await resp.json();\n    const questionType = questionDetails.data.type;\n    switch (questionType) {\n      case 'text':\n      case 'location':\n        {\n          return {\n            title: questionDetails.data.title,\n            type: questionType,\n            index: questionDetails.data.index\n          };\n        }\n      case 'single':\n      case 'checkbox':\n        {\n          return {\n            title: questionDetails.data.title,\n            type: questionType,\n            options: questionDetails.data.options,\n            index: questionDetails.data.index\n          };\n        }\n      case 'rating':\n      case 'slider':\n        {\n          return {\n            title: questionDetails.data.title,\n            type: questionType,\n            max: questionDetails.data.max,\n            step: questionDetails.data.step,\n            index: questionDetails.data.index\n          };\n        }\n    }\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}","map":{"version":3,"names":["getUserData","getSurveyQues","getUserSurveys","getDrafts","data","console","log","surveys","filter","survey","published","surveysDetails","detail","id","push","getQueDetails","questionId","url","resp","fetch","ok","Error","status","questionDetails","json","questionType","type","title","index","options","max","step","err","error"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/utils/getUserSurveys.js"],"sourcesContent":["import {getUserData} from \"./getUserData\";\r\nimport {getSurveyQues} from \"./getSurveyQues\";\r\n\r\n/*查询用户绑定的survey\r\n* @accept`getDrafts:` Bool, 是否获取草稿, false为获取已发布*/\r\nexport async function getUserSurveys(getDrafts) {\r\n\t// 获取用户数据\r\n\tconst data = await getUserData();\r\n\tconsole.log(data);\r\n\t// 获取草稿\r\n\tif (getDrafts) {\r\n\t\tconst surveys = data.data.surveys.filter(survey => survey.published === false);\r\n\t\tconst surveysDetails = [];\r\n\t\tfor (const survey of surveys) {\r\n\t\t\tconst detail = await getSurveyQues(survey.id, true);\r\n\t\t\tsurveysDetails.push(detail);\r\n\t\t}\r\n\t\treturn surveysDetails;\r\n\t}\r\n\t// 获取已发布\r\n\tconst surveys = data.data.surveys.filter(survey => survey.published === true);\r\n\tconst surveysDetails = [];\r\n\tfor (const survey of surveys) {\r\n\t\tconst detail = await getSurveyQues(survey.id, false);\r\n\t\tsurveysDetails.push(detail);\r\n\t}\r\n\treturn surveysDetails;\r\n}\r\n\r\n\r\n\r\n/* 根据 `questionId` 获取对应的 `questionDetail` */\r\nexport async function getQueDetails(questionId) {\r\n\tconst url = `http://localhost:1337/api/quests/${questionId}`;\r\n\ttry {\r\n\t\tconst resp = await fetch(url);\r\n\t\tif (!resp.ok) {\r\n\t\t\tthrow new Error(`获取数据失败: ${resp.status}`);\r\n\t\t}\r\n\t\tconst questionDetails = await resp.json();\r\n\t\tconst questionType = questionDetails.data.type;\r\n\t\tswitch (questionType) {\r\n\t\t\tcase 'text':\r\n\t\t\tcase 'location': {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: questionDetails.data.title,\r\n\t\t\t\t\ttype: questionType,\r\n\t\t\t\t\tindex: questionDetails.data.index\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcase 'single':\r\n\t\t\tcase 'checkbox': {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: questionDetails.data.title,\r\n\t\t\t\t\ttype: questionType,\r\n\t\t\t\t\toptions: questionDetails.data.options,\r\n\t\t\t\t\tindex: questionDetails.data.index\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcase 'rating':\r\n\t\t\tcase 'slider': {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: questionDetails.data.title,\r\n\t\t\t\t\ttype: questionType,\r\n\t\t\t\t\tmax: questionDetails.data.max,\r\n\t\t\t\t\tstep: questionDetails.data.step,\r\n\t\t\t\t\tindex: questionDetails.data.index\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn null;\r\n\t}\r\n}"],"mappings":"AAAA,SAAQA,WAAW,QAAO,eAAe;AACzC,SAAQC,aAAa,QAAO,iBAAiB;;AAE7C;AACA;AACA,OAAO,eAAeC,cAAcA,CAACC,SAAS,EAAE;EAC/C;EACA,MAAMC,IAAI,GAAG,MAAMJ,WAAW,CAAC,CAAC;EAChCK,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB;EACA,IAAID,SAAS,EAAE;IACd,MAAMI,OAAO,GAAGH,IAAI,CAACA,IAAI,CAACG,OAAO,CAACC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,SAAS,KAAK,KAAK,CAAC;IAC9E,MAAMC,cAAc,GAAG,EAAE;IACzB,KAAK,MAAMF,MAAM,IAAIF,OAAO,EAAE;MAC7B,MAAMK,MAAM,GAAG,MAAMX,aAAa,CAACQ,MAAM,CAACI,EAAE,EAAE,IAAI,CAAC;MACnDF,cAAc,CAACG,IAAI,CAACF,MAAM,CAAC;IAC5B;IACA,OAAOD,cAAc;EACtB;EACA;EACA,MAAMJ,OAAO,GAAGH,IAAI,CAACA,IAAI,CAACG,OAAO,CAACC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,SAAS,KAAK,IAAI,CAAC;EAC7E,MAAMC,cAAc,GAAG,EAAE;EACzB,KAAK,MAAMF,MAAM,IAAIF,OAAO,EAAE;IAC7B,MAAMK,MAAM,GAAG,MAAMX,aAAa,CAACQ,MAAM,CAACI,EAAE,EAAE,KAAK,CAAC;IACpDF,cAAc,CAACG,IAAI,CAACF,MAAM,CAAC;EAC5B;EACA,OAAOD,cAAc;AACtB;;AAIA;AACA,OAAO,eAAeI,aAAaA,CAACC,UAAU,EAAE;EAC/C,MAAMC,GAAG,GAAG,oCAAoCD,UAAU,EAAE;EAC5D,IAAI;IACH,MAAME,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC7B,IAAI,CAACC,IAAI,CAACE,EAAE,EAAE;MACb,MAAM,IAAIC,KAAK,CAAC,WAAWH,IAAI,CAACI,MAAM,EAAE,CAAC;IAC1C;IACA,MAAMC,eAAe,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;IACzC,MAAMC,YAAY,GAAGF,eAAe,CAACnB,IAAI,CAACsB,IAAI;IAC9C,QAAQD,YAAY;MACnB,KAAK,MAAM;MACX,KAAK,UAAU;QAAE;UAChB,OAAO;YACNE,KAAK,EAAEJ,eAAe,CAACnB,IAAI,CAACuB,KAAK;YACjCD,IAAI,EAAED,YAAY;YAClBG,KAAK,EAAEL,eAAe,CAACnB,IAAI,CAACwB;UAC7B,CAAC;QACF;MACA,KAAK,QAAQ;MACb,KAAK,UAAU;QAAE;UAChB,OAAO;YACND,KAAK,EAAEJ,eAAe,CAACnB,IAAI,CAACuB,KAAK;YACjCD,IAAI,EAAED,YAAY;YAClBI,OAAO,EAAEN,eAAe,CAACnB,IAAI,CAACyB,OAAO;YACrCD,KAAK,EAAEL,eAAe,CAACnB,IAAI,CAACwB;UAC7B,CAAC;QACF;MACA,KAAK,QAAQ;MACb,KAAK,QAAQ;QAAE;UACd,OAAO;YACND,KAAK,EAAEJ,eAAe,CAACnB,IAAI,CAACuB,KAAK;YACjCD,IAAI,EAAED,YAAY;YAClBK,GAAG,EAAEP,eAAe,CAACnB,IAAI,CAAC0B,GAAG;YAC7BC,IAAI,EAAER,eAAe,CAACnB,IAAI,CAAC2B,IAAI;YAC/BH,KAAK,EAAEL,eAAe,CAACnB,IAAI,CAACwB;UAC7B,CAAC;QACF;IACD;EACD,CAAC,CAAC,OAAOI,GAAG,EAAE;IACb3B,OAAO,CAAC4B,KAAK,CAACD,GAAG,CAAC;IAClB,OAAO,IAAI;EACZ;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
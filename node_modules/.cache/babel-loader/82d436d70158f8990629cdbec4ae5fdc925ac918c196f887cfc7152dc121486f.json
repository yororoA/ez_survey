{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\components\\\\editSurvey\\\\ques\\\\single.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Single = () => {\n  _s();\n  // 存储问题内容\n  const [question, setQuestion] = useState('');\n  // 存储选项列表, [{id, content}]\n  const [options, setOptions] = useState([]);\n  // 当前选项编号, 1 -> A\n  const [optionIndex, setOptionIndex] = useState(1);\n\n  // 问题输入\n  const handleQuestionChange = useCallback(e => {\n    const quesTitle = e.target.value;\n    setQuestion(quesTitle);\n    // ...sessionStorage\n    sessionStorage.setItem(`${question}__options`, JSON.stringify({\n      title: quesTitle,\n      options: options\n    }));\n  }, [options]);\n\n  // 添加新选项\n  const addOption = useCallback(e => {\n    e.preventDefault();\n    // 选项标识 A,B,C,...\n    const label = String.fromCharCode(optionIndex + 64);\n    // 选项编号递增, 用于下次生成新标识, 函数式更新避免依赖optionIndex\n    setOptionIndex(prevIndex => prevIndex + 1);\n    // \t添加新选项到数组, 初始为空\n    const newOptions = [...options, {\n      id: label,\n      content: ''\n    }];\n    setOptions(newOptions);\n    // ...sessionStorage\n    sessionStorage.setItem(`${question}__options`, JSON.stringify({\n      title: question,\n      options: newOptions\n    }));\n  }, [question]);\n\n  // 选项内容变化\n  const handleOptionChange = useCallback(e => {\n    // 更新对应选项内容\n    console.log(e.target.value);\n    const id = e.target.id;\n    // 若选项id相同则更新content\n    const newOptions = options.map(option => option.id === id ? {\n      ...option,\n      content: e.target.value\n    } : option);\n    setOptions(newOptions);\n    // ...sessionStorage\n    sessionStorage.setItem(`${question}__options`, JSON.stringify({\n      title: question,\n      options: newOptions\n    }));\n  }, [question]);\n  useEffect(() => {\n    console.log(options);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleQuestionChange,\n      placeholder: '请输入问题'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: option.id,\n          onChange: handleOptionChange,\n          placeholder: '请输入内容'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }, this)]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addOption,\n      children: \"\\u6DFB\\u52A0\\u9009\\u9879\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n_s(Single, \"6bW8DXiW1qQgWz1Go91PQuQpVnY=\");\n_c = Single;\nexport default Single;\nvar _c;\n$RefreshReg$(_c, \"Single\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","jsxDEV","_jsxDEV","Single","_s","question","setQuestion","options","setOptions","optionIndex","setOptionIndex","handleQuestionChange","e","quesTitle","target","value","sessionStorage","setItem","JSON","stringify","title","addOption","preventDefault","label","String","fromCharCode","prevIndex","newOptions","id","content","handleOptionChange","console","log","map","option","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","type","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/components/editSurvey/ques/single.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\n\r\nconst Single = () => {\r\n\t// 存储问题内容\r\n\tconst [question, setQuestion] = useState('');\r\n\t// 存储选项列表, [{id, content}]\r\n\tconst [options, setOptions] = useState([]);\r\n\t// 当前选项编号, 1 -> A\r\n\tconst [optionIndex, setOptionIndex] = useState(1);\r\n\r\n\t// 问题输入\r\n\tconst handleQuestionChange = useCallback(e => {\r\n\t\tconst quesTitle = e.target.value;\r\n\t\tsetQuestion(quesTitle);\r\n\t\t// ...sessionStorage\r\n\t\tsessionStorage.setItem(`${question}__options`, JSON.stringify({title: quesTitle, options: options}));\r\n\t}, [options]);\r\n\r\n\t// 添加新选项\r\n\tconst addOption = useCallback(e => {\r\n\t\te.preventDefault();\r\n\t\t// 选项标识 A,B,C,...\r\n\t\tconst label = String.fromCharCode(optionIndex + 64);\r\n\t\t// 选项编号递增, 用于下次生成新标识, 函数式更新避免依赖optionIndex\r\n\t\tsetOptionIndex(prevIndex => prevIndex+1);\r\n\t\t// \t添加新选项到数组, 初始为空\r\n\t\tconst newOptions = [...options, {id: label, content: ''}];\r\n\t\tsetOptions(newOptions);\r\n\t\t// ...sessionStorage\r\n\t\tsessionStorage.setItem(`${question}__options`, JSON.stringify({title: question, options: newOptions}));\r\n\t}, [question]);\r\n\r\n\t// 选项内容变化\r\n\tconst handleOptionChange = useCallback((e) => {\r\n\t\t// 更新对应选项内容\r\n\t\tconsole.log(e.target.value)\r\n\t\tconst id = e.target.id;\r\n\t\t// 若选项id相同则更新content\r\n\t\tconst newOptions = options.map(option => option.id === id ? {...option, content: e.target.value} : option);\r\n\t\tsetOptions(newOptions);\r\n\t\t// ...sessionStorage\r\n\t\tsessionStorage.setItem(`${question}__options`, JSON.stringify({title: question, options: newOptions}));\r\n\t}, [question]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(options);\r\n\t})\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input onChange={handleQuestionChange} placeholder={'请输入问题'}/>\r\n\t\t\t{/* 选项列表 */}\r\n\t\t\t<div>\r\n\t\t\t\t{options.map(\r\n\t\t\t\t\t(option, index) => (\r\n\t\t\t\t\t\t<div key={option.id}>\r\n\t\t\t\t\t\t\t<span>{option.id}</span>\r\n\t\t\t\t\t\t\t<input type=\"text\" id={option.id} onChange={handleOptionChange} placeholder={'请输入内容'}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<button onClick={addOption}>添加选项</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Single;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
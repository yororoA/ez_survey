{"ast":null,"code":"const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\nconst PATH_KEY = Symbol('i18next/PATH_KEY');\nfunction createProxy() {\n  const state = [];\n  const handler = Object.create(null);\n  let proxy;\n  handler.get = (target, key) => {\n    proxy?.revoke?.();\n    if (key === PATH_KEY) return state;\n    state.push(key);\n    proxy = Proxy.revocable(target, handler);\n    return proxy.proxy;\n  };\n  return Proxy.revocable(Object.create(null), handler).proxy;\n}\nfunction keysFromSelector(selector, opts) {\n  const {\n    [PATH_KEY]: path\n  } = selector(createProxy());\n  return path.join(opts?.keySeparator ?? '.');\n}\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof opt === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (typeof keys === 'function') keys = keysFromSelector(keys, {\n      ...this.options,\n      ...opt\n    });\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ;else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => {\n          if (typeof k === 'function') k = keysFromSelector(k, {\n            ...this.options,\n            ...opts\n          });\n          return `${o.keyPrefix}${keySeparator}${k}`;\n        });\n      } else {\n        if (typeof key === 'function') key = keysFromSelector(key, {\n          ...this.options,\n          ...opts\n        });\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };","map":{"version":3,"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","copy","a","s","t","forEach","m","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","undefined","e","p","slice","last","pushPath","concat","push","getPath","getPathWithDefaults","data","defaultData","value","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","RegExpCache","constructor","capacity","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","chars","looksLikeObjectPathRegExpCache","looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","filter","c","r","map","join","matched","test","ki","substring","deepFind","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","event","numListeners","off","emit","cloned","Array","from","entries","observer","numTimesAdded","ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","addResource","silent","addResources","resources","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","n","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","PATH_KEY","Symbol","createProxy","state","handler","proxy","revoke","Proxy","revocable","keysFromSelector","selector","opts","checkedLoadedFor","shouldHandleAsObject","Translator","services","changeLanguage","language","exists","o","interpolation","opt","resolved","extractFromKey","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","extendTranslation","usedDefault","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nestAft","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","todos","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","keyEndIndex","lastIndexOf","elem","Boolean","reduce","parseFormatStr","formatStr","formatName","formatOptions","optStr","currency","range","rest","trimmedKey","isNaN","parseInt","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","list","ListFormat","add","addCached","findIndex","mem","formatted","valOptions","locale","removePending","q","pending","pendingCount","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","queue","queueLoad","languages","callback","toLoad","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","done","loadedKeys","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","bindMemberFunctions","inst","mems","getOwnPropertyNames","getPrototypeOf","I18n","modules","external","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","usingLegacyFormatFunction","languageDetector","detection","storeApi","storeApiChained","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","Locale","getTextInfo","ti","direction","rtlLngs","createInstance","cloneInstance","forkResourceStore","mergedOptions","membersToCopy","clonedData","prev","acc","instance"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst PATH_KEY = Symbol('i18next/PATH_KEY');\nfunction createProxy() {\n  const state = [];\n  const handler = Object.create(null);\n  let proxy;\n  handler.get = (target, key) => {\n    proxy?.revoke?.();\n    if (key === PATH_KEY) return state;\n    state.push(key);\n    proxy = Proxy.revocable(target, handler);\n    return proxy.proxy;\n  };\n  return Proxy.revocable(Object.create(null), handler).proxy;\n}\nfunction keysFromSelector(selector, opts) {\n  const {\n    [PATH_KEY]: path\n  } = selector(createProxy());\n  return path.join(opts?.keySeparator ?? '.');\n}\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof opt === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (typeof keys === 'function') keys = keysFromSelector(keys, {\n      ...this.options,\n      ...opt\n    });\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => {\n          if (typeof k === 'function') k = keysFromSelector(k, {\n            ...this.options,\n            ...opts\n          });\n          return `${o.keyPrefix}${keySeparator}${k}`;\n        });\n      } else {\n        if (typeof key === 'function') key = keysFromSelector(key, {\n          ...this.options,\n          ...opts\n        });\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ;AAC/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,IAAIC,GAAG;EACP,IAAIC,GAAG;EACP,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC/CL,GAAG,GAAGI,OAAO;IACbH,GAAG,GAAGI,MAAM;EACd,CAAC,CAAC;EACFH,OAAO,CAACE,OAAO,GAAGJ,GAAG;EACrBE,OAAO,CAACG,MAAM,GAAGJ,GAAG;EACpB,OAAOC,OAAO;AAChB,CAAC;AACD,MAAMI,UAAU,GAAGC,MAAM,IAAI;EAC3B,IAAIA,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE;EAC7B,OAAO,EAAE,GAAGA,MAAM;AACpB,CAAC;AACD,MAAMC,IAAI,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;EACxBF,CAAC,CAACG,OAAO,CAACC,CAAC,IAAI;IACb,IAAIH,CAAC,CAACG,CAAC,CAAC,EAAEF,CAAC,CAACE,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC;AACD,MAAMC,yBAAyB,GAAG,MAAM;AACxC,MAAMC,QAAQ,GAAGC,GAAG,IAAIA,GAAG,IAAIA,GAAG,CAACC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGD,GAAG,CAACE,OAAO,CAACJ,yBAAyB,EAAE,GAAG,CAAC,GAAGE,GAAG;AAC1G,MAAMG,oBAAoB,GAAGZ,MAAM,IAAI,CAACA,MAAM,IAAIV,QAAQ,CAACU,MAAM,CAAC;AAClE,MAAMa,aAAa,GAAGA,CAACb,MAAM,EAAEc,IAAI,EAAEC,KAAK,KAAK;EAC7C,MAAMC,KAAK,GAAG,CAAC1B,QAAQ,CAACwB,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACtD,IAAIC,UAAU,GAAG,CAAC;EAClB,OAAOA,UAAU,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;IACpC,IAAIP,oBAAoB,CAACZ,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;IAC3C,MAAMS,GAAG,GAAGD,QAAQ,CAACQ,KAAK,CAACE,UAAU,CAAC,CAAC;IACvC,IAAI,CAAClB,MAAM,CAACS,GAAG,CAAC,IAAIM,KAAK,EAAEf,MAAM,CAACS,GAAG,CAAC,GAAG,IAAIM,KAAK,CAAC,CAAC;IACpD,IAAIK,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACvB,MAAM,EAAES,GAAG,CAAC,EAAE;MACrDT,MAAM,GAAGA,MAAM,CAACS,GAAG,CAAC;IACtB,CAAC,MAAM;MACLT,MAAM,GAAG,CAAC,CAAC;IACb;IACA,EAAEkB,UAAU;EACd;EACA,IAAIN,oBAAoB,CAACZ,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;EAC3C,OAAO;IACLT,GAAG,EAAES,MAAM;IACXwB,CAAC,EAAEhB,QAAQ,CAACQ,KAAK,CAACE,UAAU,CAAC;EAC/B,CAAC;AACH,CAAC;AACD,MAAMO,OAAO,GAAGA,CAACzB,MAAM,EAAEc,IAAI,EAAEY,QAAQ,KAAK;EAC1C,MAAM;IACJnC,GAAG;IACHiC;EACF,CAAC,GAAGX,aAAa,CAACb,MAAM,EAAEc,IAAI,EAAEM,MAAM,CAAC;EACvC,IAAI7B,GAAG,KAAKoC,SAAS,IAAIb,IAAI,CAACK,MAAM,KAAK,CAAC,EAAE;IAC1C5B,GAAG,CAACiC,CAAC,CAAC,GAAGE,QAAQ;IACjB;EACF;EACA,IAAIE,CAAC,GAAGd,IAAI,CAACA,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC;EAC7B,IAAIU,CAAC,GAAGf,IAAI,CAACgB,KAAK,CAAC,CAAC,EAAEhB,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC;EACtC,IAAIY,IAAI,GAAGlB,aAAa,CAACb,MAAM,EAAE6B,CAAC,EAAET,MAAM,CAAC;EAC3C,OAAOW,IAAI,CAACxC,GAAG,KAAKoC,SAAS,IAAIE,CAAC,CAACV,MAAM,EAAE;IACzCS,CAAC,GAAG,GAAGC,CAAC,CAACA,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC,IAAIS,CAAC,EAAE;IAC7BC,CAAC,GAAGA,CAAC,CAACC,KAAK,CAAC,CAAC,EAAED,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC;IAC5BY,IAAI,GAAGlB,aAAa,CAACb,MAAM,EAAE6B,CAAC,EAAET,MAAM,CAAC;IACvC,IAAIW,IAAI,EAAExC,GAAG,IAAI,OAAOwC,IAAI,CAACxC,GAAG,CAAC,GAAGwC,IAAI,CAACP,CAAC,IAAII,CAAC,EAAE,CAAC,KAAK,WAAW,EAAE;MAClEG,IAAI,CAACxC,GAAG,GAAGoC,SAAS;IACtB;EACF;EACAI,IAAI,CAACxC,GAAG,CAAC,GAAGwC,IAAI,CAACP,CAAC,IAAII,CAAC,EAAE,CAAC,GAAGF,QAAQ;AACvC,CAAC;AACD,MAAMM,QAAQ,GAAGA,CAAChC,MAAM,EAAEc,IAAI,EAAEY,QAAQ,EAAEO,MAAM,KAAK;EACnD,MAAM;IACJ1C,GAAG;IACHiC;EACF,CAAC,GAAGX,aAAa,CAACb,MAAM,EAAEc,IAAI,EAAEM,MAAM,CAAC;EACvC7B,GAAG,CAACiC,CAAC,CAAC,GAAGjC,GAAG,CAACiC,CAAC,CAAC,IAAI,EAAE;EACrBjC,GAAG,CAACiC,CAAC,CAAC,CAACU,IAAI,CAACR,QAAQ,CAAC;AACvB,CAAC;AACD,MAAMS,OAAO,GAAGA,CAACnC,MAAM,EAAEc,IAAI,KAAK;EAChC,MAAM;IACJvB,GAAG;IACHiC;EACF,CAAC,GAAGX,aAAa,CAACb,MAAM,EAAEc,IAAI,CAAC;EAC/B,IAAI,CAACvB,GAAG,EAAE,OAAOoC,SAAS;EAC1B,IAAI,CAACP,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChC,GAAG,EAAEiC,CAAC,CAAC,EAAE,OAAOG,SAAS;EACnE,OAAOpC,GAAG,CAACiC,CAAC,CAAC;AACf,CAAC;AACD,MAAMY,mBAAmB,GAAGA,CAACC,IAAI,EAAEC,WAAW,EAAE7B,GAAG,KAAK;EACtD,MAAM8B,KAAK,GAAGJ,OAAO,CAACE,IAAI,EAAE5B,GAAG,CAAC;EAChC,IAAI8B,KAAK,KAAKZ,SAAS,EAAE;IACvB,OAAOY,KAAK;EACd;EACA,OAAOJ,OAAO,CAACG,WAAW,EAAE7B,GAAG,CAAC;AAClC,CAAC;AACD,MAAM+B,UAAU,GAAGA,CAACC,MAAM,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAChD,KAAK,MAAMC,IAAI,IAAIF,MAAM,EAAE;IACzB,IAAIE,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,aAAa,EAAE;MAClD,IAAIA,IAAI,IAAIH,MAAM,EAAE;QAClB,IAAInD,QAAQ,CAACmD,MAAM,CAACG,IAAI,CAAC,CAAC,IAAIH,MAAM,CAACG,IAAI,CAAC,YAAYC,MAAM,IAAIvD,QAAQ,CAACoD,MAAM,CAACE,IAAI,CAAC,CAAC,IAAIF,MAAM,CAACE,IAAI,CAAC,YAAYC,MAAM,EAAE;UACxH,IAAIF,SAAS,EAAEF,MAAM,CAACG,IAAI,CAAC,GAAGF,MAAM,CAACE,IAAI,CAAC;QAC5C,CAAC,MAAM;UACLJ,UAAU,CAACC,MAAM,CAACG,IAAI,CAAC,EAAEF,MAAM,CAACE,IAAI,CAAC,EAAED,SAAS,CAAC;QACnD;MACF,CAAC,MAAM;QACLF,MAAM,CAACG,IAAI,CAAC,GAAGF,MAAM,CAACE,IAAI,CAAC;MAC7B;IACF;EACF;EACA,OAAOH,MAAM;AACf,CAAC;AACD,MAAMK,WAAW,GAAGC,GAAG,IAAIA,GAAG,CAACpC,OAAO,CAAC,qCAAqC,EAAE,MAAM,CAAC;AACrF,IAAIqC,UAAU,GAAG;EACf,GAAG,EAAE,OAAO;EACZ,GAAG,EAAE,MAAM;EACX,GAAG,EAAE,MAAM;EACX,GAAG,EAAE,QAAQ;EACb,GAAG,EAAE,OAAO;EACZ,GAAG,EAAE;AACP,CAAC;AACD,MAAMC,MAAM,GAAGZ,IAAI,IAAI;EACrB,IAAI/C,QAAQ,CAAC+C,IAAI,CAAC,EAAE;IAClB,OAAOA,IAAI,CAAC1B,OAAO,CAAC,YAAY,EAAER,CAAC,IAAI6C,UAAU,CAAC7C,CAAC,CAAC,CAAC;EACvD;EACA,OAAOkC,IAAI;AACb,CAAC;AACD,MAAMa,WAAW,CAAC;EAChBC,WAAWA,CAACC,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACC,WAAW,GAAG,EAAE;EACvB;EACAC,SAASA,CAACC,OAAO,EAAE;IACjB,MAAMC,eAAe,GAAG,IAAI,CAACL,SAAS,CAACM,GAAG,CAACF,OAAO,CAAC;IACnD,IAAIC,eAAe,KAAK/B,SAAS,EAAE;MACjC,OAAO+B,eAAe;IACxB;IACA,MAAME,SAAS,GAAG,IAAIC,MAAM,CAACJ,OAAO,CAAC;IACrC,IAAI,IAAI,CAACF,WAAW,CAACpC,MAAM,KAAK,IAAI,CAACiC,QAAQ,EAAE;MAC7C,IAAI,CAACC,SAAS,CAACS,MAAM,CAAC,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,CAAC,CAAC;IACjD;IACA,IAAI,CAACV,SAAS,CAACW,GAAG,CAACP,OAAO,EAAEG,SAAS,CAAC;IACtC,IAAI,CAACL,WAAW,CAACrB,IAAI,CAACuB,OAAO,CAAC;IAC9B,OAAOG,SAAS;EAClB;AACF;AACA,MAAMK,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACvC,MAAMC,8BAA8B,GAAG,IAAIhB,WAAW,CAAC,EAAE,CAAC;AAC1D,MAAMiB,mBAAmB,GAAGA,CAAC1D,GAAG,EAAE2D,WAAW,EAAEC,YAAY,KAAK;EAC9DD,WAAW,GAAGA,WAAW,IAAI,EAAE;EAC/BC,YAAY,GAAGA,YAAY,IAAI,EAAE;EACjC,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAACC,CAAC,IAAIJ,WAAW,CAAC1D,OAAO,CAAC8D,CAAC,CAAC,GAAG,CAAC,IAAIH,YAAY,CAAC3D,OAAO,CAAC8D,CAAC,CAAC,GAAG,CAAC,CAAC;EAClG,IAAIF,aAAa,CAACnD,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAC3C,MAAMsD,CAAC,GAAGP,8BAA8B,CAACV,SAAS,CAAC,IAAIc,aAAa,CAACI,GAAG,CAACF,CAAC,IAAIA,CAAC,KAAK,GAAG,GAAG,KAAK,GAAGA,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EAClH,IAAIC,OAAO,GAAG,CAACH,CAAC,CAACI,IAAI,CAACpE,GAAG,CAAC;EAC1B,IAAI,CAACmE,OAAO,EAAE;IACZ,MAAME,EAAE,GAAGrE,GAAG,CAACC,OAAO,CAAC2D,YAAY,CAAC;IACpC,IAAIS,EAAE,GAAG,CAAC,IAAI,CAACL,CAAC,CAACI,IAAI,CAACpE,GAAG,CAACsE,SAAS,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,EAAE;MAC3CF,OAAO,GAAG,IAAI;IAChB;EACF;EACA,OAAOA,OAAO;AAChB,CAAC;AACD,MAAMI,QAAQ,GAAGA,CAACzF,GAAG,EAAEuB,IAAI,EAAEuD,YAAY,GAAG,GAAG,KAAK;EAClD,IAAI,CAAC9E,GAAG,EAAE,OAAOoC,SAAS;EAC1B,IAAIpC,GAAG,CAACuB,IAAI,CAAC,EAAE;IACb,IAAI,CAACM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChC,GAAG,EAAEuB,IAAI,CAAC,EAAE,OAAOa,SAAS;IACtE,OAAOpC,GAAG,CAACuB,IAAI,CAAC;EAClB;EACA,MAAMmE,MAAM,GAAGnE,IAAI,CAACG,KAAK,CAACoD,YAAY,CAAC;EACvC,IAAIa,OAAO,GAAG3F,GAAG;EACjB,KAAK,IAAI4F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAAC9D,MAAM,GAAG;IAClC,IAAI,CAAC+D,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC3C,OAAOvD,SAAS;IAClB;IACA,IAAIyD,IAAI;IACR,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAGH,CAAC,EAAEG,CAAC,GAAGL,MAAM,CAAC9D,MAAM,EAAE,EAAEmE,CAAC,EAAE;MACtC,IAAIA,CAAC,KAAKH,CAAC,EAAE;QACXE,QAAQ,IAAIhB,YAAY;MAC1B;MACAgB,QAAQ,IAAIJ,MAAM,CAACK,CAAC,CAAC;MACrBF,IAAI,GAAGF,OAAO,CAACG,QAAQ,CAAC;MACxB,IAAID,IAAI,KAAKzD,SAAS,EAAE;QACtB,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACjB,OAAO,CAAC,OAAO0E,IAAI,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAGL,MAAM,CAAC9D,MAAM,GAAG,CAAC,EAAE;UACtF;QACF;QACAgE,CAAC,IAAIG,CAAC,GAAGH,CAAC,GAAG,CAAC;QACd;MACF;IACF;IACAD,OAAO,GAAGE,IAAI;EAChB;EACA,OAAOF,OAAO;AAChB,CAAC;AACD,MAAMK,cAAc,GAAGC,IAAI,IAAIA,IAAI,EAAE7E,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;AAEtD,MAAM8E,aAAa,GAAG;EACpBC,IAAI,EAAE,QAAQ;EACdC,GAAGA,CAACC,IAAI,EAAE;IACR,IAAI,CAACC,MAAM,CAAC,KAAK,EAAED,IAAI,CAAC;EAC1B,CAAC;EACDE,IAAIA,CAACF,IAAI,EAAE;IACT,IAAI,CAACC,MAAM,CAAC,MAAM,EAAED,IAAI,CAAC;EAC3B,CAAC;EACDG,KAAKA,CAACH,IAAI,EAAE;IACV,IAAI,CAACC,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;EAC5B,CAAC;EACDC,MAAMA,CAACH,IAAI,EAAEE,IAAI,EAAE;IACjBI,OAAO,GAAGN,IAAI,CAAC,EAAEO,KAAK,GAAGD,OAAO,EAAEJ,IAAI,CAAC;EACzC;AACF,CAAC;AACD,MAAMM,MAAM,CAAC;EACX/C,WAAWA,CAACgD,cAAc,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxC,IAAI,CAACC,IAAI,CAACF,cAAc,EAAEC,OAAO,CAAC;EACpC;EACAC,IAAIA,CAACF,cAAc,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,IAAI,CAACE,MAAM,GAAGF,OAAO,CAACE,MAAM,IAAI,UAAU;IAC1C,IAAI,CAACC,MAAM,GAAGJ,cAAc,IAAIV,aAAa;IAC7C,IAAI,CAACW,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACI,KAAK,GAAGJ,OAAO,CAACI,KAAK;EAC5B;EACAb,GAAGA,CAAC,GAAGC,IAAI,EAAE;IACX,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC;EAC5C;EACAE,IAAIA,CAAC,GAAGF,IAAI,EAAE;IACZ,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;EAC7C;EACAG,KAAKA,CAAC,GAAGH,IAAI,EAAE;IACb,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;EACxC;EACAc,SAASA,CAAC,GAAGd,IAAI,EAAE;IACjB,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,MAAM,EAAE,sBAAsB,EAAE,IAAI,CAAC;EACjE;EACAa,OAAOA,CAACb,IAAI,EAAEe,GAAG,EAAEL,MAAM,EAAEM,SAAS,EAAE;IACpC,IAAIA,SAAS,IAAI,CAAC,IAAI,CAACJ,KAAK,EAAE,OAAO,IAAI;IACzC,IAAIlH,QAAQ,CAACsG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,GAAG,GAAGU,MAAM,GAAG,IAAI,CAACA,MAAM,IAAIV,IAAI,CAAC,CAAC,CAAC,EAAE;IACrE,OAAO,IAAI,CAACW,MAAM,CAACI,GAAG,CAAC,CAACf,IAAI,CAAC;EAC/B;EACAiB,MAAMA,CAACC,UAAU,EAAE;IACjB,OAAO,IAAIZ,MAAM,CAAC,IAAI,CAACK,MAAM,EAAE;MAC7B,GAAG;QACDD,MAAM,EAAE,GAAG,IAAI,CAACA,MAAM,IAAIQ,UAAU;MACtC,CAAC;MACD,GAAG,IAAI,CAACV;IACV,CAAC,CAAC;EACJ;EACAW,KAAKA,CAACX,OAAO,EAAE;IACbA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO;IACjCA,OAAO,CAACE,MAAM,GAAGF,OAAO,CAACE,MAAM,IAAI,IAAI,CAACA,MAAM;IAC9C,OAAO,IAAIJ,MAAM,CAAC,IAAI,CAACK,MAAM,EAAEH,OAAO,CAAC;EACzC;AACF;AACA,IAAIY,UAAU,GAAG,IAAId,MAAM,CAAC,CAAC;AAE7B,MAAMe,YAAY,CAAC;EACjB9D,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAC+D,SAAS,GAAG,CAAC,CAAC;EACrB;EACAC,EAAEA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IACnBD,MAAM,CAACnG,KAAK,CAAC,GAAG,CAAC,CAACZ,OAAO,CAACiH,KAAK,IAAI;MACjC,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACI,KAAK,CAAC,EAAE,IAAI,CAACJ,SAAS,CAACI,KAAK,CAAC,GAAG,IAAIhE,GAAG,CAAC,CAAC;MAC7D,MAAMiE,YAAY,GAAG,IAAI,CAACL,SAAS,CAACI,KAAK,CAAC,CAAC3D,GAAG,CAAC0D,QAAQ,CAAC,IAAI,CAAC;MAC7D,IAAI,CAACH,SAAS,CAACI,KAAK,CAAC,CAACtD,GAAG,CAACqD,QAAQ,EAAEE,YAAY,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC;IACF,OAAO,IAAI;EACb;EACAC,GAAGA,CAACF,KAAK,EAAED,QAAQ,EAAE;IACnB,IAAI,CAAC,IAAI,CAACH,SAAS,CAACI,KAAK,CAAC,EAAE;IAC5B,IAAI,CAACD,QAAQ,EAAE;MACb,OAAO,IAAI,CAACH,SAAS,CAACI,KAAK,CAAC;MAC5B;IACF;IACA,IAAI,CAACJ,SAAS,CAACI,KAAK,CAAC,CAACxD,MAAM,CAACuD,QAAQ,CAAC;EACxC;EACAI,IAAIA,CAACH,KAAK,EAAE,GAAG1B,IAAI,EAAE;IACnB,IAAI,IAAI,CAACsB,SAAS,CAACI,KAAK,CAAC,EAAE;MACzB,MAAMI,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACV,SAAS,CAACI,KAAK,CAAC,CAACO,OAAO,CAAC,CAAC,CAAC;MAC1DH,MAAM,CAACrH,OAAO,CAAC,CAAC,CAACyH,QAAQ,EAAEC,aAAa,CAAC,KAAK;QAC5C,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,aAAa,EAAE5C,CAAC,EAAE,EAAE;UACtC2C,QAAQ,CAAC,GAAGlC,IAAI,CAAC;QACnB;MACF,CAAC,CAAC;IACJ;IACA,IAAI,IAAI,CAACsB,SAAS,CAAC,GAAG,CAAC,EAAE;MACvB,MAAMQ,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACV,SAAS,CAAC,GAAG,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC;MACxDH,MAAM,CAACrH,OAAO,CAAC,CAAC,CAACyH,QAAQ,EAAEC,aAAa,CAAC,KAAK;QAC5C,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,aAAa,EAAE5C,CAAC,EAAE,EAAE;UACtC2C,QAAQ,CAAC7B,KAAK,CAAC6B,QAAQ,EAAE,CAACR,KAAK,EAAE,GAAG1B,IAAI,CAAC,CAAC;QAC5C;MACF,CAAC,CAAC;IACJ;EACF;AACF;AAEA,MAAMoC,aAAa,SAASf,YAAY,CAAC;EACvC9D,WAAWA,CAACd,IAAI,EAAE+D,OAAO,GAAG;IAC1B6B,EAAE,EAAE,CAAC,aAAa,CAAC;IACnBC,SAAS,EAAE;EACb,CAAC,EAAE;IACD,KAAK,CAAC,CAAC;IACP,IAAI,CAAC7F,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACtB,IAAI,CAAC+D,OAAO,GAAGA,OAAO;IACtB,IAAI,IAAI,CAACA,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,EAAE;MAC3C,IAAI,CAACyE,OAAO,CAAC/B,YAAY,GAAG,GAAG;IACjC;IACA,IAAI,IAAI,CAAC+B,OAAO,CAAC+B,mBAAmB,KAAKxG,SAAS,EAAE;MAClD,IAAI,CAACyE,OAAO,CAAC+B,mBAAmB,GAAG,IAAI;IACzC;EACF;EACAC,aAAaA,CAACH,EAAE,EAAE;IAChB,IAAI,IAAI,CAAC7B,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACuH,EAAE,CAAC,GAAG,CAAC,EAAE;MACnC,IAAI,CAAC7B,OAAO,CAAC6B,EAAE,CAAC/F,IAAI,CAAC+F,EAAE,CAAC;IAC1B;EACF;EACAI,gBAAgBA,CAACJ,EAAE,EAAE;IACnB,MAAMK,KAAK,GAAG,IAAI,CAAClC,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACuH,EAAE,CAAC;IACzC,IAAIK,KAAK,GAAG,CAAC,CAAC,EAAE;MACd,IAAI,CAAClC,OAAO,CAAC6B,EAAE,CAACM,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAClC;EACF;EACAE,WAAWA,CAACC,GAAG,EAAER,EAAE,EAAExH,GAAG,EAAE2F,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,MAAM/B,YAAY,GAAG+B,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,GAAGyE,OAAO,CAAC/B,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAC1G,MAAM8D,mBAAmB,GAAG/B,OAAO,CAAC+B,mBAAmB,KAAKxG,SAAS,GAAGyE,OAAO,CAAC+B,mBAAmB,GAAG,IAAI,CAAC/B,OAAO,CAAC+B,mBAAmB;IACtI,IAAIrH,IAAI;IACR,IAAI2H,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACzBI,IAAI,GAAG2H,GAAG,CAACxH,KAAK,CAAC,GAAG,CAAC;IACvB,CAAC,MAAM;MACLH,IAAI,GAAG,CAAC2H,GAAG,EAAER,EAAE,CAAC;MAChB,IAAIxH,GAAG,EAAE;QACP,IAAIkH,KAAK,CAACe,OAAO,CAACjI,GAAG,CAAC,EAAE;UACtBK,IAAI,CAACoB,IAAI,CAAC,GAAGzB,GAAG,CAAC;QACnB,CAAC,MAAM,IAAInB,QAAQ,CAACmB,GAAG,CAAC,IAAI4D,YAAY,EAAE;UACxCvD,IAAI,CAACoB,IAAI,CAAC,GAAGzB,GAAG,CAACQ,KAAK,CAACoD,YAAY,CAAC,CAAC;QACvC,CAAC,MAAM;UACLvD,IAAI,CAACoB,IAAI,CAACzB,GAAG,CAAC;QAChB;MACF;IACF;IACA,MAAMkI,MAAM,GAAGxG,OAAO,CAAC,IAAI,CAACE,IAAI,EAAEvB,IAAI,CAAC;IACvC,IAAI,CAAC6H,MAAM,IAAI,CAACV,EAAE,IAAI,CAACxH,GAAG,IAAIgI,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACnD+H,GAAG,GAAG3H,IAAI,CAAC,CAAC,CAAC;MACbmH,EAAE,GAAGnH,IAAI,CAAC,CAAC,CAAC;MACZL,GAAG,GAAGK,IAAI,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC6C,IAAI,CAAC,GAAG,CAAC;IAC/B;IACA,IAAIgE,MAAM,IAAI,CAACR,mBAAmB,IAAI,CAAC7I,QAAQ,CAACmB,GAAG,CAAC,EAAE,OAAOkI,MAAM;IACnE,OAAO3D,QAAQ,CAAC,IAAI,CAAC3C,IAAI,GAAGoG,GAAG,CAAC,GAAGR,EAAE,CAAC,EAAExH,GAAG,EAAE4D,YAAY,CAAC;EAC5D;EACAuE,WAAWA,CAACH,GAAG,EAAER,EAAE,EAAExH,GAAG,EAAE8B,KAAK,EAAE6D,OAAO,GAAG;IACzCyC,MAAM,EAAE;EACV,CAAC,EAAE;IACD,MAAMxE,YAAY,GAAG+B,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,GAAGyE,OAAO,CAAC/B,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAC1G,IAAIvD,IAAI,GAAG,CAAC2H,GAAG,EAAER,EAAE,CAAC;IACpB,IAAIxH,GAAG,EAAEK,IAAI,GAAGA,IAAI,CAACmB,MAAM,CAACoC,YAAY,GAAG5D,GAAG,CAACQ,KAAK,CAACoD,YAAY,CAAC,GAAG5D,GAAG,CAAC;IACzE,IAAIgI,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACzBI,IAAI,GAAG2H,GAAG,CAACxH,KAAK,CAAC,GAAG,CAAC;MACrBsB,KAAK,GAAG0F,EAAE;MACVA,EAAE,GAAGnH,IAAI,CAAC,CAAC,CAAC;IACd;IACA,IAAI,CAACsH,aAAa,CAACH,EAAE,CAAC;IACtBxG,OAAO,CAAC,IAAI,CAACY,IAAI,EAAEvB,IAAI,EAAEyB,KAAK,CAAC;IAC/B,IAAI,CAAC6D,OAAO,CAACyC,MAAM,EAAE,IAAI,CAACpB,IAAI,CAAC,OAAO,EAAEgB,GAAG,EAAER,EAAE,EAAExH,GAAG,EAAE8B,KAAK,CAAC;EAC9D;EACAuG,YAAYA,CAACL,GAAG,EAAER,EAAE,EAAEc,SAAS,EAAE3C,OAAO,GAAG;IACzCyC,MAAM,EAAE;EACV,CAAC,EAAE;IACD,KAAK,MAAMvI,CAAC,IAAIyI,SAAS,EAAE;MACzB,IAAIzJ,QAAQ,CAACyJ,SAAS,CAACzI,CAAC,CAAC,CAAC,IAAIqH,KAAK,CAACe,OAAO,CAACK,SAAS,CAACzI,CAAC,CAAC,CAAC,EAAE,IAAI,CAACsI,WAAW,CAACH,GAAG,EAAER,EAAE,EAAE3H,CAAC,EAAEyI,SAAS,CAACzI,CAAC,CAAC,EAAE;QACpGuI,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IACA,IAAI,CAACzC,OAAO,CAACyC,MAAM,EAAE,IAAI,CAACpB,IAAI,CAAC,OAAO,EAAEgB,GAAG,EAAER,EAAE,EAAEc,SAAS,CAAC;EAC7D;EACAC,iBAAiBA,CAACP,GAAG,EAAER,EAAE,EAAEc,SAAS,EAAEE,IAAI,EAAEtG,SAAS,EAAEyD,OAAO,GAAG;IAC/DyC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACZ,CAAC,EAAE;IACD,IAAIpI,IAAI,GAAG,CAAC2H,GAAG,EAAER,EAAE,CAAC;IACpB,IAAIQ,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACzBI,IAAI,GAAG2H,GAAG,CAACxH,KAAK,CAAC,GAAG,CAAC;MACrBgI,IAAI,GAAGF,SAAS;MAChBA,SAAS,GAAGd,EAAE;MACdA,EAAE,GAAGnH,IAAI,CAAC,CAAC,CAAC;IACd;IACA,IAAI,CAACsH,aAAa,CAACH,EAAE,CAAC;IACtB,IAAIkB,IAAI,GAAGhH,OAAO,CAAC,IAAI,CAACE,IAAI,EAAEvB,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,IAAI,CAACsF,OAAO,CAAC8C,QAAQ,EAAEH,SAAS,GAAGK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACP,SAAS,CAAC,CAAC;IACxE,IAAIE,IAAI,EAAE;MACRzG,UAAU,CAAC2G,IAAI,EAAEJ,SAAS,EAAEpG,SAAS,CAAC;IACxC,CAAC,MAAM;MACLwG,IAAI,GAAG;QACL,GAAGA,IAAI;QACP,GAAGJ;MACL,CAAC;IACH;IACAtH,OAAO,CAAC,IAAI,CAACY,IAAI,EAAEvB,IAAI,EAAEqI,IAAI,CAAC;IAC9B,IAAI,CAAC/C,OAAO,CAACyC,MAAM,EAAE,IAAI,CAACpB,IAAI,CAAC,OAAO,EAAEgB,GAAG,EAAER,EAAE,EAAEc,SAAS,CAAC;EAC7D;EACAQ,oBAAoBA,CAACd,GAAG,EAAER,EAAE,EAAE;IAC5B,IAAI,IAAI,CAACuB,iBAAiB,CAACf,GAAG,EAAER,EAAE,CAAC,EAAE;MACnC,OAAO,IAAI,CAAC5F,IAAI,CAACoG,GAAG,CAAC,CAACR,EAAE,CAAC;IAC3B;IACA,IAAI,CAACI,gBAAgB,CAACJ,EAAE,CAAC;IACzB,IAAI,CAACR,IAAI,CAAC,SAAS,EAAEgB,GAAG,EAAER,EAAE,CAAC;EAC/B;EACAuB,iBAAiBA,CAACf,GAAG,EAAER,EAAE,EAAE;IACzB,OAAO,IAAI,CAACO,WAAW,CAACC,GAAG,EAAER,EAAE,CAAC,KAAKtG,SAAS;EAChD;EACA8H,iBAAiBA,CAAChB,GAAG,EAAER,EAAE,EAAE;IACzB,IAAI,CAACA,EAAE,EAAEA,EAAE,GAAG,IAAI,CAAC7B,OAAO,CAAC8B,SAAS;IACpC,OAAO,IAAI,CAACM,WAAW,CAACC,GAAG,EAAER,EAAE,CAAC;EAClC;EACAyB,iBAAiBA,CAACjB,GAAG,EAAE;IACrB,OAAO,IAAI,CAACpG,IAAI,CAACoG,GAAG,CAAC;EACvB;EACAkB,2BAA2BA,CAAClB,GAAG,EAAE;IAC/B,MAAMpG,IAAI,GAAG,IAAI,CAACqH,iBAAiB,CAACjB,GAAG,CAAC;IACxC,MAAMmB,CAAC,GAAGvH,IAAI,IAAIjB,MAAM,CAACyI,IAAI,CAACxH,IAAI,CAAC,IAAI,EAAE;IACzC,OAAO,CAAC,CAACuH,CAAC,CAACE,IAAI,CAACC,CAAC,IAAI1H,IAAI,CAAC0H,CAAC,CAAC,IAAI3I,MAAM,CAACyI,IAAI,CAACxH,IAAI,CAAC0H,CAAC,CAAC,CAAC,CAAC5I,MAAM,GAAG,CAAC,CAAC;EAClE;EACA6I,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAAC3H,IAAI;EAClB;AACF;AAEA,IAAI4H,aAAa,GAAG;EAClBC,UAAU,EAAE,CAAC,CAAC;EACdC,gBAAgBA,CAACC,MAAM,EAAE;IACvB,IAAI,CAACF,UAAU,CAACE,MAAM,CAACC,IAAI,CAAC,GAAGD,MAAM;EACvC,CAAC;EACDE,MAAMA,CAACJ,UAAU,EAAE3H,KAAK,EAAE9B,GAAG,EAAE2F,OAAO,EAAEmE,UAAU,EAAE;IAClDL,UAAU,CAAC7J,OAAO,CAACmK,SAAS,IAAI;MAC9BjI,KAAK,GAAG,IAAI,CAAC2H,UAAU,CAACM,SAAS,CAAC,EAAEC,OAAO,CAAClI,KAAK,EAAE9B,GAAG,EAAE2F,OAAO,EAAEmE,UAAU,CAAC,IAAIhI,KAAK;IACvF,CAAC,CAAC;IACF,OAAOA,KAAK;EACd;AACF,CAAC;AAED,MAAMmI,QAAQ,GAAGC,MAAM,CAAC,kBAAkB,CAAC;AAC3C,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,OAAO,GAAG1J,MAAM,CAACyF,MAAM,CAAC,IAAI,CAAC;EACnC,IAAIkE,KAAK;EACTD,OAAO,CAACnH,GAAG,GAAG,CAAClB,MAAM,EAAEhC,GAAG,KAAK;IAC7BsK,KAAK,EAAEC,MAAM,GAAG,CAAC;IACjB,IAAIvK,GAAG,KAAKiK,QAAQ,EAAE,OAAOG,KAAK;IAClCA,KAAK,CAAC3I,IAAI,CAACzB,GAAG,CAAC;IACfsK,KAAK,GAAGE,KAAK,CAACC,SAAS,CAACzI,MAAM,EAAEqI,OAAO,CAAC;IACxC,OAAOC,KAAK,CAACA,KAAK;EACpB,CAAC;EACD,OAAOE,KAAK,CAACC,SAAS,CAAC9J,MAAM,CAACyF,MAAM,CAAC,IAAI,CAAC,EAAEiE,OAAO,CAAC,CAACC,KAAK;AAC5D;AACA,SAASI,gBAAgBA,CAACC,QAAQ,EAAEC,IAAI,EAAE;EACxC,MAAM;IACJ,CAACX,QAAQ,GAAG5J;EACd,CAAC,GAAGsK,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;EAC3B,OAAO9J,IAAI,CAAC6D,IAAI,CAAC0G,IAAI,EAAEhH,YAAY,IAAI,GAAG,CAAC;AAC7C;AAEA,MAAMiH,gBAAgB,GAAG,CAAC,CAAC;AAC3B,MAAMC,oBAAoB,GAAG9L,GAAG,IAAI,CAACH,QAAQ,CAACG,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,SAAS,IAAI,OAAOA,GAAG,KAAK,QAAQ;AACzG,MAAM+L,UAAU,SAASvE,YAAY,CAAC;EACpC9D,WAAWA,CAACsI,QAAQ,EAAErF,OAAO,GAAG,CAAC,CAAC,EAAE;IAClC,KAAK,CAAC,CAAC;IACPnG,IAAI,CAAC,CAAC,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,EAAE,kBAAkB,EAAE,YAAY,EAAE,OAAO,CAAC,EAAEwL,QAAQ,EAAE,IAAI,CAAC;IACrI,IAAI,CAACrF,OAAO,GAAGA,OAAO;IACtB,IAAI,IAAI,CAACA,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,EAAE;MAC3C,IAAI,CAACyE,OAAO,CAAC/B,YAAY,GAAG,GAAG;IACjC;IACA,IAAI,CAACkC,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,YAAY,CAAC;EAC/C;EACA6E,cAAcA,CAACjD,GAAG,EAAE;IAClB,IAAIA,GAAG,EAAE,IAAI,CAACkD,QAAQ,GAAGlD,GAAG;EAC9B;EACAmD,MAAMA,CAACnL,GAAG,EAAEoL,CAAC,GAAG;IACdC,aAAa,EAAE,CAAC;EAClB,CAAC,EAAE;IACD,MAAMC,GAAG,GAAG;MACV,GAAGF;IACL,CAAC;IACD,IAAIpL,GAAG,IAAI,IAAI,EAAE,OAAO,KAAK;IAC7B,MAAMuL,QAAQ,GAAG,IAAI,CAACnM,OAAO,CAACY,GAAG,EAAEsL,GAAG,CAAC;IACvC,OAAOC,QAAQ,EAAEvM,GAAG,KAAKkC,SAAS;EACpC;EACAsK,cAAcA,CAACxL,GAAG,EAAEsL,GAAG,EAAE;IACvB,IAAI3H,WAAW,GAAG2H,GAAG,CAAC3H,WAAW,KAAKzC,SAAS,GAAGoK,GAAG,CAAC3H,WAAW,GAAG,IAAI,CAACgC,OAAO,CAAChC,WAAW;IAC5F,IAAIA,WAAW,KAAKzC,SAAS,EAAEyC,WAAW,GAAG,GAAG;IAChD,MAAMC,YAAY,GAAG0H,GAAG,CAAC1H,YAAY,KAAK1C,SAAS,GAAGoK,GAAG,CAAC1H,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAClG,IAAI6H,UAAU,GAAGH,GAAG,CAAC9D,EAAE,IAAI,IAAI,CAAC7B,OAAO,CAAC8B,SAAS,IAAI,EAAE;IACvD,MAAMiE,oBAAoB,GAAG/H,WAAW,IAAI3D,GAAG,CAACC,OAAO,CAAC0D,WAAW,CAAC,GAAG,CAAC,CAAC;IACzE,MAAMgI,oBAAoB,GAAG,CAAC,IAAI,CAAChG,OAAO,CAACiG,uBAAuB,IAAI,CAACN,GAAG,CAAC1H,YAAY,IAAI,CAAC,IAAI,CAAC+B,OAAO,CAACkG,sBAAsB,IAAI,CAACP,GAAG,CAAC3H,WAAW,IAAI,CAACD,mBAAmB,CAAC1D,GAAG,EAAE2D,WAAW,EAAEC,YAAY,CAAC;IAC3M,IAAI8H,oBAAoB,IAAI,CAACC,oBAAoB,EAAE;MACjD,MAAM9L,CAAC,GAAGG,GAAG,CAAC8L,KAAK,CAAC,IAAI,CAACC,YAAY,CAACC,aAAa,CAAC;MACpD,IAAInM,CAAC,IAAIA,CAAC,CAACa,MAAM,GAAG,CAAC,EAAE;QACrB,OAAO;UACLV,GAAG;UACHyL,UAAU,EAAE5M,QAAQ,CAAC4M,UAAU,CAAC,GAAG,CAACA,UAAU,CAAC,GAAGA;QACpD,CAAC;MACH;MACA,MAAMQ,KAAK,GAAGjM,GAAG,CAACQ,KAAK,CAACmD,WAAW,CAAC;MACpC,IAAIA,WAAW,KAAKC,YAAY,IAAID,WAAW,KAAKC,YAAY,IAAI,IAAI,CAAC+B,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACgM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAER,UAAU,GAAGQ,KAAK,CAAC3I,KAAK,CAAC,CAAC;MACtItD,GAAG,GAAGiM,KAAK,CAAC/H,IAAI,CAACN,YAAY,CAAC;IAChC;IACA,OAAO;MACL5D,GAAG;MACHyL,UAAU,EAAE5M,QAAQ,CAAC4M,UAAU,CAAC,GAAG,CAACA,UAAU,CAAC,GAAGA;IACpD,CAAC;EACH;EACAS,SAASA,CAAC9C,IAAI,EAAEgC,CAAC,EAAEe,OAAO,EAAE;IAC1B,IAAIb,GAAG,GAAG,OAAOF,CAAC,KAAK,QAAQ,GAAG;MAChC,GAAGA;IACL,CAAC,GAAGA,CAAC;IACL,IAAI,OAAOE,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC3F,OAAO,CAACyG,gCAAgC,EAAE;MAC5Ed,GAAG,GAAG,IAAI,CAAC3F,OAAO,CAACyG,gCAAgC,CAACC,SAAS,CAAC;IAChE;IACA,IAAI,OAAOf,GAAG,KAAK,QAAQ,EAAEA,GAAG,GAAG;MACjC,GAAGA;IACL,CAAC;IACD,IAAI,CAACA,GAAG,EAAEA,GAAG,GAAG,CAAC,CAAC;IAClB,IAAIlC,IAAI,IAAI,IAAI,EAAE,OAAO,EAAE;IAC3B,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAEA,IAAI,GAAGsB,gBAAgB,CAACtB,IAAI,EAAE;MAC5D,GAAG,IAAI,CAACzD,OAAO;MACf,GAAG2F;IACL,CAAC,CAAC;IACF,IAAI,CAACpE,KAAK,CAACe,OAAO,CAACmB,IAAI,CAAC,EAAEA,IAAI,GAAG,CAAChH,MAAM,CAACgH,IAAI,CAAC,CAAC;IAC/C,MAAMkD,aAAa,GAAGhB,GAAG,CAACgB,aAAa,KAAKpL,SAAS,GAAGoK,GAAG,CAACgB,aAAa,GAAG,IAAI,CAAC3G,OAAO,CAAC2G,aAAa;IACtG,MAAM1I,YAAY,GAAG0H,GAAG,CAAC1H,YAAY,KAAK1C,SAAS,GAAGoK,GAAG,CAAC1H,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAClG,MAAM;MACJ5D,GAAG;MACHyL;IACF,CAAC,GAAG,IAAI,CAACD,cAAc,CAACpC,IAAI,CAACA,IAAI,CAAC1I,MAAM,GAAG,CAAC,CAAC,EAAE4K,GAAG,CAAC;IACnD,MAAMiB,SAAS,GAAGd,UAAU,CAACA,UAAU,CAAC/K,MAAM,GAAG,CAAC,CAAC;IACnD,IAAIiD,WAAW,GAAG2H,GAAG,CAAC3H,WAAW,KAAKzC,SAAS,GAAGoK,GAAG,CAAC3H,WAAW,GAAG,IAAI,CAACgC,OAAO,CAAChC,WAAW;IAC5F,IAAIA,WAAW,KAAKzC,SAAS,EAAEyC,WAAW,GAAG,GAAG;IAChD,MAAMqE,GAAG,GAAGsD,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ;IACpC,MAAMsB,uBAAuB,GAAGlB,GAAG,CAACkB,uBAAuB,IAAI,IAAI,CAAC7G,OAAO,CAAC6G,uBAAuB;IACnG,IAAIxE,GAAG,EAAEyE,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE;MACnC,IAAID,uBAAuB,EAAE;QAC3B,IAAIF,aAAa,EAAE;UACjB,OAAO;YACLtN,GAAG,EAAE,GAAGuN,SAAS,GAAG5I,WAAW,GAAG3D,GAAG,EAAE;YACvC0M,OAAO,EAAE1M,GAAG;YACZ2M,YAAY,EAAE3M,GAAG;YACjB4M,OAAO,EAAE5E,GAAG;YACZ6E,MAAM,EAAEN,SAAS;YACjBO,UAAU,EAAE,IAAI,CAACC,oBAAoB,CAACzB,GAAG;UAC3C,CAAC;QACH;QACA,OAAO,GAAGiB,SAAS,GAAG5I,WAAW,GAAG3D,GAAG,EAAE;MAC3C;MACA,IAAIsM,aAAa,EAAE;QACjB,OAAO;UACLtN,GAAG,EAAEgB,GAAG;UACR0M,OAAO,EAAE1M,GAAG;UACZ2M,YAAY,EAAE3M,GAAG;UACjB4M,OAAO,EAAE5E,GAAG;UACZ6E,MAAM,EAAEN,SAAS;UACjBO,UAAU,EAAE,IAAI,CAACC,oBAAoB,CAACzB,GAAG;QAC3C,CAAC;MACH;MACA,OAAOtL,GAAG;IACZ;IACA,MAAMuL,QAAQ,GAAG,IAAI,CAACnM,OAAO,CAACgK,IAAI,EAAEkC,GAAG,CAAC;IACxC,IAAItM,GAAG,GAAGuM,QAAQ,EAAEvM,GAAG;IACvB,MAAMgO,UAAU,GAAGzB,QAAQ,EAAEmB,OAAO,IAAI1M,GAAG;IAC3C,MAAMiN,eAAe,GAAG1B,QAAQ,EAAEoB,YAAY,IAAI3M,GAAG;IACrD,MAAMkN,QAAQ,GAAG,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,iBAAiB,CAAC;IAC5E,MAAMC,UAAU,GAAG7B,GAAG,CAAC6B,UAAU,KAAKjM,SAAS,GAAGoK,GAAG,CAAC6B,UAAU,GAAG,IAAI,CAACxH,OAAO,CAACwH,UAAU;IAC1F,MAAMC,0BAA0B,GAAG,CAAC,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACC,cAAc;IACrF,MAAMC,mBAAmB,GAAGjC,GAAG,CAACkC,KAAK,KAAKtM,SAAS,IAAI,CAACrC,QAAQ,CAACyM,GAAG,CAACkC,KAAK,CAAC;IAC3E,MAAMC,eAAe,GAAG1C,UAAU,CAAC0C,eAAe,CAACnC,GAAG,CAAC;IACvD,MAAMoC,kBAAkB,GAAGH,mBAAmB,GAAG,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC5F,GAAG,EAAEsD,GAAG,CAACkC,KAAK,EAAElC,GAAG,CAAC,GAAG,EAAE;IACxG,MAAMuC,iCAAiC,GAAGvC,GAAG,CAACwC,OAAO,IAAIP,mBAAmB,GAAG,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC5F,GAAG,EAAEsD,GAAG,CAACkC,KAAK,EAAE;MAC3HM,OAAO,EAAE;IACX,CAAC,CAAC,GAAG,EAAE;IACP,MAAMC,qBAAqB,GAAGR,mBAAmB,IAAI,CAACjC,GAAG,CAACwC,OAAO,IAAIxC,GAAG,CAACkC,KAAK,KAAK,CAAC;IACpF,MAAMQ,YAAY,GAAGD,qBAAqB,IAAIzC,GAAG,CAAC,eAAe,IAAI,CAAC3F,OAAO,CAACsI,eAAe,MAAM,CAAC,IAAI3C,GAAG,CAAC,eAAeoC,kBAAkB,EAAE,CAAC,IAAIpC,GAAG,CAAC,eAAeuC,iCAAiC,EAAE,CAAC,IAAIvC,GAAG,CAAC0C,YAAY;IAC/N,IAAIE,aAAa,GAAGlP,GAAG;IACvB,IAAIoO,0BAA0B,IAAI,CAACpO,GAAG,IAAIyO,eAAe,EAAE;MACzDS,aAAa,GAAGF,YAAY;IAC9B;IACA,MAAMV,cAAc,GAAGxC,oBAAoB,CAACoD,aAAa,CAAC;IAC1D,MAAMC,OAAO,GAAGxN,MAAM,CAACC,SAAS,CAACwN,QAAQ,CAAC5I,KAAK,CAAC0I,aAAa,CAAC;IAC9D,IAAId,0BAA0B,IAAIc,aAAa,IAAIZ,cAAc,IAAIJ,QAAQ,CAACjN,OAAO,CAACkO,OAAO,CAAC,GAAG,CAAC,IAAI,EAAEtP,QAAQ,CAACsO,UAAU,CAAC,IAAIjG,KAAK,CAACe,OAAO,CAACiG,aAAa,CAAC,CAAC,EAAE;MAC7J,IAAI,CAAC5C,GAAG,CAAC+C,aAAa,IAAI,CAAC,IAAI,CAAC1I,OAAO,CAAC0I,aAAa,EAAE;QACrD,IAAI,CAAC,IAAI,CAAC1I,OAAO,CAAC2I,qBAAqB,EAAE;UACvC,IAAI,CAACxI,MAAM,CAACT,IAAI,CAAC,iEAAiE,CAAC;QACrF;QACA,MAAMrB,CAAC,GAAG,IAAI,CAAC2B,OAAO,CAAC2I,qBAAqB,GAAG,IAAI,CAAC3I,OAAO,CAAC2I,qBAAqB,CAACtB,UAAU,EAAEkB,aAAa,EAAE;UAC3G,GAAG5C,GAAG;UACN9D,EAAE,EAAEiE;QACN,CAAC,CAAC,GAAG,QAAQzL,GAAG,KAAK,IAAI,CAACkL,QAAQ,0CAA0C;QAC5E,IAAIoB,aAAa,EAAE;UACjBf,QAAQ,CAACvM,GAAG,GAAGgF,CAAC;UAChBuH,QAAQ,CAACuB,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAACzB,GAAG,CAAC;UACpD,OAAOC,QAAQ;QACjB;QACA,OAAOvH,CAAC;MACV;MACA,IAAIJ,YAAY,EAAE;QAChB,MAAM2K,cAAc,GAAGrH,KAAK,CAACe,OAAO,CAACiG,aAAa,CAAC;QACnD,MAAM1O,IAAI,GAAG+O,cAAc,GAAG,EAAE,GAAG,CAAC,CAAC;QACrC,MAAMC,WAAW,GAAGD,cAAc,GAAGtB,eAAe,GAAGD,UAAU;QACjE,KAAK,MAAMnN,CAAC,IAAIqO,aAAa,EAAE;UAC7B,IAAIvN,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACoN,aAAa,EAAErO,CAAC,CAAC,EAAE;YAC1D,MAAM4O,OAAO,GAAG,GAAGD,WAAW,GAAG5K,YAAY,GAAG/D,CAAC,EAAE;YACnD,IAAI4N,eAAe,IAAI,CAACzO,GAAG,EAAE;cAC3BQ,IAAI,CAACK,CAAC,CAAC,GAAG,IAAI,CAACqM,SAAS,CAACuC,OAAO,EAAE;gBAChC,GAAGnD,GAAG;gBACN0C,YAAY,EAAElD,oBAAoB,CAACkD,YAAY,CAAC,GAAGA,YAAY,CAACnO,CAAC,CAAC,GAAGqB,SAAS;gBAC9E,GAAG;kBACDiM,UAAU,EAAE,KAAK;kBACjB3F,EAAE,EAAEiE;gBACN;cACF,CAAC,CAAC;YACJ,CAAC,MAAM;cACLjM,IAAI,CAACK,CAAC,CAAC,GAAG,IAAI,CAACqM,SAAS,CAACuC,OAAO,EAAE;gBAChC,GAAGnD,GAAG;gBACN,GAAG;kBACD6B,UAAU,EAAE,KAAK;kBACjB3F,EAAE,EAAEiE;gBACN;cACF,CAAC,CAAC;YACJ;YACA,IAAIjM,IAAI,CAACK,CAAC,CAAC,KAAK4O,OAAO,EAAEjP,IAAI,CAACK,CAAC,CAAC,GAAGqO,aAAa,CAACrO,CAAC,CAAC;UACrD;QACF;QACAb,GAAG,GAAGQ,IAAI;MACZ;IACF,CAAC,MAAM,IAAI4N,0BAA0B,IAAIvO,QAAQ,CAACsO,UAAU,CAAC,IAAIjG,KAAK,CAACe,OAAO,CAACjJ,GAAG,CAAC,EAAE;MACnFA,GAAG,GAAGA,GAAG,CAACkF,IAAI,CAACiJ,UAAU,CAAC;MAC1B,IAAInO,GAAG,EAAEA,GAAG,GAAG,IAAI,CAAC0P,iBAAiB,CAAC1P,GAAG,EAAEoK,IAAI,EAAEkC,GAAG,EAAEa,OAAO,CAAC;IAChE,CAAC,MAAM;MACL,IAAIwC,WAAW,GAAG,KAAK;MACvB,IAAIjC,OAAO,GAAG,KAAK;MACnB,IAAI,CAAC,IAAI,CAACkC,aAAa,CAAC5P,GAAG,CAAC,IAAIyO,eAAe,EAAE;QAC/CkB,WAAW,GAAG,IAAI;QAClB3P,GAAG,GAAGgP,YAAY;MACpB;MACA,IAAI,CAAC,IAAI,CAACY,aAAa,CAAC5P,GAAG,CAAC,EAAE;QAC5B0N,OAAO,GAAG,IAAI;QACd1N,GAAG,GAAGgB,GAAG;MACX;MACA,MAAM6O,8BAA8B,GAAGvD,GAAG,CAACuD,8BAA8B,IAAI,IAAI,CAAClJ,OAAO,CAACkJ,8BAA8B;MACxH,MAAMC,aAAa,GAAGD,8BAA8B,IAAInC,OAAO,GAAGxL,SAAS,GAAGlC,GAAG;MACjF,MAAM+P,aAAa,GAAGtB,eAAe,IAAIO,YAAY,KAAKhP,GAAG,IAAI,IAAI,CAAC2G,OAAO,CAACoJ,aAAa;MAC3F,IAAIrC,OAAO,IAAIiC,WAAW,IAAII,aAAa,EAAE;QAC3C,IAAI,CAACjJ,MAAM,CAACZ,GAAG,CAAC6J,aAAa,GAAG,WAAW,GAAG,YAAY,EAAE/G,GAAG,EAAEuE,SAAS,EAAEvM,GAAG,EAAE+O,aAAa,GAAGf,YAAY,GAAGhP,GAAG,CAAC;QACpH,IAAI4E,YAAY,EAAE;UAChB,MAAMoL,EAAE,GAAG,IAAI,CAAC5P,OAAO,CAACY,GAAG,EAAE;YAC3B,GAAGsL,GAAG;YACN1H,YAAY,EAAE;UAChB,CAAC,CAAC;UACF,IAAIoL,EAAE,IAAIA,EAAE,CAAChQ,GAAG,EAAE,IAAI,CAAC8G,MAAM,CAACT,IAAI,CAAC,iLAAiL,CAAC;QACvN;QACA,IAAI4J,IAAI,GAAG,EAAE;QACb,MAAMC,YAAY,GAAG,IAAI,CAACC,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAACzJ,OAAO,CAAC0J,WAAW,EAAE/D,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,CAAC;QAC5G,IAAI,IAAI,CAACvF,OAAO,CAAC2J,aAAa,KAAK,UAAU,IAAIJ,YAAY,IAAIA,YAAY,CAAC,CAAC,CAAC,EAAE;UAChF,KAAK,IAAIxK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwK,YAAY,CAACxO,MAAM,EAAEgE,CAAC,EAAE,EAAE;YAC5CuK,IAAI,CAACxN,IAAI,CAACyN,YAAY,CAACxK,CAAC,CAAC,CAAC;UAC5B;QACF,CAAC,MAAM,IAAI,IAAI,CAACiB,OAAO,CAAC2J,aAAa,KAAK,KAAK,EAAE;UAC/CL,IAAI,GAAG,IAAI,CAACE,aAAa,CAACI,kBAAkB,CAACjE,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,CAAC;QACxE,CAAC,MAAM;UACL+D,IAAI,CAACxN,IAAI,CAAC6J,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,CAAC;QACrC;QACA,MAAMsE,IAAI,GAAGA,CAACC,CAAC,EAAE1O,CAAC,EAAE2O,oBAAoB,KAAK;UAC3C,MAAMC,iBAAiB,GAAGlC,eAAe,IAAIiC,oBAAoB,KAAK1Q,GAAG,GAAG0Q,oBAAoB,GAAGZ,aAAa;UAChH,IAAI,IAAI,CAACnJ,OAAO,CAACiK,iBAAiB,EAAE;YAClC,IAAI,CAACjK,OAAO,CAACiK,iBAAiB,CAACH,CAAC,EAAElD,SAAS,EAAExL,CAAC,EAAE4O,iBAAiB,EAAEZ,aAAa,EAAEzD,GAAG,CAAC;UACxF,CAAC,MAAM,IAAI,IAAI,CAACuE,gBAAgB,EAAEC,WAAW,EAAE;YAC7C,IAAI,CAACD,gBAAgB,CAACC,WAAW,CAACL,CAAC,EAAElD,SAAS,EAAExL,CAAC,EAAE4O,iBAAiB,EAAEZ,aAAa,EAAEzD,GAAG,CAAC;UAC3F;UACA,IAAI,CAACtE,IAAI,CAAC,YAAY,EAAEyI,CAAC,EAAElD,SAAS,EAAExL,CAAC,EAAE/B,GAAG,CAAC;QAC/C,CAAC;QACD,IAAI,IAAI,CAAC2G,OAAO,CAACmK,WAAW,EAAE;UAC5B,IAAI,IAAI,CAACnK,OAAO,CAACoK,kBAAkB,IAAIxC,mBAAmB,EAAE;YAC1D0B,IAAI,CAACrP,OAAO,CAACsL,QAAQ,IAAI;cACvB,MAAM8E,QAAQ,GAAG,IAAI,CAACrC,cAAc,CAACsC,WAAW,CAAC/E,QAAQ,EAAEI,GAAG,CAAC;cAC/D,IAAIyC,qBAAqB,IAAIzC,GAAG,CAAC,eAAe,IAAI,CAAC3F,OAAO,CAACsI,eAAe,MAAM,CAAC,IAAI+B,QAAQ,CAAC/P,OAAO,CAAC,GAAG,IAAI,CAAC0F,OAAO,CAACsI,eAAe,MAAM,CAAC,GAAG,CAAC,EAAE;gBAClJ+B,QAAQ,CAACvO,IAAI,CAAC,GAAG,IAAI,CAACkE,OAAO,CAACsI,eAAe,MAAM,CAAC;cACtD;cACA+B,QAAQ,CAACpQ,OAAO,CAACsQ,MAAM,IAAI;gBACzBV,IAAI,CAAC,CAACtE,QAAQ,CAAC,EAAElL,GAAG,GAAGkQ,MAAM,EAAE5E,GAAG,CAAC,eAAe4E,MAAM,EAAE,CAAC,IAAIlC,YAAY,CAAC;cAC9E,CAAC,CAAC;YACJ,CAAC,CAAC;UACJ,CAAC,MAAM;YACLwB,IAAI,CAACP,IAAI,EAAEjP,GAAG,EAAEgO,YAAY,CAAC;UAC/B;QACF;MACF;MACAhP,GAAG,GAAG,IAAI,CAAC0P,iBAAiB,CAAC1P,GAAG,EAAEoK,IAAI,EAAEkC,GAAG,EAAEC,QAAQ,EAAEY,OAAO,CAAC;MAC/D,IAAIO,OAAO,IAAI1N,GAAG,KAAKgB,GAAG,IAAI,IAAI,CAAC2F,OAAO,CAACwK,2BAA2B,EAAE;QACtEnR,GAAG,GAAG,GAAGuN,SAAS,GAAG5I,WAAW,GAAG3D,GAAG,EAAE;MAC1C;MACA,IAAI,CAAC0M,OAAO,IAAIiC,WAAW,KAAK,IAAI,CAAChJ,OAAO,CAACyK,sBAAsB,EAAE;QACnEpR,GAAG,GAAG,IAAI,CAAC2G,OAAO,CAACyK,sBAAsB,CAAC,IAAI,CAACzK,OAAO,CAACwK,2BAA2B,GAAG,GAAG5D,SAAS,GAAG5I,WAAW,GAAG3D,GAAG,EAAE,GAAGA,GAAG,EAAE2O,WAAW,GAAG3P,GAAG,GAAGkC,SAAS,EAAEoK,GAAG,CAAC;MACpK;IACF;IACA,IAAIgB,aAAa,EAAE;MACjBf,QAAQ,CAACvM,GAAG,GAAGA,GAAG;MAClBuM,QAAQ,CAACuB,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAACzB,GAAG,CAAC;MACpD,OAAOC,QAAQ;IACjB;IACA,OAAOvM,GAAG;EACZ;EACA0P,iBAAiBA,CAAC1P,GAAG,EAAEgB,GAAG,EAAEsL,GAAG,EAAEC,QAAQ,EAAEY,OAAO,EAAE;IAClD,IAAI,IAAI,CAACkB,UAAU,EAAEzE,KAAK,EAAE;MAC1B5J,GAAG,GAAG,IAAI,CAACqO,UAAU,CAACzE,KAAK,CAAC5J,GAAG,EAAE;QAC/B,GAAG,IAAI,CAAC2G,OAAO,CAAC0F,aAAa,CAACgF,gBAAgB;QAC9C,GAAG/E;MACL,CAAC,EAAEA,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,IAAIK,QAAQ,CAACqB,OAAO,EAAErB,QAAQ,CAACsB,MAAM,EAAEtB,QAAQ,CAACmB,OAAO,EAAE;QAClFnB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACD,GAAG,CAACgF,iBAAiB,EAAE;MACjC,IAAIhF,GAAG,CAACD,aAAa,EAAE,IAAI,CAACU,YAAY,CAACnG,IAAI,CAAC;QAC5C,GAAG0F,GAAG;QACN,GAAG;UACDD,aAAa,EAAE;YACb,GAAG,IAAI,CAAC1F,OAAO,CAAC0F,aAAa;YAC7B,GAAGC,GAAG,CAACD;UACT;QACF;MACF,CAAC,CAAC;MACF,MAAMkF,eAAe,GAAG1R,QAAQ,CAACG,GAAG,CAAC,KAAKsM,GAAG,EAAED,aAAa,EAAEkF,eAAe,KAAKrP,SAAS,GAAGoK,GAAG,CAACD,aAAa,CAACkF,eAAe,GAAG,IAAI,CAAC5K,OAAO,CAAC0F,aAAa,CAACkF,eAAe,CAAC;MAC7K,IAAIC,OAAO;MACX,IAAID,eAAe,EAAE;QACnB,MAAME,EAAE,GAAGzR,GAAG,CAAC8M,KAAK,CAAC,IAAI,CAACC,YAAY,CAACC,aAAa,CAAC;QACrDwE,OAAO,GAAGC,EAAE,IAAIA,EAAE,CAAC/P,MAAM;MAC3B;MACA,IAAIkB,IAAI,GAAG0J,GAAG,CAACpL,OAAO,IAAI,CAACrB,QAAQ,CAACyM,GAAG,CAACpL,OAAO,CAAC,GAAGoL,GAAG,CAACpL,OAAO,GAAGoL,GAAG;MACpE,IAAI,IAAI,CAAC3F,OAAO,CAAC0F,aAAa,CAACgF,gBAAgB,EAAEzO,IAAI,GAAG;QACtD,GAAG,IAAI,CAAC+D,OAAO,CAAC0F,aAAa,CAACgF,gBAAgB;QAC9C,GAAGzO;MACL,CAAC;MACD5C,GAAG,GAAG,IAAI,CAAC+M,YAAY,CAAC2E,WAAW,CAAC1R,GAAG,EAAE4C,IAAI,EAAE0J,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,IAAIK,QAAQ,CAACqB,OAAO,EAAEtB,GAAG,CAAC;MACjG,IAAIiF,eAAe,EAAE;QACnB,MAAMI,EAAE,GAAG3R,GAAG,CAAC8M,KAAK,CAAC,IAAI,CAACC,YAAY,CAACC,aAAa,CAAC;QACrD,MAAM4E,OAAO,GAAGD,EAAE,IAAIA,EAAE,CAACjQ,MAAM;QAC/B,IAAI8P,OAAO,GAAGI,OAAO,EAAEtF,GAAG,CAACuF,IAAI,GAAG,KAAK;MACzC;MACA,IAAI,CAACvF,GAAG,CAACtD,GAAG,IAAIuD,QAAQ,IAAIA,QAAQ,CAACvM,GAAG,EAAEsM,GAAG,CAACtD,GAAG,GAAG,IAAI,CAACkD,QAAQ,IAAIK,QAAQ,CAACqB,OAAO;MACrF,IAAItB,GAAG,CAACuF,IAAI,KAAK,KAAK,EAAE7R,GAAG,GAAG,IAAI,CAAC+M,YAAY,CAAC8E,IAAI,CAAC7R,GAAG,EAAE,CAAC,GAAGmG,IAAI,KAAK;QACrE,IAAIgH,OAAO,GAAG,CAAC,CAAC,KAAKhH,IAAI,CAAC,CAAC,CAAC,IAAI,CAACmG,GAAG,CAACwF,OAAO,EAAE;UAC5C,IAAI,CAAChL,MAAM,CAACT,IAAI,CAAC,6CAA6CF,IAAI,CAAC,CAAC,CAAC,YAAYnF,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;UAC1F,OAAO,IAAI;QACb;QACA,OAAO,IAAI,CAACkM,SAAS,CAAC,GAAG/G,IAAI,EAAEnF,GAAG,CAAC;MACrC,CAAC,EAAEsL,GAAG,CAAC;MACP,IAAIA,GAAG,CAACD,aAAa,EAAE,IAAI,CAACU,YAAY,CAACgF,KAAK,CAAC,CAAC;IAClD;IACA,MAAMC,WAAW,GAAG1F,GAAG,CAAC0F,WAAW,IAAI,IAAI,CAACrL,OAAO,CAACqL,WAAW;IAC/D,MAAMC,kBAAkB,GAAGpS,QAAQ,CAACmS,WAAW,CAAC,GAAG,CAACA,WAAW,CAAC,GAAGA,WAAW;IAC9E,IAAIhS,GAAG,IAAI,IAAI,IAAIiS,kBAAkB,EAAEvQ,MAAM,IAAI4K,GAAG,CAAC4F,kBAAkB,KAAK,KAAK,EAAE;MACjFlS,GAAG,GAAGwK,aAAa,CAACK,MAAM,CAACoH,kBAAkB,EAAEjS,GAAG,EAAEgB,GAAG,EAAE,IAAI,CAAC2F,OAAO,IAAI,IAAI,CAACA,OAAO,CAACwL,uBAAuB,GAAG;QAC9GC,YAAY,EAAE;UACZ,GAAG7F,QAAQ;UACXuB,UAAU,EAAE,IAAI,CAACC,oBAAoB,CAACzB,GAAG;QAC3C,CAAC;QACD,GAAGA;MACL,CAAC,GAAGA,GAAG,EAAE,IAAI,CAAC;IAChB;IACA,OAAOtM,GAAG;EACZ;EACAI,OAAOA,CAACgK,IAAI,EAAEkC,GAAG,GAAG,CAAC,CAAC,EAAE;IACtB,IAAI+F,KAAK;IACT,IAAI3E,OAAO;IACX,IAAIC,YAAY;IAChB,IAAIC,OAAO;IACX,IAAIC,MAAM;IACV,IAAIhO,QAAQ,CAACuK,IAAI,CAAC,EAAEA,IAAI,GAAG,CAACA,IAAI,CAAC;IACjCA,IAAI,CAACxJ,OAAO,CAACmB,CAAC,IAAI;MAChB,IAAI,IAAI,CAAC6N,aAAa,CAACyC,KAAK,CAAC,EAAE;MAC/B,MAAMC,SAAS,GAAG,IAAI,CAAC9F,cAAc,CAACzK,CAAC,EAAEuK,GAAG,CAAC;MAC7C,MAAMtL,GAAG,GAAGsR,SAAS,CAACtR,GAAG;MACzB0M,OAAO,GAAG1M,GAAG;MACb,IAAIyL,UAAU,GAAG6F,SAAS,CAAC7F,UAAU;MACrC,IAAI,IAAI,CAAC9F,OAAO,CAAC4L,UAAU,EAAE9F,UAAU,GAAGA,UAAU,CAACjK,MAAM,CAAC,IAAI,CAACmE,OAAO,CAAC4L,UAAU,CAAC;MACpF,MAAMhE,mBAAmB,GAAGjC,GAAG,CAACkC,KAAK,KAAKtM,SAAS,IAAI,CAACrC,QAAQ,CAACyM,GAAG,CAACkC,KAAK,CAAC;MAC3E,MAAMO,qBAAqB,GAAGR,mBAAmB,IAAI,CAACjC,GAAG,CAACwC,OAAO,IAAIxC,GAAG,CAACkC,KAAK,KAAK,CAAC;MACpF,MAAMgE,oBAAoB,GAAGlG,GAAG,CAACwF,OAAO,KAAK5P,SAAS,KAAKrC,QAAQ,CAACyM,GAAG,CAACwF,OAAO,CAAC,IAAI,OAAOxF,GAAG,CAACwF,OAAO,KAAK,QAAQ,CAAC,IAAIxF,GAAG,CAACwF,OAAO,KAAK,EAAE;MAC1I,MAAMW,KAAK,GAAGnG,GAAG,CAAC2D,IAAI,GAAG3D,GAAG,CAAC2D,IAAI,GAAG,IAAI,CAACE,aAAa,CAACI,kBAAkB,CAACjE,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,EAAEI,GAAG,CAAC+D,WAAW,CAAC;MACpH5D,UAAU,CAAC7L,OAAO,CAAC4H,EAAE,IAAI;QACvB,IAAI,IAAI,CAACoH,aAAa,CAACyC,KAAK,CAAC,EAAE;QAC/BxE,MAAM,GAAGrF,EAAE;QACX,IAAI,CAACqD,gBAAgB,CAAC,GAAG4G,KAAK,CAAC,CAAC,CAAC,IAAIjK,EAAE,EAAE,CAAC,IAAI,IAAI,CAACkK,KAAK,EAAEC,kBAAkB,IAAI,CAAC,IAAI,CAACD,KAAK,EAAEC,kBAAkB,CAAC9E,MAAM,CAAC,EAAE;UACvHhC,gBAAgB,CAAC,GAAG4G,KAAK,CAAC,CAAC,CAAC,IAAIjK,EAAE,EAAE,CAAC,GAAG,IAAI;UAC5C,IAAI,CAAC1B,MAAM,CAACT,IAAI,CAAC,QAAQqH,OAAO,oBAAoB+E,KAAK,CAACvN,IAAI,CAAC,IAAI,CAAC,sCAAsC2I,MAAM,sBAAsB,EAAE,0NAA0N,CAAC;QACrW;QACA4E,KAAK,CAAC7R,OAAO,CAACmF,IAAI,IAAI;UACpB,IAAI,IAAI,CAAC6J,aAAa,CAACyC,KAAK,CAAC,EAAE;UAC/BzE,OAAO,GAAG7H,IAAI;UACd,MAAM6M,SAAS,GAAG,CAAC5R,GAAG,CAAC;UACvB,IAAI,IAAI,CAACqN,UAAU,EAAEwE,aAAa,EAAE;YAClC,IAAI,CAACxE,UAAU,CAACwE,aAAa,CAACD,SAAS,EAAE5R,GAAG,EAAE+E,IAAI,EAAEyC,EAAE,EAAE8D,GAAG,CAAC;UAC9D,CAAC,MAAM;YACL,IAAIwG,YAAY;YAChB,IAAIvE,mBAAmB,EAAEuE,YAAY,GAAG,IAAI,CAACnE,cAAc,CAACC,SAAS,CAAC7I,IAAI,EAAEuG,GAAG,CAACkC,KAAK,EAAElC,GAAG,CAAC;YAC3F,MAAMyG,UAAU,GAAG,GAAG,IAAI,CAACpM,OAAO,CAACsI,eAAe,MAAM;YACxD,MAAM+D,aAAa,GAAG,GAAG,IAAI,CAACrM,OAAO,CAACsI,eAAe,UAAU,IAAI,CAACtI,OAAO,CAACsI,eAAe,EAAE;YAC7F,IAAIV,mBAAmB,EAAE;cACvB,IAAIjC,GAAG,CAACwC,OAAO,IAAIgE,YAAY,CAAC7R,OAAO,CAAC+R,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC5DJ,SAAS,CAACnQ,IAAI,CAACzB,GAAG,GAAG8R,YAAY,CAAC5R,OAAO,CAAC8R,aAAa,EAAE,IAAI,CAACrM,OAAO,CAACsI,eAAe,CAAC,CAAC;cACzF;cACA2D,SAAS,CAACnQ,IAAI,CAACzB,GAAG,GAAG8R,YAAY,CAAC;cAClC,IAAI/D,qBAAqB,EAAE;gBACzB6D,SAAS,CAACnQ,IAAI,CAACzB,GAAG,GAAG+R,UAAU,CAAC;cAClC;YACF;YACA,IAAIP,oBAAoB,EAAE;cACxB,MAAMS,UAAU,GAAG,GAAGjS,GAAG,GAAG,IAAI,CAAC2F,OAAO,CAACuM,gBAAgB,IAAI,GAAG,GAAG5G,GAAG,CAACwF,OAAO,EAAE;cAChFc,SAAS,CAACnQ,IAAI,CAACwQ,UAAU,CAAC;cAC1B,IAAI1E,mBAAmB,EAAE;gBACvB,IAAIjC,GAAG,CAACwC,OAAO,IAAIgE,YAAY,CAAC7R,OAAO,CAAC+R,aAAa,CAAC,KAAK,CAAC,EAAE;kBAC5DJ,SAAS,CAACnQ,IAAI,CAACwQ,UAAU,GAAGH,YAAY,CAAC5R,OAAO,CAAC8R,aAAa,EAAE,IAAI,CAACrM,OAAO,CAACsI,eAAe,CAAC,CAAC;gBAChG;gBACA2D,SAAS,CAACnQ,IAAI,CAACwQ,UAAU,GAAGH,YAAY,CAAC;gBACzC,IAAI/D,qBAAqB,EAAE;kBACzB6D,SAAS,CAACnQ,IAAI,CAACwQ,UAAU,GAAGF,UAAU,CAAC;gBACzC;cACF;YACF;UACF;UACA,IAAII,WAAW;UACf,OAAOA,WAAW,GAAGP,SAAS,CAACQ,GAAG,CAAC,CAAC,EAAE;YACpC,IAAI,CAAC,IAAI,CAACxD,aAAa,CAACyC,KAAK,CAAC,EAAE;cAC9B1E,YAAY,GAAGwF,WAAW;cAC1Bd,KAAK,GAAG,IAAI,CAACtJ,WAAW,CAAChD,IAAI,EAAEyC,EAAE,EAAE2K,WAAW,EAAE7G,GAAG,CAAC;YACtD;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAO;MACLtM,GAAG,EAAEqS,KAAK;MACV3E,OAAO;MACPC,YAAY;MACZC,OAAO;MACPC;IACF,CAAC;EACH;EACA+B,aAAaA,CAAC5P,GAAG,EAAE;IACjB,OAAOA,GAAG,KAAKkC,SAAS,IAAI,EAAE,CAAC,IAAI,CAACyE,OAAO,CAAC0M,UAAU,IAAIrT,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC2G,OAAO,CAAC2M,iBAAiB,IAAItT,GAAG,KAAK,EAAE,CAAC;EAC7H;EACA+I,WAAWA,CAAChD,IAAI,EAAEyC,EAAE,EAAExH,GAAG,EAAE2F,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,IAAI,IAAI,CAAC0H,UAAU,EAAEtF,WAAW,EAAE,OAAO,IAAI,CAACsF,UAAU,CAACtF,WAAW,CAAChD,IAAI,EAAEyC,EAAE,EAAExH,GAAG,EAAE2F,OAAO,CAAC;IAC5F,OAAO,IAAI,CAAC4M,aAAa,CAACxK,WAAW,CAAChD,IAAI,EAAEyC,EAAE,EAAExH,GAAG,EAAE2F,OAAO,CAAC;EAC/D;EACAoH,oBAAoBA,CAACpH,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,MAAM6M,WAAW,GAAG,CAAC,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,CAAC;IACxN,MAAMC,wBAAwB,GAAG9M,OAAO,CAACzF,OAAO,IAAI,CAACrB,QAAQ,CAAC8G,OAAO,CAACzF,OAAO,CAAC;IAC9E,IAAI0B,IAAI,GAAG6Q,wBAAwB,GAAG9M,OAAO,CAACzF,OAAO,GAAGyF,OAAO;IAC/D,IAAI8M,wBAAwB,IAAI,OAAO9M,OAAO,CAAC6H,KAAK,KAAK,WAAW,EAAE;MACpE5L,IAAI,CAAC4L,KAAK,GAAG7H,OAAO,CAAC6H,KAAK;IAC5B;IACA,IAAI,IAAI,CAAC7H,OAAO,CAAC0F,aAAa,CAACgF,gBAAgB,EAAE;MAC/CzO,IAAI,GAAG;QACL,GAAG,IAAI,CAAC+D,OAAO,CAAC0F,aAAa,CAACgF,gBAAgB;QAC9C,GAAGzO;MACL,CAAC;IACH;IACA,IAAI,CAAC6Q,wBAAwB,EAAE;MAC7B7Q,IAAI,GAAG;QACL,GAAGA;MACL,CAAC;MACD,KAAK,MAAM5B,GAAG,IAAIwS,WAAW,EAAE;QAC7B,OAAO5Q,IAAI,CAAC5B,GAAG,CAAC;MAClB;IACF;IACA,OAAO4B,IAAI;EACb;EACA,OAAO6L,eAAeA,CAAC9H,OAAO,EAAE;IAC9B,MAAME,MAAM,GAAG,cAAc;IAC7B,KAAK,MAAM6M,MAAM,IAAI/M,OAAO,EAAE;MAC5B,IAAIhF,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC6E,OAAO,EAAE+M,MAAM,CAAC,IAAI7M,MAAM,KAAK6M,MAAM,CAACpO,SAAS,CAAC,CAAC,EAAEuB,MAAM,CAACnF,MAAM,CAAC,IAAIQ,SAAS,KAAKyE,OAAO,CAAC+M,MAAM,CAAC,EAAE;QAC3I,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd;AACF;AAEA,MAAMC,YAAY,CAAC;EACjBjQ,WAAWA,CAACiD,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACiN,aAAa,GAAG,IAAI,CAACjN,OAAO,CAACiN,aAAa,IAAI,KAAK;IACxD,IAAI,CAAC9M,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,eAAe,CAAC;EAClD;EACAyM,qBAAqBA,CAAC9N,IAAI,EAAE;IAC1BA,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC;IAC3B,IAAI,CAACA,IAAI,IAAIA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI;IAC/C,MAAMmB,CAAC,GAAG2D,IAAI,CAACvE,KAAK,CAAC,GAAG,CAAC;IACzB,IAAIY,CAAC,CAACV,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAC/BU,CAAC,CAACgR,GAAG,CAAC,CAAC;IACP,IAAIhR,CAAC,CAACA,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC,CAAC+L,WAAW,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO,IAAI;IACtD,OAAO,IAAI,CAACqG,kBAAkB,CAAC1R,CAAC,CAAC8C,IAAI,CAAC,GAAG,CAAC,CAAC;EAC7C;EACA6O,uBAAuBA,CAAChO,IAAI,EAAE;IAC5BA,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC;IAC3B,IAAI,CAACA,IAAI,IAAIA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO8E,IAAI;IAC/C,MAAM3D,CAAC,GAAG2D,IAAI,CAACvE,KAAK,CAAC,GAAG,CAAC;IACzB,OAAO,IAAI,CAACsS,kBAAkB,CAAC1R,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC;EACA0R,kBAAkBA,CAAC/N,IAAI,EAAE;IACvB,IAAIlG,QAAQ,CAACkG,IAAI,CAAC,IAAIA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MAC5C,IAAI+S,aAAa;MACjB,IAAI;QACFA,aAAa,GAAGC,IAAI,CAACC,mBAAmB,CAACnO,IAAI,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC,CAAC,OAAO5D,CAAC,EAAE,CAAC;MACb,IAAI6R,aAAa,IAAI,IAAI,CAACrN,OAAO,CAACwN,YAAY,EAAE;QAC9CH,aAAa,GAAGA,aAAa,CAACvG,WAAW,CAAC,CAAC;MAC7C;MACA,IAAIuG,aAAa,EAAE,OAAOA,aAAa;MACvC,IAAI,IAAI,CAACrN,OAAO,CAACwN,YAAY,EAAE;QAC7B,OAAOpO,IAAI,CAAC0H,WAAW,CAAC,CAAC;MAC3B;MACA,OAAO1H,IAAI;IACb;IACA,OAAO,IAAI,CAACY,OAAO,CAACyN,SAAS,IAAI,IAAI,CAACzN,OAAO,CAACwN,YAAY,GAAGpO,IAAI,CAAC0H,WAAW,CAAC,CAAC,GAAG1H,IAAI;EACxF;EACAsO,eAAeA,CAACtO,IAAI,EAAE;IACpB,IAAI,IAAI,CAACY,OAAO,CAAC2N,IAAI,KAAK,cAAc,IAAI,IAAI,CAAC3N,OAAO,CAAC4N,wBAAwB,EAAE;MACjFxO,IAAI,GAAG,IAAI,CAACgO,uBAAuB,CAAChO,IAAI,CAAC;IAC3C;IACA,OAAO,CAAC,IAAI,CAAC6N,aAAa,IAAI,CAAC,IAAI,CAACA,aAAa,CAAClS,MAAM,IAAI,IAAI,CAACkS,aAAa,CAAC3S,OAAO,CAAC8E,IAAI,CAAC,GAAG,CAAC,CAAC;EACnG;EACAyO,qBAAqBA,CAAC/B,KAAK,EAAE;IAC3B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;IACvB,IAAIJ,KAAK;IACTI,KAAK,CAAC7R,OAAO,CAACmF,IAAI,IAAI;MACpB,IAAIsM,KAAK,EAAE;MACX,MAAMoC,UAAU,GAAG,IAAI,CAACX,kBAAkB,CAAC/N,IAAI,CAAC;MAChD,IAAI,CAAC,IAAI,CAACY,OAAO,CAACiN,aAAa,IAAI,IAAI,CAACS,eAAe,CAACI,UAAU,CAAC,EAAEpC,KAAK,GAAGoC,UAAU;IACzF,CAAC,CAAC;IACF,IAAI,CAACpC,KAAK,IAAI,IAAI,CAAC1L,OAAO,CAACiN,aAAa,EAAE;MACxCnB,KAAK,CAAC7R,OAAO,CAACmF,IAAI,IAAI;QACpB,IAAIsM,KAAK,EAAE;QACX,MAAMqC,SAAS,GAAG,IAAI,CAACb,qBAAqB,CAAC9N,IAAI,CAAC;QAClD,IAAI,IAAI,CAACsO,eAAe,CAACK,SAAS,CAAC,EAAE,OAAOrC,KAAK,GAAGqC,SAAS;QAC7D,MAAMC,OAAO,GAAG,IAAI,CAACZ,uBAAuB,CAAChO,IAAI,CAAC;QAClD,IAAI,IAAI,CAACsO,eAAe,CAACM,OAAO,CAAC,EAAE,OAAOtC,KAAK,GAAGsC,OAAO;QACzDtC,KAAK,GAAG,IAAI,CAAC1L,OAAO,CAACiN,aAAa,CAACvJ,IAAI,CAACuK,YAAY,IAAI;UACtD,IAAIA,YAAY,KAAKD,OAAO,EAAE,OAAOC,YAAY;UACjD,IAAIA,YAAY,CAAC3T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI0T,OAAO,CAAC1T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;UAC/D,IAAI2T,YAAY,CAAC3T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI0T,OAAO,CAAC1T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI2T,YAAY,CAACtP,SAAS,CAAC,CAAC,EAAEsP,YAAY,CAAC3T,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK0T,OAAO,EAAE,OAAOC,YAAY;UACtJ,IAAIA,YAAY,CAAC3T,OAAO,CAAC0T,OAAO,CAAC,KAAK,CAAC,IAAIA,OAAO,CAACjT,MAAM,GAAG,CAAC,EAAE,OAAOkT,YAAY;QACpF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACA,IAAI,CAACvC,KAAK,EAAEA,KAAK,GAAG,IAAI,CAACjC,gBAAgB,CAAC,IAAI,CAACzJ,OAAO,CAAC0J,WAAW,CAAC,CAAC,CAAC,CAAC;IACtE,OAAOgC,KAAK;EACd;EACAjC,gBAAgBA,CAACyE,SAAS,EAAE9O,IAAI,EAAE;IAChC,IAAI,CAAC8O,SAAS,EAAE,OAAO,EAAE;IACzB,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAEA,SAAS,GAAGA,SAAS,CAAC9O,IAAI,CAAC;IAChE,IAAIlG,QAAQ,CAACgV,SAAS,CAAC,EAAEA,SAAS,GAAG,CAACA,SAAS,CAAC;IAChD,IAAI3M,KAAK,CAACe,OAAO,CAAC4L,SAAS,CAAC,EAAE,OAAOA,SAAS;IAC9C,IAAI,CAAC9O,IAAI,EAAE,OAAO8O,SAAS,CAACC,OAAO,IAAI,EAAE;IACzC,IAAIzC,KAAK,GAAGwC,SAAS,CAAC9O,IAAI,CAAC;IAC3B,IAAI,CAACsM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAAC,IAAI,CAAChB,qBAAqB,CAAC9N,IAAI,CAAC,CAAC;IAC/D,IAAI,CAACsM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAAC,IAAI,CAACf,kBAAkB,CAAC/N,IAAI,CAAC,CAAC;IAC5D,IAAI,CAACsM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAAC,IAAI,CAACd,uBAAuB,CAAChO,IAAI,CAAC,CAAC;IACjE,IAAI,CAACsM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAACC,OAAO;IACrC,OAAOzC,KAAK,IAAI,EAAE;EACpB;EACA9B,kBAAkBA,CAACxK,IAAI,EAAEgP,YAAY,EAAE;IACrC,MAAMC,aAAa,GAAG,IAAI,CAAC5E,gBAAgB,CAAC,CAAC2E,YAAY,KAAK,KAAK,GAAG,EAAE,GAAGA,YAAY,KAAK,IAAI,CAACpO,OAAO,CAAC0J,WAAW,IAAI,EAAE,EAAEtK,IAAI,CAAC;IACjI,MAAM0M,KAAK,GAAG,EAAE;IAChB,MAAMwC,OAAO,GAAGlQ,CAAC,IAAI;MACnB,IAAI,CAACA,CAAC,EAAE;MACR,IAAI,IAAI,CAACsP,eAAe,CAACtP,CAAC,CAAC,EAAE;QAC3B0N,KAAK,CAAChQ,IAAI,CAACsC,CAAC,CAAC;MACf,CAAC,MAAM;QACL,IAAI,CAAC+B,MAAM,CAACT,IAAI,CAAC,uDAAuDtB,CAAC,EAAE,CAAC;MAC9E;IACF,CAAC;IACD,IAAIlF,QAAQ,CAACkG,IAAI,CAAC,KAAKA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI8E,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MACxE,IAAI,IAAI,CAAC0F,OAAO,CAAC2N,IAAI,KAAK,cAAc,EAAEW,OAAO,CAAC,IAAI,CAACnB,kBAAkB,CAAC/N,IAAI,CAAC,CAAC;MAChF,IAAI,IAAI,CAACY,OAAO,CAAC2N,IAAI,KAAK,cAAc,IAAI,IAAI,CAAC3N,OAAO,CAAC2N,IAAI,KAAK,aAAa,EAAEW,OAAO,CAAC,IAAI,CAACpB,qBAAqB,CAAC9N,IAAI,CAAC,CAAC;MAC1H,IAAI,IAAI,CAACY,OAAO,CAAC2N,IAAI,KAAK,aAAa,EAAEW,OAAO,CAAC,IAAI,CAAClB,uBAAuB,CAAChO,IAAI,CAAC,CAAC;IACtF,CAAC,MAAM,IAAIlG,QAAQ,CAACkG,IAAI,CAAC,EAAE;MACzBkP,OAAO,CAAC,IAAI,CAACnB,kBAAkB,CAAC/N,IAAI,CAAC,CAAC;IACxC;IACAiP,aAAa,CAACpU,OAAO,CAACsU,EAAE,IAAI;MAC1B,IAAIzC,KAAK,CAACxR,OAAO,CAACiU,EAAE,CAAC,GAAG,CAAC,EAAED,OAAO,CAAC,IAAI,CAACnB,kBAAkB,CAACoB,EAAE,CAAC,CAAC;IACjE,CAAC,CAAC;IACF,OAAOzC,KAAK;EACd;AACF;AAEA,MAAM0C,aAAa,GAAG;EACpBC,IAAI,EAAE,CAAC;EACPC,GAAG,EAAE,CAAC;EACNC,GAAG,EAAE,CAAC;EACNC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAEnH,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO;EAC9CoH,eAAe,EAAEA,CAAA,MAAO;IACtBC,gBAAgB,EAAE,CAAC,KAAK,EAAE,OAAO;EACnC,CAAC;AACH,CAAC;AACD,MAAMC,cAAc,CAAC;EACnBpS,WAAWA,CAACyM,aAAa,EAAExJ,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,IAAI,CAACwJ,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACxJ,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,gBAAgB,CAAC;IACjD,IAAI,CAAC2O,gBAAgB,GAAG,CAAC,CAAC;EAC5B;EACAC,OAAOA,CAAChN,GAAG,EAAElJ,GAAG,EAAE;IAChB,IAAI,CAACmW,KAAK,CAACjN,GAAG,CAAC,GAAGlJ,GAAG;EACvB;EACAoW,UAAUA,CAAA,EAAG;IACX,IAAI,CAACH,gBAAgB,GAAG,CAAC,CAAC;EAC5B;EACAI,OAAOA,CAACpQ,IAAI,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1B,MAAMyP,WAAW,GAAGtQ,cAAc,CAACC,IAAI,KAAK,KAAK,GAAG,IAAI,GAAGA,IAAI,CAAC;IAChE,MAAME,IAAI,GAAGU,OAAO,CAACmI,OAAO,GAAG,SAAS,GAAG,UAAU;IACrD,MAAMuH,QAAQ,GAAG1M,IAAI,CAACE,SAAS,CAAC;MAC9BuM,WAAW;MACXnQ;IACF,CAAC,CAAC;IACF,IAAIoQ,QAAQ,IAAI,IAAI,CAACN,gBAAgB,EAAE;MACrC,OAAO,IAAI,CAACA,gBAAgB,CAACM,QAAQ,CAAC;IACxC;IACA,IAAIC,IAAI;IACR,IAAI;MACFA,IAAI,GAAG,IAAIrC,IAAI,CAACsC,WAAW,CAACH,WAAW,EAAE;QACvCnQ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOuQ,GAAG,EAAE;MACZ,IAAI,CAACvC,IAAI,EAAE;QACT,IAAI,CAACnN,MAAM,CAACR,KAAK,CAAC,+CAA+C,CAAC;QAClE,OAAOoP,SAAS;MAClB;MACA,IAAI,CAAC3P,IAAI,CAAC+G,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO4I,SAAS;MACxC,MAAMe,OAAO,GAAG,IAAI,CAACtG,aAAa,CAAC4D,uBAAuB,CAAChO,IAAI,CAAC;MAChEuQ,IAAI,GAAG,IAAI,CAACH,OAAO,CAACM,OAAO,EAAE9P,OAAO,CAAC;IACvC;IACA,IAAI,CAACoP,gBAAgB,CAACM,QAAQ,CAAC,GAAGC,IAAI;IACtC,OAAOA,IAAI;EACb;EACAI,WAAWA,CAAC3Q,IAAI,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,IAAI2P,IAAI,GAAG,IAAI,CAACH,OAAO,CAACpQ,IAAI,EAAEY,OAAO,CAAC;IACtC,IAAI,CAAC2P,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACH,OAAO,CAAC,KAAK,EAAExP,OAAO,CAAC;IAC9C,OAAO2P,IAAI,EAAEV,eAAe,CAAC,CAAC,CAACC,gBAAgB,CAACnU,MAAM,GAAG,CAAC;EAC5D;EACAiV,mBAAmBA,CAAC5Q,IAAI,EAAE/E,GAAG,EAAE2F,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C,OAAO,IAAI,CAACsK,WAAW,CAAClL,IAAI,EAAEY,OAAO,CAAC,CAAC1B,GAAG,CAACiM,MAAM,IAAI,GAAGlQ,GAAG,GAAGkQ,MAAM,EAAE,CAAC;EACzE;EACAD,WAAWA,CAAClL,IAAI,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,IAAI2P,IAAI,GAAG,IAAI,CAACH,OAAO,CAACpQ,IAAI,EAAEY,OAAO,CAAC;IACtC,IAAI,CAAC2P,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACH,OAAO,CAAC,KAAK,EAAExP,OAAO,CAAC;IAC9C,IAAI,CAAC2P,IAAI,EAAE,OAAO,EAAE;IACpB,OAAOA,IAAI,CAACV,eAAe,CAAC,CAAC,CAACC,gBAAgB,CAACe,IAAI,CAAC,CAACC,eAAe,EAAEC,eAAe,KAAK3B,aAAa,CAAC0B,eAAe,CAAC,GAAG1B,aAAa,CAAC2B,eAAe,CAAC,CAAC,CAAC7R,GAAG,CAAC8R,cAAc,IAAI,GAAG,IAAI,CAACpQ,OAAO,CAACqQ,OAAO,GAAGrQ,OAAO,CAACmI,OAAO,GAAG,UAAU,IAAI,CAACnI,OAAO,CAACqQ,OAAO,EAAE,GAAG,EAAE,GAAGD,cAAc,EAAE,CAAC;EACxR;EACAnI,SAASA,CAAC7I,IAAI,EAAEyI,KAAK,EAAE7H,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,MAAM2P,IAAI,GAAG,IAAI,CAACH,OAAO,CAACpQ,IAAI,EAAEY,OAAO,CAAC;IACxC,IAAI2P,IAAI,EAAE;MACR,OAAO,GAAG,IAAI,CAAC3P,OAAO,CAACqQ,OAAO,GAAGrQ,OAAO,CAACmI,OAAO,GAAG,UAAU,IAAI,CAACnI,OAAO,CAACqQ,OAAO,EAAE,GAAG,EAAE,GAAGV,IAAI,CAACX,MAAM,CAACnH,KAAK,CAAC,EAAE;IACjH;IACA,IAAI,CAAC1H,MAAM,CAACT,IAAI,CAAC,6BAA6BN,IAAI,EAAE,CAAC;IACrD,OAAO,IAAI,CAAC6I,SAAS,CAAC,KAAK,EAAEJ,KAAK,EAAE7H,OAAO,CAAC;EAC9C;AACF;AAEA,MAAMsQ,oBAAoB,GAAGA,CAACrU,IAAI,EAAEC,WAAW,EAAE7B,GAAG,EAAE4D,YAAY,GAAG,GAAG,EAAE8D,mBAAmB,GAAG,IAAI,KAAK;EACvG,IAAIrH,IAAI,GAAGsB,mBAAmB,CAACC,IAAI,EAAEC,WAAW,EAAE7B,GAAG,CAAC;EACtD,IAAI,CAACK,IAAI,IAAIqH,mBAAmB,IAAI7I,QAAQ,CAACmB,GAAG,CAAC,EAAE;IACjDK,IAAI,GAAGkE,QAAQ,CAAC3C,IAAI,EAAE5B,GAAG,EAAE4D,YAAY,CAAC;IACxC,IAAIvD,IAAI,KAAKa,SAAS,EAAEb,IAAI,GAAGkE,QAAQ,CAAC1C,WAAW,EAAE7B,GAAG,EAAE4D,YAAY,CAAC;EACzE;EACA,OAAOvD,IAAI;AACb,CAAC;AACD,MAAM6V,SAAS,GAAGC,GAAG,IAAIA,GAAG,CAACjW,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;AACnD,MAAMkW,YAAY,CAAC;EACjB1T,WAAWA,CAACiD,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,cAAc,CAAC;IAC/C,IAAI,CAACT,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC0Q,MAAM,GAAG1Q,OAAO,EAAE0F,aAAa,EAAEgL,MAAM,KAAKvU,KAAK,IAAIA,KAAK,CAAC;IAChE,IAAI,CAAC8D,IAAI,CAACD,OAAO,CAAC;EACpB;EACAC,IAAIA,CAACD,OAAO,GAAG,CAAC,CAAC,EAAE;IACjB,IAAI,CAACA,OAAO,CAAC0F,aAAa,EAAE1F,OAAO,CAAC0F,aAAa,GAAG;MAClDiL,WAAW,EAAE;IACf,CAAC;IACD,MAAM;MACJ9T,MAAM,EAAE+T,QAAQ;MAChBD,WAAW;MACXE,mBAAmB;MACnB3Q,MAAM;MACN4Q,aAAa;MACbvG,MAAM;MACNwG,aAAa;MACbC,eAAe;MACfC,cAAc;MACdC,cAAc;MACdC,aAAa;MACbC,oBAAoB;MACpBC,aAAa;MACbC,oBAAoB;MACpBC,uBAAuB;MACvBC,WAAW;MACXC;IACF,CAAC,GAAGzR,OAAO,CAAC0F,aAAa;IACzB,IAAI,CAAC7I,MAAM,GAAG+T,QAAQ,KAAKrV,SAAS,GAAGqV,QAAQ,GAAG/T,MAAM;IACxD,IAAI,CAAC8T,WAAW,GAAGA,WAAW,KAAKpV,SAAS,GAAGoV,WAAW,GAAG,IAAI;IACjE,IAAI,CAACE,mBAAmB,GAAGA,mBAAmB,KAAKtV,SAAS,GAAGsV,mBAAmB,GAAG,KAAK;IAC1F,IAAI,CAAC3Q,MAAM,GAAGA,MAAM,GAAGxD,WAAW,CAACwD,MAAM,CAAC,GAAG4Q,aAAa,IAAI,IAAI;IAClE,IAAI,CAACvG,MAAM,GAAGA,MAAM,GAAG7N,WAAW,CAAC6N,MAAM,CAAC,GAAGwG,aAAa,IAAI,IAAI;IAClE,IAAI,CAACC,eAAe,GAAGA,eAAe,IAAI,GAAG;IAC7C,IAAI,CAACE,cAAc,GAAGD,cAAc,GAAG,EAAE,GAAGC,cAAc,IAAI,GAAG;IACjE,IAAI,CAACD,cAAc,GAAG,IAAI,CAACC,cAAc,GAAG,EAAE,GAAGD,cAAc,IAAI,EAAE;IACrE,IAAI,CAACE,aAAa,GAAGA,aAAa,GAAGzU,WAAW,CAACyU,aAAa,CAAC,GAAGC,oBAAoB,IAAI1U,WAAW,CAAC,KAAK,CAAC;IAC5G,IAAI,CAAC2U,aAAa,GAAGA,aAAa,GAAG3U,WAAW,CAAC2U,aAAa,CAAC,GAAGC,oBAAoB,IAAI5U,WAAW,CAAC,GAAG,CAAC;IAC1G,IAAI,CAAC6U,uBAAuB,GAAGA,uBAAuB,IAAI,GAAG;IAC7D,IAAI,CAACC,WAAW,GAAGA,WAAW,IAAI,IAAI;IACtC,IAAI,CAACC,YAAY,GAAGA,YAAY,KAAKlW,SAAS,GAAGkW,YAAY,GAAG,KAAK;IACrE,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB;EACAtG,KAAKA,CAAA,EAAG;IACN,IAAI,IAAI,CAACpL,OAAO,EAAE,IAAI,CAACC,IAAI,CAAC,IAAI,CAACD,OAAO,CAAC;EAC3C;EACA0R,WAAWA,CAAA,EAAG;IACZ,MAAMC,gBAAgB,GAAGA,CAACC,cAAc,EAAEvU,OAAO,KAAK;MACpD,IAAIuU,cAAc,EAAEtV,MAAM,KAAKe,OAAO,EAAE;QACtCuU,cAAc,CAACC,SAAS,GAAG,CAAC;QAC5B,OAAOD,cAAc;MACvB;MACA,OAAO,IAAInU,MAAM,CAACJ,OAAO,EAAE,GAAG,CAAC;IACjC,CAAC;IACD,IAAI,CAACyU,MAAM,GAAGH,gBAAgB,CAAC,IAAI,CAACG,MAAM,EAAE,GAAG,IAAI,CAAC5R,MAAM,QAAQ,IAAI,CAACqK,MAAM,EAAE,CAAC;IAChF,IAAI,CAACwH,cAAc,GAAGJ,gBAAgB,CAAC,IAAI,CAACI,cAAc,EAAE,GAAG,IAAI,CAAC7R,MAAM,GAAG,IAAI,CAACgR,cAAc,QAAQ,IAAI,CAACD,cAAc,GAAG,IAAI,CAAC1G,MAAM,EAAE,CAAC;IAC5I,IAAI,CAAClE,aAAa,GAAGsL,gBAAgB,CAAC,IAAI,CAACtL,aAAa,EAAE,GAAG,IAAI,CAAC8K,aAAa,oEAAoE,IAAI,CAACE,aAAa,EAAE,CAAC;EAC1K;EACAtG,WAAWA,CAACpO,GAAG,EAAEV,IAAI,EAAEoG,GAAG,EAAErC,OAAO,EAAE;IACnC,IAAImG,KAAK;IACT,IAAIhK,KAAK;IACT,IAAI6V,QAAQ;IACZ,MAAM9V,WAAW,GAAG,IAAI,CAAC8D,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC0F,aAAa,IAAI,IAAI,CAAC1F,OAAO,CAAC0F,aAAa,CAACgF,gBAAgB,IAAI,CAAC,CAAC;IACnH,MAAMuH,YAAY,GAAG5X,GAAG,IAAI;MAC1B,IAAIA,GAAG,CAACC,OAAO,CAAC,IAAI,CAAC0W,eAAe,CAAC,GAAG,CAAC,EAAE;QACzC,MAAMtW,IAAI,GAAG4V,oBAAoB,CAACrU,IAAI,EAAEC,WAAW,EAAE7B,GAAG,EAAE,IAAI,CAAC2F,OAAO,CAAC/B,YAAY,EAAE,IAAI,CAAC+B,OAAO,CAAC+B,mBAAmB,CAAC;QACtH,OAAO,IAAI,CAAC0P,YAAY,GAAG,IAAI,CAACf,MAAM,CAAChW,IAAI,EAAEa,SAAS,EAAE8G,GAAG,EAAE;UAC3D,GAAGrC,OAAO;UACV,GAAG/D,IAAI;UACPiW,gBAAgB,EAAE7X;QACpB,CAAC,CAAC,GAAGK,IAAI;MACX;MACA,MAAMe,CAAC,GAAGpB,GAAG,CAACQ,KAAK,CAAC,IAAI,CAACmW,eAAe,CAAC;MACzC,MAAM5V,CAAC,GAAGK,CAAC,CAACkC,KAAK,CAAC,CAAC,CAACwU,IAAI,CAAC,CAAC;MAC1B,MAAMC,CAAC,GAAG3W,CAAC,CAAC8C,IAAI,CAAC,IAAI,CAACyS,eAAe,CAAC,CAACmB,IAAI,CAAC,CAAC;MAC7C,OAAO,IAAI,CAACzB,MAAM,CAACJ,oBAAoB,CAACrU,IAAI,EAAEC,WAAW,EAAEd,CAAC,EAAE,IAAI,CAAC4E,OAAO,CAAC/B,YAAY,EAAE,IAAI,CAAC+B,OAAO,CAAC+B,mBAAmB,CAAC,EAAEqQ,CAAC,EAAE/P,GAAG,EAAE;QAClI,GAAGrC,OAAO;QACV,GAAG/D,IAAI;QACPiW,gBAAgB,EAAE9W;MACpB,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAACsW,WAAW,CAAC,CAAC;IAClB,MAAMW,2BAA2B,GAAGrS,OAAO,EAAEqS,2BAA2B,IAAI,IAAI,CAACrS,OAAO,CAACqS,2BAA2B;IACpH,MAAMzH,eAAe,GAAG5K,OAAO,EAAE0F,aAAa,EAAEkF,eAAe,KAAKrP,SAAS,GAAGyE,OAAO,CAAC0F,aAAa,CAACkF,eAAe,GAAG,IAAI,CAAC5K,OAAO,CAAC0F,aAAa,CAACkF,eAAe;IAClK,MAAM0H,KAAK,GAAG,CAAC;MACbC,KAAK,EAAE,IAAI,CAACR,cAAc;MAC1BS,SAAS,EAAEhC,GAAG,IAAID,SAAS,CAACC,GAAG;IACjC,CAAC,EAAE;MACD+B,KAAK,EAAE,IAAI,CAACT,MAAM;MAClBU,SAAS,EAAEhC,GAAG,IAAI,IAAI,CAACG,WAAW,GAAGJ,SAAS,CAAC,IAAI,CAAC1T,MAAM,CAAC2T,GAAG,CAAC,CAAC,GAAGD,SAAS,CAACC,GAAG;IAClF,CAAC,CAAC;IACF8B,KAAK,CAACrY,OAAO,CAACwY,IAAI,IAAI;MACpBT,QAAQ,GAAG,CAAC;MACZ,OAAO7L,KAAK,GAAGsM,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC/V,GAAG,CAAC,EAAE;QACnC,MAAMgW,UAAU,GAAGxM,KAAK,CAAC,CAAC,CAAC,CAACgM,IAAI,CAAC,CAAC;QAClChW,KAAK,GAAG8V,YAAY,CAACU,UAAU,CAAC;QAChC,IAAIxW,KAAK,KAAKZ,SAAS,EAAE;UACvB,IAAI,OAAO8W,2BAA2B,KAAK,UAAU,EAAE;YACrD,MAAMO,IAAI,GAAGP,2BAA2B,CAAC1V,GAAG,EAAEwJ,KAAK,EAAEnG,OAAO,CAAC;YAC7D7D,KAAK,GAAGjD,QAAQ,CAAC0Z,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;UACpC,CAAC,MAAM,IAAI5S,OAAO,IAAIhF,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC6E,OAAO,EAAE2S,UAAU,CAAC,EAAE;YAC/ExW,KAAK,GAAG,EAAE;UACZ,CAAC,MAAM,IAAIyO,eAAe,EAAE;YAC1BzO,KAAK,GAAGgK,KAAK,CAAC,CAAC,CAAC;YAChB;UACF,CAAC,MAAM;YACL,IAAI,CAAChG,MAAM,CAACT,IAAI,CAAC,8BAA8BiT,UAAU,sBAAsBhW,GAAG,EAAE,CAAC;YACrFR,KAAK,GAAG,EAAE;UACZ;QACF,CAAC,MAAM,IAAI,CAACjD,QAAQ,CAACiD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC0U,mBAAmB,EAAE;UACxD1U,KAAK,GAAGxC,UAAU,CAACwC,KAAK,CAAC;QAC3B;QACA,MAAMqW,SAAS,GAAGC,IAAI,CAACD,SAAS,CAACrW,KAAK,CAAC;QACvCQ,GAAG,GAAGA,GAAG,CAACpC,OAAO,CAAC4L,KAAK,CAAC,CAAC,CAAC,EAAEqM,SAAS,CAAC;QACtC,IAAI5H,eAAe,EAAE;UACnB6H,IAAI,CAACF,KAAK,CAACV,SAAS,IAAI1V,KAAK,CAACpB,MAAM;UACpC0X,IAAI,CAACF,KAAK,CAACV,SAAS,IAAI1L,KAAK,CAAC,CAAC,CAAC,CAACpL,MAAM;QACzC,CAAC,MAAM;UACL0X,IAAI,CAACF,KAAK,CAACV,SAAS,GAAG,CAAC;QAC1B;QACAG,QAAQ,EAAE;QACV,IAAIA,QAAQ,IAAI,IAAI,CAACR,WAAW,EAAE;UAChC;QACF;MACF;IACF,CAAC,CAAC;IACF,OAAO7U,GAAG;EACZ;EACAuO,IAAIA,CAACvO,GAAG,EAAE4R,EAAE,EAAEvO,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1B,IAAImG,KAAK;IACT,IAAIhK,KAAK;IACT,IAAI0W,aAAa;IACjB,MAAMC,gBAAgB,GAAGA,CAACzY,GAAG,EAAE0Y,gBAAgB,KAAK;MAClD,MAAMC,GAAG,GAAG,IAAI,CAACzB,uBAAuB;MACxC,IAAIlX,GAAG,CAACC,OAAO,CAAC0Y,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO3Y,GAAG;MACpC,MAAM+D,CAAC,GAAG/D,GAAG,CAACQ,KAAK,CAAC,IAAI4C,MAAM,CAAC,GAAGuV,GAAG,OAAO,CAAC,CAAC;MAC9C,IAAIC,aAAa,GAAG,IAAI7U,CAAC,CAAC,CAAC,CAAC,EAAE;MAC9B/D,GAAG,GAAG+D,CAAC,CAAC,CAAC,CAAC;MACV6U,aAAa,GAAG,IAAI,CAAClI,WAAW,CAACkI,aAAa,EAAEJ,aAAa,CAAC;MAC9D,MAAMK,mBAAmB,GAAGD,aAAa,CAAC9M,KAAK,CAAC,IAAI,CAAC;MACrD,MAAMgN,mBAAmB,GAAGF,aAAa,CAAC9M,KAAK,CAAC,IAAI,CAAC;MACrD,IAAI,CAAC+M,mBAAmB,EAAEnY,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAACoY,mBAAmB,IAAIA,mBAAmB,CAACpY,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAChHkY,aAAa,GAAGA,aAAa,CAAC1Y,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MAClD;MACA,IAAI;QACFsY,aAAa,GAAG7P,IAAI,CAACC,KAAK,CAACgQ,aAAa,CAAC;QACzC,IAAIF,gBAAgB,EAAEF,aAAa,GAAG;UACpC,GAAGE,gBAAgB;UACnB,GAAGF;QACL,CAAC;MACH,CAAC,CAAC,OAAOrX,CAAC,EAAE;QACV,IAAI,CAAC2E,MAAM,CAACT,IAAI,CAAC,oDAAoDrF,GAAG,EAAE,EAAEmB,CAAC,CAAC;QAC9E,OAAO,GAAGnB,GAAG,GAAG2Y,GAAG,GAAGC,aAAa,EAAE;MACvC;MACA,IAAIJ,aAAa,CAACxK,YAAY,IAAIwK,aAAa,CAACxK,YAAY,CAAC/N,OAAO,CAAC,IAAI,CAAC4F,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO2S,aAAa,CAACxK,YAAY;MACzH,OAAOhO,GAAG;IACZ,CAAC;IACD,OAAO8L,KAAK,GAAG,IAAI,CAACE,aAAa,CAACqM,IAAI,CAAC/V,GAAG,CAAC,EAAE;MAC3C,IAAIyW,UAAU,GAAG,EAAE;MACnBP,aAAa,GAAG;QACd,GAAG7S;MACL,CAAC;MACD6S,aAAa,GAAGA,aAAa,CAACtY,OAAO,IAAI,CAACrB,QAAQ,CAAC2Z,aAAa,CAACtY,OAAO,CAAC,GAAGsY,aAAa,CAACtY,OAAO,GAAGsY,aAAa;MACjHA,aAAa,CAACtH,kBAAkB,GAAG,KAAK;MACxC,OAAOsH,aAAa,CAACxK,YAAY;MACjC,MAAMgL,WAAW,GAAG,MAAM,CAAC5U,IAAI,CAAC0H,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACmN,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGnN,KAAK,CAAC,CAAC,CAAC,CAAC7L,OAAO,CAAC,IAAI,CAAC0W,eAAe,CAAC;MAClH,IAAIqC,WAAW,KAAK,CAAC,CAAC,EAAE;QACtBD,UAAU,GAAGjN,KAAK,CAAC,CAAC,CAAC,CAACzK,KAAK,CAAC2X,WAAW,CAAC,CAACxY,KAAK,CAAC,IAAI,CAACmW,eAAe,CAAC,CAAC1S,GAAG,CAACiV,IAAI,IAAIA,IAAI,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAChU,MAAM,CAACqV,OAAO,CAAC;QAC7GrN,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACzK,KAAK,CAAC,CAAC,EAAE2X,WAAW,CAAC;MAC3C;MACAlX,KAAK,GAAGoS,EAAE,CAACuE,gBAAgB,CAAC3X,IAAI,CAAC,IAAI,EAAEgL,KAAK,CAAC,CAAC,CAAC,CAACgM,IAAI,CAAC,CAAC,EAAEU,aAAa,CAAC,EAAEA,aAAa,CAAC;MACtF,IAAI1W,KAAK,IAAIgK,KAAK,CAAC,CAAC,CAAC,KAAKxJ,GAAG,IAAI,CAACzD,QAAQ,CAACiD,KAAK,CAAC,EAAE,OAAOA,KAAK;MAC/D,IAAI,CAACjD,QAAQ,CAACiD,KAAK,CAAC,EAAEA,KAAK,GAAGxC,UAAU,CAACwC,KAAK,CAAC;MAC/C,IAAI,CAACA,KAAK,EAAE;QACV,IAAI,CAACgE,MAAM,CAACT,IAAI,CAAC,qBAAqByG,KAAK,CAAC,CAAC,CAAC,gBAAgBxJ,GAAG,EAAE,CAAC;QACpER,KAAK,GAAG,EAAE;MACZ;MACA,IAAIiX,UAAU,CAACrY,MAAM,EAAE;QACrBoB,KAAK,GAAGiX,UAAU,CAACK,MAAM,CAAC,CAAC9P,CAAC,EAAEyO,CAAC,KAAK,IAAI,CAAC1B,MAAM,CAAC/M,CAAC,EAAEyO,CAAC,EAAEpS,OAAO,CAACqC,GAAG,EAAE;UACjE,GAAGrC,OAAO;UACVkS,gBAAgB,EAAE/L,KAAK,CAAC,CAAC,CAAC,CAACgM,IAAI,CAAC;QAClC,CAAC,CAAC,EAAEhW,KAAK,CAACgW,IAAI,CAAC,CAAC,CAAC;MACnB;MACAxV,GAAG,GAAGA,GAAG,CAACpC,OAAO,CAAC4L,KAAK,CAAC,CAAC,CAAC,EAAEhK,KAAK,CAAC;MAClC,IAAI,CAAC2V,MAAM,CAACD,SAAS,GAAG,CAAC;IAC3B;IACA,OAAOlV,GAAG;EACZ;AACF;AAEA,MAAM+W,cAAc,GAAGC,SAAS,IAAI;EAClC,IAAIC,UAAU,GAAGD,SAAS,CAAC7M,WAAW,CAAC,CAAC,CAACqL,IAAI,CAAC,CAAC;EAC/C,MAAM0B,aAAa,GAAG,CAAC,CAAC;EACxB,IAAIF,SAAS,CAACrZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAC/B,MAAMmB,CAAC,GAAGkY,SAAS,CAAC9Y,KAAK,CAAC,GAAG,CAAC;IAC9B+Y,UAAU,GAAGnY,CAAC,CAAC,CAAC,CAAC,CAACqL,WAAW,CAAC,CAAC,CAACqL,IAAI,CAAC,CAAC;IACtC,MAAM2B,MAAM,GAAGrY,CAAC,CAAC,CAAC,CAAC,CAACkD,SAAS,CAAC,CAAC,EAAElD,CAAC,CAAC,CAAC,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC;IACjD,IAAI6Y,UAAU,KAAK,UAAU,IAAIE,MAAM,CAACxZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACxD,IAAI,CAACuZ,aAAa,CAACE,QAAQ,EAAEF,aAAa,CAACE,QAAQ,GAAGD,MAAM,CAAC3B,IAAI,CAAC,CAAC;IACrE,CAAC,MAAM,IAAIyB,UAAU,KAAK,cAAc,IAAIE,MAAM,CAACxZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACnE,IAAI,CAACuZ,aAAa,CAACG,KAAK,EAAEH,aAAa,CAACG,KAAK,GAAGF,MAAM,CAAC3B,IAAI,CAAC,CAAC;IAC/D,CAAC,MAAM;MACL,MAAMlN,IAAI,GAAG6O,MAAM,CAACjZ,KAAK,CAAC,GAAG,CAAC;MAC9BoK,IAAI,CAAChL,OAAO,CAAC0L,GAAG,IAAI;QAClB,IAAIA,GAAG,EAAE;UACP,MAAM,CAACtL,GAAG,EAAE,GAAG4Z,IAAI,CAAC,GAAGtO,GAAG,CAAC9K,KAAK,CAAC,GAAG,CAAC;UACrC,MAAM2V,GAAG,GAAGyD,IAAI,CAAC1V,IAAI,CAAC,GAAG,CAAC,CAAC4T,IAAI,CAAC,CAAC,CAAC5X,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;UACzD,MAAM2Z,UAAU,GAAG7Z,GAAG,CAAC8X,IAAI,CAAC,CAAC;UAC7B,IAAI,CAAC0B,aAAa,CAACK,UAAU,CAAC,EAAEL,aAAa,CAACK,UAAU,CAAC,GAAG1D,GAAG;UAC/D,IAAIA,GAAG,KAAK,OAAO,EAAEqD,aAAa,CAACK,UAAU,CAAC,GAAG,KAAK;UACtD,IAAI1D,GAAG,KAAK,MAAM,EAAEqD,aAAa,CAACK,UAAU,CAAC,GAAG,IAAI;UACpD,IAAI,CAACC,KAAK,CAAC3D,GAAG,CAAC,EAAEqD,aAAa,CAACK,UAAU,CAAC,GAAGE,QAAQ,CAAC5D,GAAG,EAAE,EAAE,CAAC;QAChE;MACF,CAAC,CAAC;IACJ;EACF;EACA,OAAO;IACLoD,UAAU;IACVC;EACF,CAAC;AACH,CAAC;AACD,MAAMQ,qBAAqB,GAAGC,EAAE,IAAI;EAClC,MAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,OAAO,CAAC5Q,CAAC,EAAEmG,CAAC,EAAErE,CAAC,KAAK;IAClB,IAAI+O,WAAW,GAAG/O,CAAC;IACnB,IAAIA,CAAC,IAAIA,CAAC,CAACyM,gBAAgB,IAAIzM,CAAC,CAACgP,YAAY,IAAIhP,CAAC,CAACgP,YAAY,CAAChP,CAAC,CAACyM,gBAAgB,CAAC,IAAIzM,CAAC,CAACA,CAAC,CAACyM,gBAAgB,CAAC,EAAE;MAC5GsC,WAAW,GAAG;QACZ,GAAGA,WAAW;QACd,CAAC/O,CAAC,CAACyM,gBAAgB,GAAG3W;MACxB,CAAC;IACH;IACA,MAAMlB,GAAG,GAAGyP,CAAC,GAAG9G,IAAI,CAACE,SAAS,CAACsR,WAAW,CAAC;IAC3C,IAAIE,GAAG,GAAGH,KAAK,CAACla,GAAG,CAAC;IACpB,IAAI,CAACqa,GAAG,EAAE;MACRA,GAAG,GAAGJ,EAAE,CAACnV,cAAc,CAAC2K,CAAC,CAAC,EAAErE,CAAC,CAAC;MAC9B8O,KAAK,CAACla,GAAG,CAAC,GAAGqa,GAAG;IAClB;IACA,OAAOA,GAAG,CAAC/Q,CAAC,CAAC;EACf,CAAC;AACH,CAAC;AACD,MAAMgR,wBAAwB,GAAGL,EAAE,IAAI,CAAC3Q,CAAC,EAAEmG,CAAC,EAAErE,CAAC,KAAK6O,EAAE,CAACnV,cAAc,CAAC2K,CAAC,CAAC,EAAErE,CAAC,CAAC,CAAC9B,CAAC,CAAC;AAC/E,MAAMiR,SAAS,CAAC;EACd7X,WAAWA,CAACiD,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,WAAW,CAAC;IAC5C,IAAI,CAACT,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,CAACD,OAAO,CAAC;EACpB;EACAC,IAAIA,CAACoF,QAAQ,EAAErF,OAAO,GAAG;IACvB0F,aAAa,EAAE,CAAC;EAClB,CAAC,EAAE;IACD,IAAI,CAACsL,eAAe,GAAGhR,OAAO,CAAC0F,aAAa,CAACsL,eAAe,IAAI,GAAG;IACnE,MAAM6D,EAAE,GAAG7U,OAAO,CAAC8U,mBAAmB,GAAGT,qBAAqB,GAAGM,wBAAwB;IACzF,IAAI,CAACI,OAAO,GAAG;MACbC,MAAM,EAAEH,EAAE,CAAC,CAACxS,GAAG,EAAEsD,GAAG,KAAK;QACvB,MAAMsP,SAAS,GAAG,IAAI3H,IAAI,CAAC4H,YAAY,CAAC7S,GAAG,EAAE;UAC3C,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO6K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC,CAAC;MACFuD,QAAQ,EAAEc,EAAE,CAAC,CAACxS,GAAG,EAAEsD,GAAG,KAAK;QACzB,MAAMsP,SAAS,GAAG,IAAI3H,IAAI,CAAC4H,YAAY,CAAC7S,GAAG,EAAE;UAC3C,GAAGsD,GAAG;UACNwP,KAAK,EAAE;QACT,CAAC,CAAC;QACF,OAAO3E,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC,CAAC;MACF4E,QAAQ,EAAEP,EAAE,CAAC,CAACxS,GAAG,EAAEsD,GAAG,KAAK;QACzB,MAAMsP,SAAS,GAAG,IAAI3H,IAAI,CAAC+H,cAAc,CAAChT,GAAG,EAAE;UAC7C,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO6K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC,CAAC;MACF8E,YAAY,EAAET,EAAE,CAAC,CAACxS,GAAG,EAAEsD,GAAG,KAAK;QAC7B,MAAMsP,SAAS,GAAG,IAAI3H,IAAI,CAACiI,kBAAkB,CAAClT,GAAG,EAAE;UACjD,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO6K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,EAAE7K,GAAG,CAACqO,KAAK,IAAI,KAAK,CAAC;MACzD,CAAC,CAAC;MACFwB,IAAI,EAAEX,EAAE,CAAC,CAACxS,GAAG,EAAEsD,GAAG,KAAK;QACrB,MAAMsP,SAAS,GAAG,IAAI3H,IAAI,CAACmI,UAAU,CAACpT,GAAG,EAAE;UACzC,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO6K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC;IACH,CAAC;EACH;EACAkF,GAAGA,CAACzR,IAAI,EAAEsK,EAAE,EAAE;IACZ,IAAI,CAACwG,OAAO,CAAC9Q,IAAI,CAAC6C,WAAW,CAAC,CAAC,CAACqL,IAAI,CAAC,CAAC,CAAC,GAAG5D,EAAE;EAC9C;EACAoH,SAASA,CAAC1R,IAAI,EAAEsK,EAAE,EAAE;IAClB,IAAI,CAACwG,OAAO,CAAC9Q,IAAI,CAAC6C,WAAW,CAAC,CAAC,CAACqL,IAAI,CAAC,CAAC,CAAC,GAAGkC,qBAAqB,CAAC9F,EAAE,CAAC;EACrE;EACAmC,MAAMA,CAACvU,KAAK,EAAEuU,MAAM,EAAErO,GAAG,EAAErC,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,MAAM+U,OAAO,GAAGrE,MAAM,CAAC7V,KAAK,CAAC,IAAI,CAACmW,eAAe,CAAC;IAClD,IAAI+D,OAAO,CAACha,MAAM,GAAG,CAAC,IAAIga,OAAO,CAAC,CAAC,CAAC,CAACza,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAIya,OAAO,CAAC,CAAC,CAAC,CAACza,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAIya,OAAO,CAACrR,IAAI,CAAC0O,CAAC,IAAIA,CAAC,CAAC9X,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MAC9H,MAAMuX,SAAS,GAAGkD,OAAO,CAACa,SAAS,CAACxD,CAAC,IAAIA,CAAC,CAAC9X,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7Dya,OAAO,CAAC,CAAC,CAAC,GAAG,CAACA,OAAO,CAAC,CAAC,CAAC,EAAE,GAAGA,OAAO,CAAC5S,MAAM,CAAC,CAAC,EAAE0P,SAAS,CAAC,CAAC,CAACtT,IAAI,CAAC,IAAI,CAACyS,eAAe,CAAC;IACvF;IACA,MAAMzO,MAAM,GAAGwS,OAAO,CAACtB,MAAM,CAAC,CAACoC,GAAG,EAAEzD,CAAC,KAAK;MACxC,MAAM;QACJwB,UAAU;QACVC;MACF,CAAC,GAAGH,cAAc,CAACtB,CAAC,CAAC;MACrB,IAAI,IAAI,CAAC2C,OAAO,CAACnB,UAAU,CAAC,EAAE;QAC5B,IAAIkC,SAAS,GAAGD,GAAG;QACnB,IAAI;UACF,MAAME,UAAU,GAAG/V,OAAO,EAAEyU,YAAY,GAAGzU,OAAO,CAACkS,gBAAgB,CAAC,IAAI,CAAC,CAAC;UAC1E,MAAMpI,CAAC,GAAGiM,UAAU,CAACC,MAAM,IAAID,UAAU,CAAC1T,GAAG,IAAIrC,OAAO,CAACgW,MAAM,IAAIhW,OAAO,CAACqC,GAAG,IAAIA,GAAG;UACrFyT,SAAS,GAAG,IAAI,CAACf,OAAO,CAACnB,UAAU,CAAC,CAACiC,GAAG,EAAE/L,CAAC,EAAE;YAC3C,GAAG+J,aAAa;YAChB,GAAG7T,OAAO;YACV,GAAG+V;UACL,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOpW,KAAK,EAAE;UACd,IAAI,CAACQ,MAAM,CAACT,IAAI,CAACC,KAAK,CAAC;QACzB;QACA,OAAOmW,SAAS;MAClB,CAAC,MAAM;QACL,IAAI,CAAC3V,MAAM,CAACT,IAAI,CAAC,oCAAoCkU,UAAU,EAAE,CAAC;MACpE;MACA,OAAOiC,GAAG;IACZ,CAAC,EAAE1Z,KAAK,CAAC;IACT,OAAOoG,MAAM;EACf;AACF;AAEA,MAAM0T,aAAa,GAAGA,CAACC,CAAC,EAAEjS,IAAI,KAAK;EACjC,IAAIiS,CAAC,CAACC,OAAO,CAAClS,IAAI,CAAC,KAAK1I,SAAS,EAAE;IACjC,OAAO2a,CAAC,CAACC,OAAO,CAAClS,IAAI,CAAC;IACtBiS,CAAC,CAACE,YAAY,EAAE;EAClB;AACF,CAAC;AACD,MAAMC,SAAS,SAASxV,YAAY,CAAC;EACnC9D,WAAWA,CAACuZ,OAAO,EAAEC,KAAK,EAAElR,QAAQ,EAAErF,OAAO,GAAG,CAAC,CAAC,EAAE;IAClD,KAAK,CAAC,CAAC;IACP,IAAI,CAACsW,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAClR,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACmE,aAAa,GAAGnE,QAAQ,CAACmE,aAAa;IAC3C,IAAI,CAACxJ,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,kBAAkB,CAAC;IACnD,IAAI,CAAC+V,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,gBAAgB,GAAGzW,OAAO,CAACyW,gBAAgB,IAAI,EAAE;IACtD,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,UAAU,GAAG3W,OAAO,CAAC2W,UAAU,IAAI,CAAC,GAAG3W,OAAO,CAAC2W,UAAU,GAAG,CAAC;IAClE,IAAI,CAACC,YAAY,GAAG5W,OAAO,CAAC4W,YAAY,IAAI,CAAC,GAAG5W,OAAO,CAAC4W,YAAY,GAAG,GAAG;IAC1E,IAAI,CAACnS,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACoS,KAAK,GAAG,EAAE;IACf,IAAI,CAACP,OAAO,EAAErW,IAAI,GAAGoF,QAAQ,EAAErF,OAAO,CAACsW,OAAO,EAAEtW,OAAO,CAAC;EAC1D;EACA8W,SAASA,CAACC,SAAS,EAAEjR,UAAU,EAAE9F,OAAO,EAAEgX,QAAQ,EAAE;IAClD,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMd,OAAO,GAAG,CAAC,CAAC;IAClB,MAAMe,eAAe,GAAG,CAAC,CAAC;IAC1B,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAC3BJ,SAAS,CAAC9c,OAAO,CAACoI,GAAG,IAAI;MACvB,IAAI+U,gBAAgB,GAAG,IAAI;MAC3BtR,UAAU,CAAC7L,OAAO,CAAC4H,EAAE,IAAI;QACvB,MAAMoC,IAAI,GAAG,GAAG5B,GAAG,IAAIR,EAAE,EAAE;QAC3B,IAAI,CAAC7B,OAAO,CAACqX,MAAM,IAAI,IAAI,CAACd,KAAK,CAACnT,iBAAiB,CAACf,GAAG,EAAER,EAAE,CAAC,EAAE;UAC5D,IAAI,CAAC4C,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC;QACtB,CAAC,MAAM,IAAI,IAAI,CAACQ,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAM,IAAI,IAAI,CAACQ,KAAK,CAACR,IAAI,CAAC,KAAK,CAAC,EAAE;UAClE,IAAIkS,OAAO,CAAClS,IAAI,CAAC,KAAK1I,SAAS,EAAE4a,OAAO,CAAClS,IAAI,CAAC,GAAG,IAAI;QACvD,CAAC,MAAM;UACL,IAAI,CAACQ,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC;UACpBmT,gBAAgB,GAAG,KAAK;UACxB,IAAIjB,OAAO,CAAClS,IAAI,CAAC,KAAK1I,SAAS,EAAE4a,OAAO,CAAClS,IAAI,CAAC,GAAG,IAAI;UACrD,IAAIgT,MAAM,CAAChT,IAAI,CAAC,KAAK1I,SAAS,EAAE0b,MAAM,CAAChT,IAAI,CAAC,GAAG,IAAI;UACnD,IAAIkT,gBAAgB,CAACtV,EAAE,CAAC,KAAKtG,SAAS,EAAE4b,gBAAgB,CAACtV,EAAE,CAAC,GAAG,IAAI;QACrE;MACF,CAAC,CAAC;MACF,IAAI,CAACuV,gBAAgB,EAAEF,eAAe,CAAC7U,GAAG,CAAC,GAAG,IAAI;IACpD,CAAC,CAAC;IACF,IAAIrH,MAAM,CAACyI,IAAI,CAACwT,MAAM,CAAC,CAAClc,MAAM,IAAIC,MAAM,CAACyI,IAAI,CAAC0S,OAAO,CAAC,CAACpb,MAAM,EAAE;MAC7D,IAAI,CAAC8b,KAAK,CAAC/a,IAAI,CAAC;QACdqa,OAAO;QACPC,YAAY,EAAEpb,MAAM,CAACyI,IAAI,CAAC0S,OAAO,CAAC,CAACpb,MAAM;QACzCuc,MAAM,EAAE,CAAC,CAAC;QACVC,MAAM,EAAE,EAAE;QACVP;MACF,CAAC,CAAC;IACJ;IACA,OAAO;MACLC,MAAM,EAAEjc,MAAM,CAACyI,IAAI,CAACwT,MAAM,CAAC;MAC3Bd,OAAO,EAAEnb,MAAM,CAACyI,IAAI,CAAC0S,OAAO,CAAC;MAC7Be,eAAe,EAAElc,MAAM,CAACyI,IAAI,CAACyT,eAAe,CAAC;MAC7CC,gBAAgB,EAAEnc,MAAM,CAACyI,IAAI,CAAC0T,gBAAgB;IAChD,CAAC;EACH;EACAG,MAAMA,CAACrT,IAAI,EAAE4L,GAAG,EAAE5T,IAAI,EAAE;IACtB,MAAMlC,CAAC,GAAGkK,IAAI,CAACpJ,KAAK,CAAC,GAAG,CAAC;IACzB,MAAMwH,GAAG,GAAGtI,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM8H,EAAE,GAAG9H,CAAC,CAAC,CAAC,CAAC;IACf,IAAI8V,GAAG,EAAE,IAAI,CAACxO,IAAI,CAAC,eAAe,EAAEgB,GAAG,EAAER,EAAE,EAAEgO,GAAG,CAAC;IACjD,IAAI,CAACA,GAAG,IAAI5T,IAAI,EAAE;MAChB,IAAI,CAACsa,KAAK,CAAC3T,iBAAiB,CAACP,GAAG,EAAER,EAAE,EAAE5F,IAAI,EAAEV,SAAS,EAAEA,SAAS,EAAE;QAChEuH,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IACA,IAAI,CAAC2B,KAAK,CAACR,IAAI,CAAC,GAAG4L,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;IAC/B,IAAIA,GAAG,IAAI5T,IAAI,EAAE,IAAI,CAACwI,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC;IACrC,MAAMqT,MAAM,GAAG,CAAC,CAAC;IACjB,IAAI,CAACT,KAAK,CAAC5c,OAAO,CAACic,CAAC,IAAI;MACtBta,QAAQ,CAACsa,CAAC,CAACoB,MAAM,EAAE,CAACjV,GAAG,CAAC,EAAER,EAAE,CAAC;MAC7BoU,aAAa,CAACC,CAAC,EAAEjS,IAAI,CAAC;MACtB,IAAI4L,GAAG,EAAEqG,CAAC,CAACqB,MAAM,CAACzb,IAAI,CAAC+T,GAAG,CAAC;MAC3B,IAAIqG,CAAC,CAACE,YAAY,KAAK,CAAC,IAAI,CAACF,CAAC,CAACsB,IAAI,EAAE;QACnCxc,MAAM,CAACyI,IAAI,CAACyS,CAAC,CAACoB,MAAM,CAAC,CAACrd,OAAO,CAAC6P,CAAC,IAAI;UACjC,IAAI,CAACwN,MAAM,CAACxN,CAAC,CAAC,EAAEwN,MAAM,CAACxN,CAAC,CAAC,GAAG,CAAC,CAAC;UAC9B,MAAM2N,UAAU,GAAGvB,CAAC,CAACoB,MAAM,CAACxN,CAAC,CAAC;UAC9B,IAAI2N,UAAU,CAAC1c,MAAM,EAAE;YACrB0c,UAAU,CAACxd,OAAO,CAACuJ,CAAC,IAAI;cACtB,IAAI8T,MAAM,CAACxN,CAAC,CAAC,CAACtG,CAAC,CAAC,KAAKjI,SAAS,EAAE+b,MAAM,CAACxN,CAAC,CAAC,CAACtG,CAAC,CAAC,GAAG,IAAI;YACrD,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;QACF0S,CAAC,CAACsB,IAAI,GAAG,IAAI;QACb,IAAItB,CAAC,CAACqB,MAAM,CAACxc,MAAM,EAAE;UACnBmb,CAAC,CAACc,QAAQ,CAACd,CAAC,CAACqB,MAAM,CAAC;QACtB,CAAC,MAAM;UACLrB,CAAC,CAACc,QAAQ,CAAC,CAAC;QACd;MACF;IACF,CAAC,CAAC;IACF,IAAI,CAAC3V,IAAI,CAAC,QAAQ,EAAEiW,MAAM,CAAC;IAC3B,IAAI,CAACT,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC1Y,MAAM,CAAC+X,CAAC,IAAI,CAACA,CAAC,CAACsB,IAAI,CAAC;EAC9C;EACAE,IAAIA,CAACrV,GAAG,EAAER,EAAE,EAAE8V,MAAM,EAAEC,KAAK,GAAG,CAAC,EAAEC,IAAI,GAAG,IAAI,CAACjB,YAAY,EAAEI,QAAQ,EAAE;IACnE,IAAI,CAAC3U,GAAG,CAACtH,MAAM,EAAE,OAAOic,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1C,IAAI,IAAI,CAACN,YAAY,IAAI,IAAI,CAACD,gBAAgB,EAAE;MAC9C,IAAI,CAACD,YAAY,CAAC1a,IAAI,CAAC;QACrBuG,GAAG;QACHR,EAAE;QACF8V,MAAM;QACNC,KAAK;QACLC,IAAI;QACJb;MACF,CAAC,CAAC;MACF;IACF;IACA,IAAI,CAACN,YAAY,EAAE;IACnB,MAAMoB,QAAQ,GAAGA,CAACjI,GAAG,EAAE5T,IAAI,KAAK;MAC9B,IAAI,CAACya,YAAY,EAAE;MACnB,IAAI,IAAI,CAACF,YAAY,CAACzb,MAAM,GAAG,CAAC,EAAE;QAChC,MAAMiE,IAAI,GAAG,IAAI,CAACwX,YAAY,CAAC7Y,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC+Z,IAAI,CAAC1Y,IAAI,CAACqD,GAAG,EAAErD,IAAI,CAAC6C,EAAE,EAAE7C,IAAI,CAAC2Y,MAAM,EAAE3Y,IAAI,CAAC4Y,KAAK,EAAE5Y,IAAI,CAAC6Y,IAAI,EAAE7Y,IAAI,CAACgY,QAAQ,CAAC;MACjF;MACA,IAAInH,GAAG,IAAI5T,IAAI,IAAI2b,KAAK,GAAG,IAAI,CAACjB,UAAU,EAAE;QAC1CoB,UAAU,CAAC,MAAM;UACf,IAAI,CAACL,IAAI,CAACvc,IAAI,CAAC,IAAI,EAAEkH,GAAG,EAAER,EAAE,EAAE8V,MAAM,EAAEC,KAAK,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,EAAEb,QAAQ,CAAC;QACtE,CAAC,EAAEa,IAAI,CAAC;QACR;MACF;MACAb,QAAQ,CAACnH,GAAG,EAAE5T,IAAI,CAAC;IACrB,CAAC;IACD,MAAMsS,EAAE,GAAG,IAAI,CAAC+H,OAAO,CAACqB,MAAM,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC1B,OAAO,CAAC;IAClD,IAAI/H,EAAE,CAACxT,MAAM,KAAK,CAAC,EAAE;MACnB,IAAI;QACF,MAAMsD,CAAC,GAAGkQ,EAAE,CAAClM,GAAG,EAAER,EAAE,CAAC;QACrB,IAAIxD,CAAC,IAAI,OAAOA,CAAC,CAAC4Z,IAAI,KAAK,UAAU,EAAE;UACrC5Z,CAAC,CAAC4Z,IAAI,CAAChc,IAAI,IAAI6b,QAAQ,CAAC,IAAI,EAAE7b,IAAI,CAAC,CAAC,CAACic,KAAK,CAACJ,QAAQ,CAAC;QACtD,CAAC,MAAM;UACLA,QAAQ,CAAC,IAAI,EAAEzZ,CAAC,CAAC;QACnB;MACF,CAAC,CAAC,OAAOwR,GAAG,EAAE;QACZiI,QAAQ,CAACjI,GAAG,CAAC;MACf;MACA;IACF;IACA,OAAOtB,EAAE,CAAClM,GAAG,EAAER,EAAE,EAAEiW,QAAQ,CAAC;EAC9B;EACAK,cAAcA,CAACpB,SAAS,EAAEjR,UAAU,EAAE9F,OAAO,GAAG,CAAC,CAAC,EAAEgX,QAAQ,EAAE;IAC5D,IAAI,CAAC,IAAI,CAACV,OAAO,EAAE;MACjB,IAAI,CAACnW,MAAM,CAACT,IAAI,CAAC,gEAAgE,CAAC;MAClF,OAAOsX,QAAQ,IAAIA,QAAQ,CAAC,CAAC;IAC/B;IACA,IAAI9d,QAAQ,CAAC6d,SAAS,CAAC,EAAEA,SAAS,GAAG,IAAI,CAACvN,aAAa,CAACI,kBAAkB,CAACmN,SAAS,CAAC;IACrF,IAAI7d,QAAQ,CAAC4M,UAAU,CAAC,EAAEA,UAAU,GAAG,CAACA,UAAU,CAAC;IACnD,MAAMmR,MAAM,GAAG,IAAI,CAACH,SAAS,CAACC,SAAS,EAAEjR,UAAU,EAAE9F,OAAO,EAAEgX,QAAQ,CAAC;IACvE,IAAI,CAACC,MAAM,CAACA,MAAM,CAAClc,MAAM,EAAE;MACzB,IAAI,CAACkc,MAAM,CAACd,OAAO,CAACpb,MAAM,EAAEic,QAAQ,CAAC,CAAC;MACtC,OAAO,IAAI;IACb;IACAC,MAAM,CAACA,MAAM,CAAChd,OAAO,CAACgK,IAAI,IAAI;MAC5B,IAAI,CAACmU,OAAO,CAACnU,IAAI,CAAC;IACpB,CAAC,CAAC;EACJ;EACA0J,IAAIA,CAACoJ,SAAS,EAAEjR,UAAU,EAAEkR,QAAQ,EAAE;IACpC,IAAI,CAACmB,cAAc,CAACpB,SAAS,EAAEjR,UAAU,EAAE,CAAC,CAAC,EAAEkR,QAAQ,CAAC;EAC1D;EACAK,MAAMA,CAACN,SAAS,EAAEjR,UAAU,EAAEkR,QAAQ,EAAE;IACtC,IAAI,CAACmB,cAAc,CAACpB,SAAS,EAAEjR,UAAU,EAAE;MACzCuR,MAAM,EAAE;IACV,CAAC,EAAEL,QAAQ,CAAC;EACd;EACAoB,OAAOA,CAACnU,IAAI,EAAE/D,MAAM,GAAG,EAAE,EAAE;IACzB,MAAMnG,CAAC,GAAGkK,IAAI,CAACpJ,KAAK,CAAC,GAAG,CAAC;IACzB,MAAMwH,GAAG,GAAGtI,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM8H,EAAE,GAAG9H,CAAC,CAAC,CAAC,CAAC;IACf,IAAI,CAAC2d,IAAI,CAACrV,GAAG,EAAER,EAAE,EAAE,MAAM,EAAEtG,SAAS,EAAEA,SAAS,EAAE,CAACsU,GAAG,EAAE5T,IAAI,KAAK;MAC9D,IAAI4T,GAAG,EAAE,IAAI,CAAC1P,MAAM,CAACT,IAAI,CAAC,GAAGQ,MAAM,qBAAqB2B,EAAE,iBAAiBQ,GAAG,SAAS,EAAEwN,GAAG,CAAC;MAC7F,IAAI,CAACA,GAAG,IAAI5T,IAAI,EAAE,IAAI,CAACkE,MAAM,CAACZ,GAAG,CAAC,GAAGW,MAAM,oBAAoB2B,EAAE,iBAAiBQ,GAAG,EAAE,EAAEpG,IAAI,CAAC;MAC9F,IAAI,CAACqb,MAAM,CAACrT,IAAI,EAAE4L,GAAG,EAAE5T,IAAI,CAAC;IAC9B,CAAC,CAAC;EACJ;EACAkO,WAAWA,CAAC4M,SAAS,EAAEnQ,SAAS,EAAEvM,GAAG,EAAEge,aAAa,EAAEC,QAAQ,EAAEtY,OAAO,GAAG,CAAC,CAAC,EAAEuY,GAAG,GAAGA,CAAA,KAAM,CAAC,CAAC,EAAE;IAC5F,IAAI,IAAI,CAAClT,QAAQ,EAAE0G,KAAK,EAAEC,kBAAkB,IAAI,CAAC,IAAI,CAAC3G,QAAQ,EAAE0G,KAAK,EAAEC,kBAAkB,CAACpF,SAAS,CAAC,EAAE;MACpG,IAAI,CAACzG,MAAM,CAACT,IAAI,CAAC,qBAAqBrF,GAAG,uBAAuBuM,SAAS,sBAAsB,EAAE,0NAA0N,CAAC;MAC5T;IACF;IACA,IAAIvM,GAAG,KAAKkB,SAAS,IAAIlB,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,EAAE,EAAE;IACrD,IAAI,IAAI,CAACic,OAAO,EAAE7V,MAAM,EAAE;MACxB,MAAMwE,IAAI,GAAG;QACX,GAAGjF,OAAO;QACVsY;MACF,CAAC;MACD,MAAM/J,EAAE,GAAG,IAAI,CAAC+H,OAAO,CAAC7V,MAAM,CAACuX,IAAI,CAAC,IAAI,CAAC1B,OAAO,CAAC;MACjD,IAAI/H,EAAE,CAACxT,MAAM,GAAG,CAAC,EAAE;QACjB,IAAI;UACF,IAAIsD,CAAC;UACL,IAAIkQ,EAAE,CAACxT,MAAM,KAAK,CAAC,EAAE;YACnBsD,CAAC,GAAGkQ,EAAE,CAACwI,SAAS,EAAEnQ,SAAS,EAAEvM,GAAG,EAAEge,aAAa,EAAEpT,IAAI,CAAC;UACxD,CAAC,MAAM;YACL5G,CAAC,GAAGkQ,EAAE,CAACwI,SAAS,EAAEnQ,SAAS,EAAEvM,GAAG,EAAEge,aAAa,CAAC;UAClD;UACA,IAAIha,CAAC,IAAI,OAAOA,CAAC,CAAC4Z,IAAI,KAAK,UAAU,EAAE;YACrC5Z,CAAC,CAAC4Z,IAAI,CAAChc,IAAI,IAAIsc,GAAG,CAAC,IAAI,EAAEtc,IAAI,CAAC,CAAC,CAACic,KAAK,CAACK,GAAG,CAAC;UAC5C,CAAC,MAAM;YACLA,GAAG,CAAC,IAAI,EAAEla,CAAC,CAAC;UACd;QACF,CAAC,CAAC,OAAOwR,GAAG,EAAE;UACZ0I,GAAG,CAAC1I,GAAG,CAAC;QACV;MACF,CAAC,MAAM;QACLtB,EAAE,CAACwI,SAAS,EAAEnQ,SAAS,EAAEvM,GAAG,EAAEge,aAAa,EAAEE,GAAG,EAAEtT,IAAI,CAAC;MACzD;IACF;IACA,IAAI,CAAC8R,SAAS,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC,EAAE;IACjC,IAAI,CAACR,KAAK,CAAC/T,WAAW,CAACuU,SAAS,CAAC,CAAC,CAAC,EAAEnQ,SAAS,EAAEvM,GAAG,EAAEge,aAAa,CAAC;EACrE;AACF;AAEA,MAAM9a,GAAG,GAAGA,CAAA,MAAO;EACjB6C,KAAK,EAAE,KAAK;EACZoY,SAAS,EAAE,IAAI;EACf3W,EAAE,EAAE,CAAC,aAAa,CAAC;EACnBC,SAAS,EAAE,CAAC,aAAa,CAAC;EAC1B4H,WAAW,EAAE,CAAC,KAAK,CAAC;EACpBkC,UAAU,EAAE,KAAK;EACjBqB,aAAa,EAAE,KAAK;EACpBW,wBAAwB,EAAE,KAAK;EAC/BD,IAAI,EAAE,KAAK;EACX8K,OAAO,EAAE,KAAK;EACdC,oBAAoB,EAAE,IAAI;EAC1Bza,YAAY,EAAE,GAAG;EACjBD,WAAW,EAAE,GAAG;EAChBsK,eAAe,EAAE,GAAG;EACpBiE,gBAAgB,EAAE,GAAG;EACrBoM,uBAAuB,EAAE,KAAK;EAC9BxO,WAAW,EAAE,KAAK;EAClBf,aAAa,EAAE,KAAK;EACpBO,aAAa,EAAE,UAAU;EACzBS,kBAAkB,EAAE,IAAI;EACxBH,iBAAiB,EAAE,KAAK;EACxBoI,2BAA2B,EAAE,KAAK;EAClChH,WAAW,EAAE,KAAK;EAClBG,uBAAuB,EAAE,KAAK;EAC9BkB,UAAU,EAAE,KAAK;EACjBC,iBAAiB,EAAE,IAAI;EACvBjE,aAAa,EAAE,KAAK;EACpBlB,UAAU,EAAE,KAAK;EACjBmB,qBAAqB,EAAE,KAAK;EAC5B8B,sBAAsB,EAAE,KAAK;EAC7BD,2BAA2B,EAAE,KAAK;EAClC3D,uBAAuB,EAAE,KAAK;EAC9BJ,gCAAgC,EAAEjH,IAAI,IAAI;IACxC,IAAIoZ,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,OAAOpZ,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAEoZ,GAAG,GAAGpZ,IAAI,CAAC,CAAC,CAAC;IAC9C,IAAItG,QAAQ,CAACsG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEoZ,GAAG,CAACvQ,YAAY,GAAG7I,IAAI,CAAC,CAAC,CAAC;IACjD,IAAItG,QAAQ,CAACsG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEoZ,GAAG,CAACC,YAAY,GAAGrZ,IAAI,CAAC,CAAC,CAAC;IACjD,IAAI,OAAOA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAOA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9D,MAAMQ,OAAO,GAAGR,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC;MAClCxE,MAAM,CAACyI,IAAI,CAACzD,OAAO,CAAC,CAAC/F,OAAO,CAACI,GAAG,IAAI;QAClCue,GAAG,CAACve,GAAG,CAAC,GAAG2F,OAAO,CAAC3F,GAAG,CAAC;MACzB,CAAC,CAAC;IACJ;IACA,OAAOue,GAAG;EACZ,CAAC;EACDlT,aAAa,EAAE;IACbiL,WAAW,EAAE,IAAI;IACjBD,MAAM,EAAEvU,KAAK,IAAIA,KAAK;IACtB+D,MAAM,EAAE,IAAI;IACZqK,MAAM,EAAE,IAAI;IACZyG,eAAe,EAAE,GAAG;IACpBE,cAAc,EAAE,GAAG;IACnBC,aAAa,EAAE,KAAK;IACpBE,aAAa,EAAE,GAAG;IAClBE,uBAAuB,EAAE,GAAG;IAC5BC,WAAW,EAAE,IAAI;IACjB5G,eAAe,EAAE;EACnB,CAAC;EACDkK,mBAAmB,EAAE;AACvB,CAAC,CAAC;AACF,MAAMgE,gBAAgB,GAAG9Y,OAAO,IAAI;EAClC,IAAI9G,QAAQ,CAAC8G,OAAO,CAAC6B,EAAE,CAAC,EAAE7B,OAAO,CAAC6B,EAAE,GAAG,CAAC7B,OAAO,CAAC6B,EAAE,CAAC;EACnD,IAAI3I,QAAQ,CAAC8G,OAAO,CAAC0J,WAAW,CAAC,EAAE1J,OAAO,CAAC0J,WAAW,GAAG,CAAC1J,OAAO,CAAC0J,WAAW,CAAC;EAC9E,IAAIxQ,QAAQ,CAAC8G,OAAO,CAAC4L,UAAU,CAAC,EAAE5L,OAAO,CAAC4L,UAAU,GAAG,CAAC5L,OAAO,CAAC4L,UAAU,CAAC;EAC3E,IAAI5L,OAAO,CAACiN,aAAa,EAAE3S,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE;IAClD0F,OAAO,CAACiN,aAAa,GAAGjN,OAAO,CAACiN,aAAa,CAACpR,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClE;EACA,IAAI,OAAOmE,OAAO,CAAC+Y,aAAa,KAAK,SAAS,EAAE/Y,OAAO,CAACwY,SAAS,GAAGxY,OAAO,CAAC+Y,aAAa;EACzF,OAAO/Y,OAAO;AAChB,CAAC;AAED,MAAMgZ,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AACrB,MAAMC,mBAAmB,GAAGC,IAAI,IAAI;EAClC,MAAMC,IAAI,GAAGne,MAAM,CAACoe,mBAAmB,CAACpe,MAAM,CAACqe,cAAc,CAACH,IAAI,CAAC,CAAC;EACpEC,IAAI,CAAClf,OAAO,CAAC4b,GAAG,IAAI;IAClB,IAAI,OAAOqD,IAAI,CAACrD,GAAG,CAAC,KAAK,UAAU,EAAE;MACnCqD,IAAI,CAACrD,GAAG,CAAC,GAAGqD,IAAI,CAACrD,GAAG,CAAC,CAACmC,IAAI,CAACkB,IAAI,CAAC;IAClC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,MAAMI,IAAI,SAASzY,YAAY,CAAC;EAC9B9D,WAAWA,CAACiD,OAAO,GAAG,CAAC,CAAC,EAAEgX,QAAQ,EAAE;IAClC,KAAK,CAAC,CAAC;IACP,IAAI,CAAChX,OAAO,GAAG8Y,gBAAgB,CAAC9Y,OAAO,CAAC;IACxC,IAAI,CAACqF,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAAClF,MAAM,GAAGS,UAAU;IACxB,IAAI,CAAC2Y,OAAO,GAAG;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDP,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAIjC,QAAQ,IAAI,CAAC,IAAI,CAACyC,aAAa,IAAI,CAACzZ,OAAO,CAAC0Z,OAAO,EAAE;MACvD,IAAI,CAAC,IAAI,CAAC1Z,OAAO,CAACwY,SAAS,EAAE;QAC3B,IAAI,CAACvY,IAAI,CAACD,OAAO,EAAEgX,QAAQ,CAAC;QAC5B,OAAO,IAAI;MACb;MACAe,UAAU,CAAC,MAAM;QACf,IAAI,CAAC9X,IAAI,CAACD,OAAO,EAAEgX,QAAQ,CAAC;MAC9B,CAAC,EAAE,CAAC,CAAC;IACP;EACF;EACA/W,IAAIA,CAACD,OAAO,GAAG,CAAC,CAAC,EAAEgX,QAAQ,EAAE;IAC3B,IAAI,CAAC2C,cAAc,GAAG,IAAI;IAC1B,IAAI,OAAO3Z,OAAO,KAAK,UAAU,EAAE;MACjCgX,QAAQ,GAAGhX,OAAO;MAClBA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,IAAIA,OAAO,CAAC8B,SAAS,IAAI,IAAI,IAAI9B,OAAO,CAAC6B,EAAE,EAAE;MAC3C,IAAI3I,QAAQ,CAAC8G,OAAO,CAAC6B,EAAE,CAAC,EAAE;QACxB7B,OAAO,CAAC8B,SAAS,GAAG9B,OAAO,CAAC6B,EAAE;MAChC,CAAC,MAAM,IAAI7B,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;QAChD0F,OAAO,CAAC8B,SAAS,GAAG9B,OAAO,CAAC6B,EAAE,CAAC,CAAC,CAAC;MACnC;IACF;IACA,MAAM+X,OAAO,GAAGrc,GAAG,CAAC,CAAC;IACrB,IAAI,CAACyC,OAAO,GAAG;MACb,GAAG4Z,OAAO;MACV,GAAG,IAAI,CAAC5Z,OAAO;MACf,GAAG8Y,gBAAgB,CAAC9Y,OAAO;IAC7B,CAAC;IACD,IAAI,CAACA,OAAO,CAAC0F,aAAa,GAAG;MAC3B,GAAGkU,OAAO,CAAClU,aAAa;MACxB,GAAG,IAAI,CAAC1F,OAAO,CAAC0F;IAClB,CAAC;IACD,IAAI1F,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,EAAE;MACtC,IAAI,CAACyE,OAAO,CAACiG,uBAAuB,GAAGjG,OAAO,CAAC/B,YAAY;IAC7D;IACA,IAAI+B,OAAO,CAAChC,WAAW,KAAKzC,SAAS,EAAE;MACrC,IAAI,CAACyE,OAAO,CAACkG,sBAAsB,GAAGlG,OAAO,CAAChC,WAAW;IAC3D;IACA,MAAM6b,mBAAmB,GAAGC,aAAa,IAAI;MAC3C,IAAI,CAACA,aAAa,EAAE,OAAO,IAAI;MAC/B,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE,OAAO,IAAIA,aAAa,CAAC,CAAC;MACnE,OAAOA,aAAa;IACtB,CAAC;IACD,IAAI,CAAC,IAAI,CAAC9Z,OAAO,CAAC0Z,OAAO,EAAE;MACzB,IAAI,IAAI,CAACH,OAAO,CAACpZ,MAAM,EAAE;QACvBS,UAAU,CAACX,IAAI,CAAC4Z,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAACpZ,MAAM,CAAC,EAAE,IAAI,CAACH,OAAO,CAAC;MACzE,CAAC,MAAM;QACLY,UAAU,CAACX,IAAI,CAAC,IAAI,EAAE,IAAI,CAACD,OAAO,CAAC;MACrC;MACA,IAAIiV,SAAS;MACb,IAAI,IAAI,CAACsE,OAAO,CAACtE,SAAS,EAAE;QAC1BA,SAAS,GAAG,IAAI,CAACsE,OAAO,CAACtE,SAAS;MACpC,CAAC,MAAM;QACLA,SAAS,GAAGL,SAAS;MACvB;MACA,MAAMmF,EAAE,GAAG,IAAI/M,YAAY,CAAC,IAAI,CAAChN,OAAO,CAAC;MACzC,IAAI,CAACuW,KAAK,GAAG,IAAI3U,aAAa,CAAC,IAAI,CAAC5B,OAAO,CAAC2C,SAAS,EAAE,IAAI,CAAC3C,OAAO,CAAC;MACpE,MAAMjG,CAAC,GAAG,IAAI,CAACsL,QAAQ;MACvBtL,CAAC,CAACoG,MAAM,GAAGS,UAAU;MACrB7G,CAAC,CAAC6S,aAAa,GAAG,IAAI,CAAC2J,KAAK;MAC5Bxc,CAAC,CAACyP,aAAa,GAAGuQ,EAAE;MACpBhgB,CAAC,CAACiO,cAAc,GAAG,IAAImH,cAAc,CAAC4K,EAAE,EAAE;QACxC1J,OAAO,EAAE,IAAI,CAACrQ,OAAO,CAACsI,eAAe;QACrCoQ,oBAAoB,EAAE,IAAI,CAAC1Y,OAAO,CAAC0Y;MACrC,CAAC,CAAC;MACF,MAAMsB,yBAAyB,GAAG,IAAI,CAACha,OAAO,CAAC0F,aAAa,CAACgL,MAAM,IAAI,IAAI,CAAC1Q,OAAO,CAAC0F,aAAa,CAACgL,MAAM,KAAKkJ,OAAO,CAAClU,aAAa,CAACgL,MAAM;MACzI,IAAIsJ,yBAAyB,EAAE;QAC7B,IAAI,CAAC7Z,MAAM,CAACG,SAAS,CAAC,4IAA4I,CAAC;MACrK;MACA,IAAI2U,SAAS,KAAK,CAAC,IAAI,CAACjV,OAAO,CAAC0F,aAAa,CAACgL,MAAM,IAAI,IAAI,CAAC1Q,OAAO,CAAC0F,aAAa,CAACgL,MAAM,KAAKkJ,OAAO,CAAClU,aAAa,CAACgL,MAAM,CAAC,EAAE;QAC3H3W,CAAC,CAACkb,SAAS,GAAG4E,mBAAmB,CAAC5E,SAAS,CAAC;QAC5C,IAAIlb,CAAC,CAACkb,SAAS,CAAChV,IAAI,EAAElG,CAAC,CAACkb,SAAS,CAAChV,IAAI,CAAClG,CAAC,EAAE,IAAI,CAACiG,OAAO,CAAC;QACvD,IAAI,CAACA,OAAO,CAAC0F,aAAa,CAACgL,MAAM,GAAG3W,CAAC,CAACkb,SAAS,CAACvE,MAAM,CAACsH,IAAI,CAACje,CAAC,CAACkb,SAAS,CAAC;MAC1E;MACAlb,CAAC,CAACqM,YAAY,GAAG,IAAIqK,YAAY,CAAC,IAAI,CAACzQ,OAAO,CAAC;MAC/CjG,CAAC,CAACgS,KAAK,GAAG;QACRC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB,CAACgM,IAAI,CAAC,IAAI;MACvD,CAAC;MACDje,CAAC,CAACmQ,gBAAgB,GAAG,IAAImM,SAAS,CAACwD,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAACjD,OAAO,CAAC,EAAEvc,CAAC,CAAC6S,aAAa,EAAE7S,CAAC,EAAE,IAAI,CAACiG,OAAO,CAAC;MAC/GjG,CAAC,CAACmQ,gBAAgB,CAACnJ,EAAE,CAAC,GAAG,EAAE,CAACG,KAAK,EAAE,GAAG1B,IAAI,KAAK;QAC7C,IAAI,CAAC6B,IAAI,CAACH,KAAK,EAAE,GAAG1B,IAAI,CAAC;MAC3B,CAAC,CAAC;MACF,IAAI,IAAI,CAAC+Z,OAAO,CAACU,gBAAgB,EAAE;QACjClgB,CAAC,CAACkgB,gBAAgB,GAAGJ,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAACU,gBAAgB,CAAC;QACvE,IAAIlgB,CAAC,CAACkgB,gBAAgB,CAACha,IAAI,EAAElG,CAAC,CAACkgB,gBAAgB,CAACha,IAAI,CAAClG,CAAC,EAAE,IAAI,CAACiG,OAAO,CAACka,SAAS,EAAE,IAAI,CAACla,OAAO,CAAC;MAC/F;MACA,IAAI,IAAI,CAACuZ,OAAO,CAAC7R,UAAU,EAAE;QAC3B3N,CAAC,CAAC2N,UAAU,GAAGmS,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAAC7R,UAAU,CAAC;QAC3D,IAAI3N,CAAC,CAAC2N,UAAU,CAACzH,IAAI,EAAElG,CAAC,CAAC2N,UAAU,CAACzH,IAAI,CAAC,IAAI,CAAC;MAChD;MACA,IAAI,CAACkE,UAAU,GAAG,IAAIiB,UAAU,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACrF,OAAO,CAAC;MAC7D,IAAI,CAACmE,UAAU,CAACpD,EAAE,CAAC,GAAG,EAAE,CAACG,KAAK,EAAE,GAAG1B,IAAI,KAAK;QAC1C,IAAI,CAAC6B,IAAI,CAACH,KAAK,EAAE,GAAG1B,IAAI,CAAC;MAC3B,CAAC,CAAC;MACF,IAAI,CAAC+Z,OAAO,CAACC,QAAQ,CAACvf,OAAO,CAACC,CAAC,IAAI;QACjC,IAAIA,CAAC,CAAC+F,IAAI,EAAE/F,CAAC,CAAC+F,IAAI,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC;IACJ;IACA,IAAI,CAACyQ,MAAM,GAAG,IAAI,CAAC1Q,OAAO,CAAC0F,aAAa,CAACgL,MAAM;IAC/C,IAAI,CAACsG,QAAQ,EAAEA,QAAQ,GAAGgC,IAAI;IAC9B,IAAI,IAAI,CAAChZ,OAAO,CAAC0J,WAAW,IAAI,CAAC,IAAI,CAACrE,QAAQ,CAAC4U,gBAAgB,IAAI,CAAC,IAAI,CAACja,OAAO,CAACqC,GAAG,EAAE;MACpF,MAAMyJ,KAAK,GAAG,IAAI,CAACzG,QAAQ,CAACmE,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAACzJ,OAAO,CAAC0J,WAAW,CAAC;MACpF,IAAIoC,KAAK,CAAC/Q,MAAM,GAAG,CAAC,IAAI+Q,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC9L,OAAO,CAACqC,GAAG,GAAGyJ,KAAK,CAAC,CAAC,CAAC;IACzE;IACA,IAAI,CAAC,IAAI,CAACzG,QAAQ,CAAC4U,gBAAgB,IAAI,CAAC,IAAI,CAACja,OAAO,CAACqC,GAAG,EAAE;MACxD,IAAI,CAAClC,MAAM,CAACT,IAAI,CAAC,yDAAyD,CAAC;IAC7E;IACA,MAAMya,QAAQ,GAAG,CAAC,aAAa,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,CAAC;IAC/FA,QAAQ,CAAClgB,OAAO,CAAC0d,MAAM,IAAI;MACzB,IAAI,CAACA,MAAM,CAAC,GAAG,CAAC,GAAGnY,IAAI,KAAK,IAAI,CAAC+W,KAAK,CAACoB,MAAM,CAAC,CAAC,GAAGnY,IAAI,CAAC;IACzD,CAAC,CAAC;IACF,MAAM4a,eAAe,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,mBAAmB,EAAE,sBAAsB,CAAC;IACpGA,eAAe,CAACngB,OAAO,CAAC0d,MAAM,IAAI;MAChC,IAAI,CAACA,MAAM,CAAC,GAAG,CAAC,GAAGnY,IAAI,KAAK;QAC1B,IAAI,CAAC+W,KAAK,CAACoB,MAAM,CAAC,CAAC,GAAGnY,IAAI,CAAC;QAC3B,OAAO,IAAI;MACb,CAAC;IACH,CAAC,CAAC;IACF,MAAM6a,QAAQ,GAAGjhB,KAAK,CAAC,CAAC;IACxB,MAAMuU,IAAI,GAAGA,CAAA,KAAM;MACjB,MAAM2M,MAAM,GAAGA,CAACzK,GAAG,EAAE7V,CAAC,KAAK;QACzB,IAAI,CAAC2f,cAAc,GAAG,KAAK;QAC3B,IAAI,IAAI,CAACF,aAAa,IAAI,CAAC,IAAI,CAACc,oBAAoB,EAAE,IAAI,CAACpa,MAAM,CAACT,IAAI,CAAC,uEAAuE,CAAC;QAC/I,IAAI,CAAC+Z,aAAa,GAAG,IAAI;QACzB,IAAI,CAAC,IAAI,CAACzZ,OAAO,CAAC0Z,OAAO,EAAE,IAAI,CAACvZ,MAAM,CAACZ,GAAG,CAAC,aAAa,EAAE,IAAI,CAACS,OAAO,CAAC;QACvE,IAAI,CAACqB,IAAI,CAAC,aAAa,EAAE,IAAI,CAACrB,OAAO,CAAC;QACtCqa,QAAQ,CAAC5gB,OAAO,CAACO,CAAC,CAAC;QACnBgd,QAAQ,CAACnH,GAAG,EAAE7V,CAAC,CAAC;MAClB,CAAC;MACD,IAAI,IAAI,CAAC+c,SAAS,IAAI,CAAC,IAAI,CAAC0C,aAAa,EAAE,OAAOa,MAAM,CAAC,IAAI,EAAE,IAAI,CAACtgB,CAAC,CAACge,IAAI,CAAC,IAAI,CAAC,CAAC;MACjF,IAAI,CAAC1S,cAAc,CAAC,IAAI,CAACtF,OAAO,CAACqC,GAAG,EAAEiY,MAAM,CAAC;IAC/C,CAAC;IACD,IAAI,IAAI,CAACta,OAAO,CAAC2C,SAAS,IAAI,CAAC,IAAI,CAAC3C,OAAO,CAACwY,SAAS,EAAE;MACrD7K,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLoK,UAAU,CAACpK,IAAI,EAAE,CAAC,CAAC;IACrB;IACA,OAAO0M,QAAQ;EACjB;EACAG,aAAaA,CAACjV,QAAQ,EAAEyR,QAAQ,GAAGgC,IAAI,EAAE;IACvC,IAAIyB,YAAY,GAAGzD,QAAQ;IAC3B,MAAM/P,OAAO,GAAG/N,QAAQ,CAACqM,QAAQ,CAAC,GAAGA,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC7D,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAEkV,YAAY,GAAGlV,QAAQ;IAC3D,IAAI,CAAC,IAAI,CAACvF,OAAO,CAAC2C,SAAS,IAAI,IAAI,CAAC3C,OAAO,CAAC2Y,uBAAuB,EAAE;MACnE,IAAI1R,OAAO,EAAEH,WAAW,CAAC,CAAC,KAAK,QAAQ,KAAK,CAAC,IAAI,CAAC9G,OAAO,CAACyY,OAAO,IAAI,IAAI,CAACzY,OAAO,CAACyY,OAAO,CAAC1d,MAAM,KAAK,CAAC,CAAC,EAAE,OAAO0f,YAAY,CAAC,CAAC;MAC9H,MAAMxD,MAAM,GAAG,EAAE;MACjB,MAAMyD,MAAM,GAAGrY,GAAG,IAAI;QACpB,IAAI,CAACA,GAAG,EAAE;QACV,IAAIA,GAAG,KAAK,QAAQ,EAAE;QACtB,MAAMiH,IAAI,GAAG,IAAI,CAACjE,QAAQ,CAACmE,aAAa,CAACI,kBAAkB,CAACvH,GAAG,CAAC;QAChEiH,IAAI,CAACrP,OAAO,CAAC6P,CAAC,IAAI;UAChB,IAAIA,CAAC,KAAK,QAAQ,EAAE;UACpB,IAAImN,MAAM,CAAC3c,OAAO,CAACwP,CAAC,CAAC,GAAG,CAAC,EAAEmN,MAAM,CAACnb,IAAI,CAACgO,CAAC,CAAC;QAC3C,CAAC,CAAC;MACJ,CAAC;MACD,IAAI,CAAC7C,OAAO,EAAE;QACZ,MAAMiH,SAAS,GAAG,IAAI,CAAC7I,QAAQ,CAACmE,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAACzJ,OAAO,CAAC0J,WAAW,CAAC;QACxFwE,SAAS,CAACjU,OAAO,CAAC6P,CAAC,IAAI4Q,MAAM,CAAC5Q,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACL4Q,MAAM,CAACzT,OAAO,CAAC;MACjB;MACA,IAAI,CAACjH,OAAO,CAACyY,OAAO,EAAExe,OAAO,GAAG6P,CAAC,IAAI4Q,MAAM,CAAC5Q,CAAC,CAAC,CAAC;MAC/C,IAAI,CAACzE,QAAQ,CAAC6E,gBAAgB,CAACyD,IAAI,CAACsJ,MAAM,EAAE,IAAI,CAACjX,OAAO,CAAC6B,EAAE,EAAErG,CAAC,IAAI;QAChE,IAAI,CAACA,CAAC,IAAI,CAAC,IAAI,CAACmf,gBAAgB,IAAI,IAAI,CAACpV,QAAQ,EAAE,IAAI,CAACqV,mBAAmB,CAAC,IAAI,CAACrV,QAAQ,CAAC;QAC1FkV,YAAY,CAACjf,CAAC,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLif,YAAY,CAAC,IAAI,CAAC;IACpB;EACF;EACAI,eAAeA,CAACvR,IAAI,EAAEzH,EAAE,EAAEmV,QAAQ,EAAE;IAClC,MAAMqD,QAAQ,GAAGjhB,KAAK,CAAC,CAAC;IACxB,IAAI,OAAOkQ,IAAI,KAAK,UAAU,EAAE;MAC9B0N,QAAQ,GAAG1N,IAAI;MACfA,IAAI,GAAG/N,SAAS;IAClB;IACA,IAAI,OAAOsG,EAAE,KAAK,UAAU,EAAE;MAC5BmV,QAAQ,GAAGnV,EAAE;MACbA,EAAE,GAAGtG,SAAS;IAChB;IACA,IAAI,CAAC+N,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACyN,SAAS;IAChC,IAAI,CAAClV,EAAE,EAAEA,EAAE,GAAG,IAAI,CAAC7B,OAAO,CAAC6B,EAAE;IAC7B,IAAI,CAACmV,QAAQ,EAAEA,QAAQ,GAAGgC,IAAI;IAC9B,IAAI,CAAC3T,QAAQ,CAAC6E,gBAAgB,CAACmN,MAAM,CAAC/N,IAAI,EAAEzH,EAAE,EAAEgO,GAAG,IAAI;MACrDwK,QAAQ,CAAC5gB,OAAO,CAAC,CAAC;MAClBud,QAAQ,CAACnH,GAAG,CAAC;IACf,CAAC,CAAC;IACF,OAAOwK,QAAQ;EACjB;EACAS,GAAGA,CAAC9W,MAAM,EAAE;IACV,IAAI,CAACA,MAAM,EAAE,MAAM,IAAI+W,KAAK,CAAC,+FAA+F,CAAC;IAC7H,IAAI,CAAC/W,MAAM,CAAC1E,IAAI,EAAE,MAAM,IAAIyb,KAAK,CAAC,0FAA0F,CAAC;IAC7H,IAAI/W,MAAM,CAAC1E,IAAI,KAAK,SAAS,EAAE;MAC7B,IAAI,CAACia,OAAO,CAACjD,OAAO,GAAGtS,MAAM;IAC/B;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,QAAQ,IAAI0E,MAAM,CAACzE,GAAG,IAAIyE,MAAM,CAACtE,IAAI,IAAIsE,MAAM,CAACrE,KAAK,EAAE;MACzE,IAAI,CAAC4Z,OAAO,CAACpZ,MAAM,GAAG6D,MAAM;IAC9B;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,kBAAkB,EAAE;MACtC,IAAI,CAACia,OAAO,CAACU,gBAAgB,GAAGjW,MAAM;IACxC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,YAAY,EAAE;MAChC,IAAI,CAACia,OAAO,CAAC7R,UAAU,GAAG1D,MAAM;IAClC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,eAAe,EAAE;MACnCuE,aAAa,CAACE,gBAAgB,CAACC,MAAM,CAAC;IACxC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,WAAW,EAAE;MAC/B,IAAI,CAACia,OAAO,CAACtE,SAAS,GAAGjR,MAAM;IACjC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,UAAU,EAAE;MAC9B,IAAI,CAACia,OAAO,CAACC,QAAQ,CAAC1d,IAAI,CAACkI,MAAM,CAAC;IACpC;IACA,OAAO,IAAI;EACb;EACA4W,mBAAmBA,CAAC9Q,CAAC,EAAE;IACrB,IAAI,CAACA,CAAC,IAAI,CAAC,IAAI,CAACiN,SAAS,EAAE;IAC3B,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAACzc,OAAO,CAACwP,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IACvC,KAAK,IAAIkR,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,IAAI,CAACjE,SAAS,CAAChc,MAAM,EAAEigB,EAAE,EAAE,EAAE;MACjD,MAAMC,SAAS,GAAG,IAAI,CAAClE,SAAS,CAACiE,EAAE,CAAC;MACpC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC1gB,OAAO,CAAC2gB,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;MAC/C,IAAI,IAAI,CAAC1E,KAAK,CAAChT,2BAA2B,CAAC0X,SAAS,CAAC,EAAE;QACrD,IAAI,CAACN,gBAAgB,GAAGM,SAAS;QACjC;MACF;IACF;IACA,IAAI,CAAC,IAAI,CAACN,gBAAgB,IAAI,IAAI,CAAC5D,SAAS,CAACzc,OAAO,CAACwP,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAACyM,KAAK,CAAChT,2BAA2B,CAACuG,CAAC,CAAC,EAAE;MACxG,IAAI,CAAC6Q,gBAAgB,GAAG7Q,CAAC;MACzB,IAAI,CAACiN,SAAS,CAACmE,OAAO,CAACpR,CAAC,CAAC;IAC3B;EACF;EACAxE,cAAcA,CAACjD,GAAG,EAAE2U,QAAQ,EAAE;IAC5B,IAAI,CAACmE,oBAAoB,GAAG9Y,GAAG;IAC/B,MAAMgY,QAAQ,GAAGjhB,KAAK,CAAC,CAAC;IACxB,IAAI,CAACiI,IAAI,CAAC,kBAAkB,EAAEgB,GAAG,CAAC;IAClC,MAAM+Y,WAAW,GAAGtR,CAAC,IAAI;MACvB,IAAI,CAACvE,QAAQ,GAAGuE,CAAC;MACjB,IAAI,CAACiN,SAAS,GAAG,IAAI,CAAC1R,QAAQ,CAACmE,aAAa,CAACI,kBAAkB,CAACE,CAAC,CAAC;MAClE,IAAI,CAAC6Q,gBAAgB,GAAGpf,SAAS;MACjC,IAAI,CAACqf,mBAAmB,CAAC9Q,CAAC,CAAC;IAC7B,CAAC;IACD,MAAM0N,IAAI,GAAGA,CAAC3H,GAAG,EAAE/F,CAAC,KAAK;MACvB,IAAIA,CAAC,EAAE;QACL,IAAI,IAAI,CAACqR,oBAAoB,KAAK9Y,GAAG,EAAE;UACrC+Y,WAAW,CAACtR,CAAC,CAAC;UACd,IAAI,CAAC3F,UAAU,CAACmB,cAAc,CAACwE,CAAC,CAAC;UACjC,IAAI,CAACqR,oBAAoB,GAAG5f,SAAS;UACrC,IAAI,CAAC8F,IAAI,CAAC,iBAAiB,EAAEyI,CAAC,CAAC;UAC/B,IAAI,CAAC3J,MAAM,CAACZ,GAAG,CAAC,iBAAiB,EAAEuK,CAAC,CAAC;QACvC;MACF,CAAC,MAAM;QACL,IAAI,CAACqR,oBAAoB,GAAG5f,SAAS;MACvC;MACA8e,QAAQ,CAAC5gB,OAAO,CAAC,CAAC,GAAG+F,IAAI,KAAK,IAAI,CAACxF,CAAC,CAAC,GAAGwF,IAAI,CAAC,CAAC;MAC9C,IAAIwX,QAAQ,EAAEA,QAAQ,CAACnH,GAAG,EAAE,CAAC,GAAGrQ,IAAI,KAAK,IAAI,CAACxF,CAAC,CAAC,GAAGwF,IAAI,CAAC,CAAC;IAC3D,CAAC;IACD,MAAM6b,MAAM,GAAG/R,IAAI,IAAI;MACrB,IAAI,CAACjH,GAAG,IAAI,CAACiH,IAAI,IAAI,IAAI,CAACjE,QAAQ,CAAC4U,gBAAgB,EAAE3Q,IAAI,GAAG,EAAE;MAC9D,MAAMgS,EAAE,GAAGpiB,QAAQ,CAACoQ,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC;MAClD,MAAMQ,CAAC,GAAG,IAAI,CAACyM,KAAK,CAAChT,2BAA2B,CAAC+X,EAAE,CAAC,GAAGA,EAAE,GAAG,IAAI,CAACjW,QAAQ,CAACmE,aAAa,CAACqE,qBAAqB,CAAC3U,QAAQ,CAACoQ,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAGA,IAAI,CAAC;MAC7I,IAAIQ,CAAC,EAAE;QACL,IAAI,CAAC,IAAI,CAACvE,QAAQ,EAAE;UAClB6V,WAAW,CAACtR,CAAC,CAAC;QAChB;QACA,IAAI,CAAC,IAAI,CAAC3F,UAAU,CAACoB,QAAQ,EAAE,IAAI,CAACpB,UAAU,CAACmB,cAAc,CAACwE,CAAC,CAAC;QAChE,IAAI,CAACzE,QAAQ,CAAC4U,gBAAgB,EAAEsB,iBAAiB,GAAGzR,CAAC,CAAC;MACxD;MACA,IAAI,CAAC0Q,aAAa,CAAC1Q,CAAC,EAAE+F,GAAG,IAAI;QAC3B2H,IAAI,CAAC3H,GAAG,EAAE/F,CAAC,CAAC;MACd,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAACzH,GAAG,IAAI,IAAI,CAACgD,QAAQ,CAAC4U,gBAAgB,IAAI,CAAC,IAAI,CAAC5U,QAAQ,CAAC4U,gBAAgB,CAACuB,KAAK,EAAE;MACnFH,MAAM,CAAC,IAAI,CAAChW,QAAQ,CAAC4U,gBAAgB,CAACwB,MAAM,CAAC,CAAC,CAAC;IACjD,CAAC,MAAM,IAAI,CAACpZ,GAAG,IAAI,IAAI,CAACgD,QAAQ,CAAC4U,gBAAgB,IAAI,IAAI,CAAC5U,QAAQ,CAAC4U,gBAAgB,CAACuB,KAAK,EAAE;MACzF,IAAI,IAAI,CAACnW,QAAQ,CAAC4U,gBAAgB,CAACwB,MAAM,CAAC1gB,MAAM,KAAK,CAAC,EAAE;QACtD,IAAI,CAACsK,QAAQ,CAAC4U,gBAAgB,CAACwB,MAAM,CAAC,CAAC,CAACxD,IAAI,CAACoD,MAAM,CAAC;MACtD,CAAC,MAAM;QACL,IAAI,CAAChW,QAAQ,CAAC4U,gBAAgB,CAACwB,MAAM,CAACJ,MAAM,CAAC;MAC/C;IACF,CAAC,MAAM;MACLA,MAAM,CAAChZ,GAAG,CAAC;IACb;IACA,OAAOgY,QAAQ;EACjB;EACAqB,SAASA,CAACrZ,GAAG,EAAER,EAAE,EAAE8Z,SAAS,EAAE;IAC5B,MAAMC,MAAM,GAAGA,CAACvhB,GAAG,EAAE4K,IAAI,EAAE,GAAGgP,IAAI,KAAK;MACrC,IAAIxO,CAAC;MACL,IAAI,OAAOR,IAAI,KAAK,QAAQ,EAAE;QAC5BQ,CAAC,GAAG,IAAI,CAACzF,OAAO,CAACyG,gCAAgC,CAAC,CAACpM,GAAG,EAAE4K,IAAI,CAAC,CAACpJ,MAAM,CAACoY,IAAI,CAAC,CAAC;MAC7E,CAAC,MAAM;QACLxO,CAAC,GAAG;UACF,GAAGR;QACL,CAAC;MACH;MACAQ,CAAC,CAACpD,GAAG,GAAGoD,CAAC,CAACpD,GAAG,IAAIuZ,MAAM,CAACvZ,GAAG;MAC3BoD,CAAC,CAAC6D,IAAI,GAAG7D,CAAC,CAAC6D,IAAI,IAAIsS,MAAM,CAACtS,IAAI;MAC9B7D,CAAC,CAAC5D,EAAE,GAAG4D,CAAC,CAAC5D,EAAE,IAAI+Z,MAAM,CAAC/Z,EAAE;MACxB,IAAI4D,CAAC,CAACkW,SAAS,KAAK,EAAE,EAAElW,CAAC,CAACkW,SAAS,GAAGlW,CAAC,CAACkW,SAAS,IAAIA,SAAS,IAAIC,MAAM,CAACD,SAAS;MAClF,MAAM1d,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY,IAAI,GAAG;MACrD,IAAI4d,SAAS;MACb,IAAIpW,CAAC,CAACkW,SAAS,IAAIpa,KAAK,CAACe,OAAO,CAACjI,GAAG,CAAC,EAAE;QACrCwhB,SAAS,GAAGxhB,GAAG,CAACiE,GAAG,CAAClD,CAAC,IAAI;UACvB,IAAI,OAAOA,CAAC,KAAK,UAAU,EAAEA,CAAC,GAAG2J,gBAAgB,CAAC3J,CAAC,EAAE;YACnD,GAAG,IAAI,CAAC4E,OAAO;YACf,GAAGiF;UACL,CAAC,CAAC;UACF,OAAO,GAAGQ,CAAC,CAACkW,SAAS,GAAG1d,YAAY,GAAG7C,CAAC,EAAE;QAC5C,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAI,OAAOf,GAAG,KAAK,UAAU,EAAEA,GAAG,GAAG0K,gBAAgB,CAAC1K,GAAG,EAAE;UACzD,GAAG,IAAI,CAAC2F,OAAO;UACf,GAAGiF;QACL,CAAC,CAAC;QACF4W,SAAS,GAAGpW,CAAC,CAACkW,SAAS,GAAG,GAAGlW,CAAC,CAACkW,SAAS,GAAG1d,YAAY,GAAG5D,GAAG,EAAE,GAAGA,GAAG;MACvE;MACA,OAAO,IAAI,CAACL,CAAC,CAAC6hB,SAAS,EAAEpW,CAAC,CAAC;IAC7B,CAAC;IACD,IAAIvM,QAAQ,CAACmJ,GAAG,CAAC,EAAE;MACjBuZ,MAAM,CAACvZ,GAAG,GAAGA,GAAG;IAClB,CAAC,MAAM;MACLuZ,MAAM,CAACtS,IAAI,GAAGjH,GAAG;IACnB;IACAuZ,MAAM,CAAC/Z,EAAE,GAAGA,EAAE;IACd+Z,MAAM,CAACD,SAAS,GAAGA,SAAS;IAC5B,OAAOC,MAAM;EACf;EACA5hB,CAACA,CAAC,GAAGwF,IAAI,EAAE;IACT,OAAO,IAAI,CAAC2E,UAAU,EAAEoC,SAAS,CAAC,GAAG/G,IAAI,CAAC;EAC5C;EACAgG,MAAMA,CAAC,GAAGhG,IAAI,EAAE;IACd,OAAO,IAAI,CAAC2E,UAAU,EAAEqB,MAAM,CAAC,GAAGhG,IAAI,CAAC;EACzC;EACAsc,mBAAmBA,CAACja,EAAE,EAAE;IACtB,IAAI,CAAC7B,OAAO,CAAC8B,SAAS,GAAGD,EAAE;EAC7B;EACAmK,kBAAkBA,CAACnK,EAAE,EAAE7B,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,IAAI,CAAC,IAAI,CAACyZ,aAAa,EAAE;MACvB,IAAI,CAACtZ,MAAM,CAACT,IAAI,CAAC,iDAAiD,EAAE,IAAI,CAACqX,SAAS,CAAC;MACnF,OAAO,KAAK;IACd;IACA,IAAI,CAAC,IAAI,CAACA,SAAS,IAAI,CAAC,IAAI,CAACA,SAAS,CAAChc,MAAM,EAAE;MAC7C,IAAI,CAACoF,MAAM,CAACT,IAAI,CAAC,4DAA4D,EAAE,IAAI,CAACqX,SAAS,CAAC;MAC9F,OAAO,KAAK;IACd;IACA,MAAM1U,GAAG,GAAGrC,OAAO,CAACqC,GAAG,IAAI,IAAI,CAACsY,gBAAgB,IAAI,IAAI,CAAC5D,SAAS,CAAC,CAAC,CAAC;IACrE,MAAMrN,WAAW,GAAG,IAAI,CAAC1J,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC0J,WAAW,GAAG,KAAK;IACnE,MAAMqS,OAAO,GAAG,IAAI,CAAChF,SAAS,CAAC,IAAI,CAACA,SAAS,CAAChc,MAAM,GAAG,CAAC,CAAC;IACzD,IAAIsH,GAAG,CAACyE,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE,OAAO,IAAI;IAC/C,MAAMkV,cAAc,GAAGA,CAAClS,CAAC,EAAEtG,CAAC,KAAK;MAC/B,MAAMyY,SAAS,GAAG,IAAI,CAAC5W,QAAQ,CAAC6E,gBAAgB,CAACzF,KAAK,CAAC,GAAGqF,CAAC,IAAItG,CAAC,EAAE,CAAC;MACnE,OAAOyY,SAAS,KAAK,CAAC,CAAC,IAAIA,SAAS,KAAK,CAAC,IAAIA,SAAS,KAAK,CAAC;IAC/D,CAAC;IACD,IAAIjc,OAAO,CAACkc,QAAQ,EAAE;MACpB,MAAMC,SAAS,GAAGnc,OAAO,CAACkc,QAAQ,CAAC,IAAI,EAAEF,cAAc,CAAC;MACxD,IAAIG,SAAS,KAAK5gB,SAAS,EAAE,OAAO4gB,SAAS;IAC/C;IACA,IAAI,IAAI,CAAC/Y,iBAAiB,CAACf,GAAG,EAAER,EAAE,CAAC,EAAE,OAAO,IAAI;IAChD,IAAI,CAAC,IAAI,CAACwD,QAAQ,CAAC6E,gBAAgB,CAACoM,OAAO,IAAI,IAAI,CAACtW,OAAO,CAAC2C,SAAS,IAAI,CAAC,IAAI,CAAC3C,OAAO,CAAC2Y,uBAAuB,EAAE,OAAO,IAAI;IAC3H,IAAIqD,cAAc,CAAC3Z,GAAG,EAAER,EAAE,CAAC,KAAK,CAAC6H,WAAW,IAAIsS,cAAc,CAACD,OAAO,EAAEla,EAAE,CAAC,CAAC,EAAE,OAAO,IAAI;IACzF,OAAO,KAAK;EACd;EACAua,cAAcA,CAACva,EAAE,EAAEmV,QAAQ,EAAE;IAC3B,MAAMqD,QAAQ,GAAGjhB,KAAK,CAAC,CAAC;IACxB,IAAI,CAAC,IAAI,CAAC4G,OAAO,CAAC6B,EAAE,EAAE;MACpB,IAAImV,QAAQ,EAAEA,QAAQ,CAAC,CAAC;MACxB,OAAOxd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,IAAIP,QAAQ,CAAC2I,EAAE,CAAC,EAAEA,EAAE,GAAG,CAACA,EAAE,CAAC;IAC3BA,EAAE,CAAC5H,OAAO,CAACuJ,CAAC,IAAI;MACd,IAAI,IAAI,CAACxD,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACkJ,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAACxD,OAAO,CAAC6B,EAAE,CAAC/F,IAAI,CAAC0H,CAAC,CAAC;IAC7D,CAAC,CAAC;IACF,IAAI,CAACgX,aAAa,CAAC3K,GAAG,IAAI;MACxBwK,QAAQ,CAAC5gB,OAAO,CAAC,CAAC;MAClB,IAAIud,QAAQ,EAAEA,QAAQ,CAACnH,GAAG,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOwK,QAAQ;EACjB;EACAgC,aAAaA,CAAC/S,IAAI,EAAE0N,QAAQ,EAAE;IAC5B,MAAMqD,QAAQ,GAAGjhB,KAAK,CAAC,CAAC;IACxB,IAAIF,QAAQ,CAACoQ,IAAI,CAAC,EAAEA,IAAI,GAAG,CAACA,IAAI,CAAC;IACjC,MAAMgT,SAAS,GAAG,IAAI,CAACtc,OAAO,CAACyY,OAAO,IAAI,EAAE;IAC5C,MAAM8D,OAAO,GAAGjT,IAAI,CAACnL,MAAM,CAACkE,GAAG,IAAIia,SAAS,CAAChiB,OAAO,CAAC+H,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAACgD,QAAQ,CAACmE,aAAa,CAACkE,eAAe,CAACrL,GAAG,CAAC,CAAC;IAClH,IAAI,CAACka,OAAO,CAACxhB,MAAM,EAAE;MACnB,IAAIic,QAAQ,EAAEA,QAAQ,CAAC,CAAC;MACxB,OAAOxd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,IAAI,CAACuG,OAAO,CAACyY,OAAO,GAAG6D,SAAS,CAACzgB,MAAM,CAAC0gB,OAAO,CAAC;IAChD,IAAI,CAAC/B,aAAa,CAAC3K,GAAG,IAAI;MACxBwK,QAAQ,CAAC5gB,OAAO,CAAC,CAAC;MAClB,IAAIud,QAAQ,EAAEA,QAAQ,CAACnH,GAAG,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOwK,QAAQ;EACjB;EACAmC,GAAGA,CAACna,GAAG,EAAE;IACP,IAAI,CAACA,GAAG,EAAEA,GAAG,GAAG,IAAI,CAACsY,gBAAgB,KAAK,IAAI,CAAC5D,SAAS,EAAEhc,MAAM,GAAG,CAAC,GAAG,IAAI,CAACgc,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACxR,QAAQ,CAAC;IACzG,IAAI,CAAClD,GAAG,EAAE,OAAO,KAAK;IACtB,IAAI;MACF,MAAMyH,CAAC,GAAG,IAAIwD,IAAI,CAACmP,MAAM,CAACpa,GAAG,CAAC;MAC9B,IAAIyH,CAAC,IAAIA,CAAC,CAAC4S,WAAW,EAAE;QACtB,MAAMC,EAAE,GAAG7S,CAAC,CAAC4S,WAAW,CAAC,CAAC;QAC1B,IAAIC,EAAE,IAAIA,EAAE,CAACC,SAAS,EAAE,OAAOD,EAAE,CAACC,SAAS;MAC7C;IACF,CAAC,CAAC,OAAOphB,CAAC,EAAE,CAAC;IACb,MAAMqhxb,MAAMrT,aAAa,GAAG,IAAI,CAACnE,QAAQ,EAAEmE,aAAa,IAAI,IAAIwD,YAAY,CAACzP,GAAG,CAAC,CAAC,CAAC;IAC7E,IAAI8E,GAAG,CAACyE,WAAW,CAAC,CAAC,CAACxM,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,KAAK;IACxD,OAAOuiB,OAAO,CAACviB,OAAO,CAACkP,aAAa,CAAC4D,uBAAuB,CAAC/K,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAIA,GAAG,CAACyE,WAAW,CAAC,CAAC,CAACxM,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK;EACnI;EACA,OAAOwiB,cAAcA,CAAC9c,OAAO,GAAG,CAAC,CAAC,EAAEgX,QAAQ,EAAE;IAC5C,OAAO,IAAIsC,IAAI,CAACtZ,OAAO,EAAEgX,QAAQ,CAAC;EACpC;EACA+F,aAAaA,CAAC/c,OAAO,GAAG,CAAC,CAAC,EAAEgX,QAAQ,GAAGgC,IAAI,EAAE;IAC3C,MAAMgE,iBAAiB,GAAGhd,OAAO,CAACgd,iBAAiB;IACnD,IAAIA,iBAAiB,EAAE,OAAOhd,OAAO,CAACgd,iBAAiB;IACvD,MAAMC,aAAa,GAAG;MACpB,GAAG,IAAI,CAACjd,OAAO;MACf,GAAGA,OAAO;MACV,GAAG;QACD0Z,OAAO,EAAE;MACX;IACF,CAAC;IACD,MAAM/Y,KAAK,GAAG,IAAI2Y,IAAI,CAAC2D,aAAa,CAAC;IACrC,IAAIjd,OAAO,CAACI,KAAK,KAAK7E,SAAS,IAAIyE,OAAO,CAACE,MAAM,KAAK3E,SAAS,EAAE;MAC/DoF,KAAK,CAACR,MAAM,GAAGQ,KAAK,CAACR,MAAM,CAACQ,KAAK,CAACX,OAAO,CAAC;IAC5C;IACA,MAAMkd,aAAa,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC;IACvDA,aAAa,CAACjjB,OAAO,CAACC,CAAC,IAAI;MACzByG,KAAK,CAACzG,CAAC,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC;IACpB,CAAC,CAAC;IACFyG,KAAK,CAAC0E,QAAQ,GAAG;MACf,GAAG,IAAI,CAACA;IACV,CAAC;IACD1E,KAAK,CAAC0E,QAAQ,CAAC0G,KAAK,GAAG;MACrBC,kBAAkB,EAAErL,KAAK,CAACqL,kBAAkB,CAACgM,IAAI,CAACrX,KAAK;IACzD,CAAC;IACD,IAAIqc,iBAAiB,EAAE;MACrB,MAAMG,UAAU,GAAGniB,MAAM,CAACyI,IAAI,CAAC,IAAI,CAAC8S,KAAK,CAACta,IAAI,CAAC,CAACwX,MAAM,CAAC,CAAC2J,IAAI,EAAEtT,CAAC,KAAK;QAClEsT,IAAI,CAACtT,CAAC,CAAC,GAAG;UACR,GAAG,IAAI,CAACyM,KAAK,CAACta,IAAI,CAAC6N,CAAC;QACtB,CAAC;QACDsT,IAAI,CAACtT,CAAC,CAAC,GAAG9O,MAAM,CAACyI,IAAI,CAAC2Z,IAAI,CAACtT,CAAC,CAAC,CAAC,CAAC2J,MAAM,CAAC,CAAC4J,GAAG,EAAE7Z,CAAC,KAAK;UAChD6Z,GAAG,CAAC7Z,CAAC,CAAC,GAAG;YACP,GAAG4Z,IAAI,CAACtT,CAAC,CAAC,CAACtG,CAAC;UACd,CAAC;UACD,OAAO6Z,GAAG;QACZ,CAAC,EAAED,IAAI,CAACtT,CAAC,CAAC,CAAC;QACX,OAAOsT,IAAI;MACb,CAAC,EAAE,CAAC,CAAC,CAAC;MACNzc,KAAK,CAAC4V,KAAK,GAAG,IAAI3U,aAAa,CAACub,UAAU,EAAEF,aAAa,CAAC;MAC1Dtc,KAAK,CAAC0E,QAAQ,CAACuH,aAAa,GAAGjM,KAAK,CAAC4V,KAAK;IAC5C;IACA5V,KAAK,CAACwD,UAAU,GAAG,IAAIiB,UAAU,CAACzE,KAAK,CAAC0E,QAAQ,EAAE4X,aAAa,CAAC;IAChEtc,KAAK,CAACwD,UAAU,CAACpD,EAAE,CAAC,GAAG,EAAE,CAACG,KAAK,EAAE,GAAG1B,IAAI,KAAK;MAC3CmB,KAAK,CAACU,IAAI,CAACH,KAAK,EAAE,GAAG1B,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFmB,KAAK,CAACV,IAAI,CAACgd,aAAa,EAAEjG,QAAQ,CAAC;IACnCrW,KAAK,CAACwD,UAAU,CAACnE,OAAO,GAAGid,aAAa;IACxCtc,KAAK,CAACwD,UAAU,CAAC+F,gBAAgB,CAAC7E,QAAQ,CAAC0G,KAAK,GAAG;MACjDC,kBAAkB,EAAErL,KAAK,CAACqL,kBAAkB,CAACgM,IAAI,CAACrX,KAAK;IACzD,CAAC;IACD,OAAOA,KAAK;EACd;EACAiD,MAAMA,CAAA,EAAG;IACP,OAAO;MACL5D,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBuW,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBhR,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBwR,SAAS,EAAE,IAAI,CAACA,SAAS;MACzB4D,gBAAgB,EAAE,IAAI,CAACA;IACzB,CAAC;EACH;AACF;AACA,MAAM2C,QAAQ,GAAGhE,IAAI,CAACwD,cAAc,CAAC,CAAC;AACtCQ,QAAQ,CAACR,cAAc,GAAGxD,IAAI,CAACwD,cAAc;AAE7C,MAAMA,cAAc,GAAGQ,QAAQ,CAACR,cAAc;AAC9C,MAAMN,GAAG,GAAGc,QAAQ,CAACd,GAAG;AACxB,MAAMvc,IAAI,GAAGqd,QAAQ,CAACrd,IAAI;AAC1B,MAAMua,aAAa,GAAG8C,QAAQ,CAAC9C,aAAa;AAC5C,MAAMK,eAAe,GAAGyC,QAAQ,CAACzC,eAAe;AAChD,MAAMC,GAAG,GAAGwC,QAAQ,CAACxC,GAAG;AACxB,MAAMxV,cAAc,GAAGgY,QAAQ,CAAChY,cAAc;AAC9C,MAAMoW,SAAS,GAAG4B,QAAQ,CAAC5B,SAAS;AACpC,MAAM1hB,CAAC,GAAGsjB,QAAQ,CAACtjB,CAAC;AACpB,MAAMwL,MAAM,GAAG8X,QAAQ,CAAC9X,MAAM;AAC9B,MAAMsW,mBAAmB,GAAGwB,QAAQ,CAACxB,mBAAmB;AACxD,MAAM9P,kBAAkB,GAAGsR,QAAQ,CAACtR,kBAAkB;AACtD,MAAMoQ,cAAc,GAAGkB,QAAQ,CAAClB,cAAc;AAC9C,MAAMC,aAAa,GAAGiB,QAAQ,CAACjB,aAAa;AAE5C,SAAS/W,cAAc,EAAEwX,cAAc,EAAEQ,QAAQ,IAAInP,OAAO,EAAEqO,GAAG,EAAEhX,MAAM,EAAEkW,SAAS,EAAE1P,kBAAkB,EAAE/L,IAAI,EAAEoc,aAAa,EAAED,cAAc,EAAE5B,aAAa,EAAEK,eAAe,EAAEiB,mBAAmB,EAAE9hB,CAAC,EAAE8gB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
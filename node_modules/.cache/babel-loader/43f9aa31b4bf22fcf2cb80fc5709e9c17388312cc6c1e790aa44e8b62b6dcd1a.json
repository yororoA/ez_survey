{"ast":null,"code":"/* 检查问卷是否合法\r\n* @accept`surveyId`: 需要检测的 surveyId\r\n* @return [object object]Promise */\nimport { getUserData } from \"./getUserData\";\nexport async function checkSurvey(surveyId) {\n  const checkResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`);\n\n  // 检查问卷本身的属性\n  // 对于不存在和未发布的问卷使用同样的错误信息\n  if (!checkResp.ok && checkResp.status === 404) {\n    return {\n      isValid: false,\n      surveyData: null,\n      error: {\n        code: 1,\n        message: '该问卷不存在'\n      }\n    };\n  }\n  const data = await checkResp.json();\n  if (!data.data.published) {\n    return {\n      isValid: false,\n      surveyData: null,\n      error: {\n        code: 1,\n        message: '该问卷不存在'\n      }\n    };\n  }\n  // 当前用户是否为问卷发布者\n\n  // 是否已结束收集\n  if (data.data.endCollection) {\n    return {\n      isValid: false,\n      surveyData: null,\n      error: {\n        code: 2,\n        message: '该问卷已结束收集'\n      }\n    };\n  }\n\n  // 检查当前用户是否已填写过问卷\n  const clientDatas = await getUserData();\n  const involved = clientDatas.data.involved;\n  if (involved !== null) {\n    if (involved.length !== 0) {\n      for (let any of involved) {\n        if (any.survey === surveyId) {\n          return {\n            isValid: false,\n            surveyData: null,\n            error: {\n              code: 3,\n              message: '已填写并提交'\n            }\n          };\n        }\n      }\n    }\n  }\n  return {\n    isValid: true,\n    surveyData: {\n      title: data.data.title,\n      description: data.data.description,\n      questions: data.data.questions,\n      userId: data.data.clientId\n    },\n    error: {\n      code: null,\n      message: null\n    }\n  };\n}","map":{"version":3,"names":["getUserData","checkSurvey","surveyId","checkResp","fetch","ok","status","isValid","surveyData","error","code","message","data","json","published","endCollection","clientDatas","involved","length","any","survey","title","description","questions","userId","clientId"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/utils/checkSurvey.js"],"sourcesContent":["/* 检查问卷是否合法\r\n* @accept`surveyId`: 需要检测的 surveyId\r\n* @return [object object]Promise */\r\nimport {getUserData} from \"./getUserData\";\r\n\r\nexport async function checkSurvey(surveyId) {\r\n\tconst checkResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`);\r\n\r\n\t// 检查问卷本身的属性\r\n\t// 对于不存在和未发布的问卷使用同样的错误信息\r\n\tif (!checkResp.ok && checkResp.status === 404) {\r\n\t\treturn {\r\n\t\t\tisValid: false,\r\n\t\t\tsurveyData: null,\r\n\t\t\terror: {\r\n\t\t\t\tcode: 1,\r\n\t\t\t\tmessage: '该问卷不存在'\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\tconst data = await checkResp.json();\r\n\tif (!data.data.published) {\r\n\t\treturn {\r\n\t\t\tisValid: false,\r\n\t\t\tsurveyData: null,\r\n\t\t\terror: {\r\n\t\t\t\tcode: 1,\r\n\t\t\t\tmessage: '该问卷不存在'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// 当前用户是否为问卷发布者\r\n\t\r\n\t// 是否已结束收集\r\n\tif (data.data.endCollection) {\r\n\t\treturn {\r\n\t\t\tisValid: false,\r\n\t\t\tsurveyData: null,\r\n\t\t\terror: {\r\n\t\t\t\tcode: 2,\r\n\t\t\t\tmessage: '该问卷已结束收集'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 检查当前用户是否已填写过问卷\r\n\tconst clientDatas = await getUserData();\r\n\tconst involved = clientDatas.data.involved;\r\n\tif (involved !== null) {\r\n\t\tif (involved.length !== 0) {\r\n\t\t\tfor (let any of involved) {\r\n\t\t\t\tif (any.survey === surveyId) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisValid: false,\r\n\t\t\t\t\t\tsurveyData: null,\r\n\t\t\t\t\t\terror: {\r\n\t\t\t\t\t\t\tcode: 3,\r\n\t\t\t\t\t\t\tmessage: '已填写并提交'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tisValid: true,\r\n\t\tsurveyData: {\r\n\t\t\ttitle: data.data.title,\r\n\t\t\tdescription: data.data.description,\r\n\t\t\tquestions: data.data.questions,\r\n\t\t\tuserId: data.data.clientId\r\n\t\t},\r\n\t\terror: {\r\n\t\t\tcode: null,\r\n\t\t\tmessage: null\r\n\t\t}\r\n\t}\r\n}"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,WAAW,QAAO,eAAe;AAEzC,OAAO,eAAeC,WAAWA,CAACC,QAAQ,EAAE;EAC3C,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,qCAAqCF,QAAQ,EAAE,CAAC;;EAE9E;EACA;EACA,IAAI,CAACC,SAAS,CAACE,EAAE,IAAIF,SAAS,CAACG,MAAM,KAAK,GAAG,EAAE;IAC9C,OAAO;MACNC,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE;QACNC,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE;MACV;IACD,CAAC;EACF;EACA,MAAMC,IAAI,GAAG,MAAMT,SAAS,CAACU,IAAI,CAAC,CAAC;EACnC,IAAI,CAACD,IAAI,CAACA,IAAI,CAACE,SAAS,EAAE;IACzB,OAAO;MACNP,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE;QACNC,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE;MACV;IACD,CAAC;EACF;EACA;;EAEA;EACA,IAAIC,IAAI,CAACA,IAAI,CAACG,aAAa,EAAE;IAC5B,OAAO;MACNR,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE;QACNC,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE;MACV;IACD,CAAC;EACF;;EAEA;EACA,MAAMK,WAAW,GAAG,MAAMhB,WAAW,CAAC,CAAC;EACvC,MAAMiB,QAAQ,GAAGD,WAAW,CAACJ,IAAI,CAACK,QAAQ;EAC1C,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACtB,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1B,KAAK,IAAIC,GAAG,IAAIF,QAAQ,EAAE;QACzB,IAAIE,GAAG,CAACC,MAAM,KAAKlB,QAAQ,EAAE;UAC5B,OAAO;YACNK,OAAO,EAAE,KAAK;YACdC,UAAU,EAAE,IAAI;YAChBC,KAAK,EAAE;cACNC,IAAI,EAAE,CAAC;cACPC,OAAO,EAAE;YACV;UACD,CAAC;QACF;MACD;IACD;EACD;EAEA,OAAO;IACNJ,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE;MACXa,KAAK,EAAET,IAAI,CAACA,IAAI,CAACS,KAAK;MACtBC,WAAW,EAAEV,IAAI,CAACA,IAAI,CAACU,WAAW;MAClCC,SAAS,EAAEX,IAAI,CAACA,IAAI,CAACW,SAAS;MAC9BC,MAAM,EAAEZ,IAAI,CAACA,IAAI,CAACa;IACnB,CAAC;IACDhB,KAAK,EAAE;MACNC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACV;EACD,CAAC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
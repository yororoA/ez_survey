{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\main_nav_pages\\\\nav_pages\\\\published.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserSurveys } from \"../../../utils/getUserSurveys\";\nimport RenderPublished from \"../../../components/publishedDisplay/renderPublished\";\nimport { RenderPublishedContext } from \"../../../components/publishedDisplay/context/renderPublishedContext\";\nimport publishedDisplay from '../../../style/publishedDisplay/publishedDisplay.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Published = () => {\n  _s();\n  // 获得所有属于当前用户的已发布问卷\n  const [publishedSurveys, setPublishedSurveys] = useState([]);\n  // 是否存在已发布问卷\n  const [hasPublished, setHasPublished] = useState(false);\n  fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`).then(resp => {\n    if (!resp.ok) {\n      throw new Error(`获取用户数据失败: ${resp.status}`);\n    }\n    return resp.json();\n  }).then(data => {\n    const surveys = data.data.surveys.filter(survey => survey.published === true);\n    console.log('????????????', surveys);\n    if (surveys == null || surveys.length === 0) {\n      setHasPublished(false);\n    } else {\n      setHasPublished(true);\n    }\n  }).catch(err => {\n    if (err.message.includes('Failed to fetch')) {\n      console.error(`服务器都没开还想连服务器吗`);\n    } else {\n      console.error('嘟嘟嘟', err.message);\n    }\n  });\n  useEffect(() => {\n    // 获取已发布问卷\n    if (hasPublished) getUserSurveys(false).then(r => {\n      setPublishedSurveys(r);\n    });\n  }, [hasPublished]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: publishedDisplay.entire,\n    children: /*#__PURE__*/_jsxDEV(RenderPublishedContext.Provider, {\n      value: publishedSurveys,\n      children: /*#__PURE__*/_jsxDEV(RenderPublished, {\n        hasPulished: hasPublished\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n_s(Published, \"v2eHekcZmO2EXrrjI/e5q62Yoeg=\");\n_c = Published;\nexport default Published;\nvar _c;\n$RefreshReg$(_c, \"Published\");","map":{"version":3,"names":["React","useEffect","useState","getUserSurveys","RenderPublished","RenderPublishedContext","publishedDisplay","jsxDEV","_jsxDEV","Published","_s","publishedSurveys","setPublishedSurveys","hasPublished","setHasPublished","fetch","localStorage","getItem","then","resp","ok","Error","status","json","data","surveys","filter","survey","published","console","log","length","catch","err","message","includes","error","r","className","entire","children","Provider","value","hasPulished","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/main_nav_pages/nav_pages/published.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {getUserSurveys} from \"../../../utils/getUserSurveys\";\r\nimport RenderPublished from \"../../../components/publishedDisplay/renderPublished\";\r\nimport {RenderPublishedContext} from \"../../../components/publishedDisplay/context/renderPublishedContext\";\r\nimport publishedDisplay from '../../../style/publishedDisplay/publishedDisplay.module.css'\r\n\r\nconst Published = () => {\r\n\t// 获得所有属于当前用户的已发布问卷\r\n\tconst [publishedSurveys, setPublishedSurveys] = useState([]);\r\n\t// 是否存在已发布问卷\r\n\tconst [hasPublished, setHasPublished] = useState(false);\r\n\tfetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`)\r\n\t\t.then(resp => {\r\n\t\t\tif (!resp.ok) {\r\n\t\t\t\tthrow new Error(`获取用户数据失败: ${resp.status}`);\r\n\t\t\t}\r\n\t\t\treturn resp.json();\r\n\t\t})\r\n\t\t.then(data => {\r\n\t\t\tconst surveys = data.data.surveys.filter(survey => survey.published === true);\r\n\t\t\tconsole.log('????????????', surveys);\r\n\t\t\tif (surveys == null || surveys.length === 0) {\r\n\t\t\t\tsetHasPublished(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetHasPublished(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tif (err.message.includes('Failed to fetch')) {\r\n\t\t\t\tconsole.error(`服务器都没开还想连服务器吗`)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('嘟嘟嘟', err.message)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// 获取已发布问卷\r\n\t\tif (hasPublished) getUserSurveys(false).then(r => {\r\n\t\t\tsetPublishedSurveys(r);\r\n\t\t});\r\n\t}, [hasPublished]);\r\n\r\n\treturn (\r\n\t\t<div className={publishedDisplay.entire}>\r\n\t\t\t<RenderPublishedContext.Provider value={publishedSurveys}>\r\n\t\t\t\t<RenderPublished hasPulished={hasPublished}/>\r\n\t\t\t</RenderPublishedContext.Provider>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Published;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,cAAc,QAAO,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,sDAAsD;AAClF,SAAQC,sBAAsB,QAAO,qEAAqE;AAC1G,OAAOC,gBAAgB,MAAM,6DAA6D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1F,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5D;EACA,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvDa,KAAK,CAAC,qCAAqCC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CACzEC,IAAI,CAACC,IAAI,IAAI;IACb,IAAI,CAACA,IAAI,CAACC,EAAE,EAAE;MACb,MAAM,IAAIC,KAAK,CAAC,aAAaF,IAAI,CAACG,MAAM,EAAE,CAAC;IAC5C;IACA,OAAOH,IAAI,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;IACb,MAAMC,OAAO,GAAGD,IAAI,CAACA,IAAI,CAACC,OAAO,CAACC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,SAAS,KAAK,IAAI,CAAC;IAC7EC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,OAAO,CAAC;IACpC,IAAIA,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACM,MAAM,KAAK,CAAC,EAAE;MAC5CjB,eAAe,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACNA,eAAe,CAAC,IAAI,CAAC;IACtB;EACD,CAAC,CAAC,CACDkB,KAAK,CAACC,GAAG,IAAI;IACb,IAAIA,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MAC5CN,OAAO,CAACO,KAAK,CAAC,eAAe,CAAC;IAC/B,CAAC,MAAM;MACNP,OAAO,CAACO,KAAK,CAAC,KAAK,EAAEH,GAAG,CAACC,OAAO,CAAC;IAClC;EACD,CAAC,CAAC;EAGHjC,SAAS,CAAC,MAAM;IACf;IACA,IAAIY,YAAY,EAAEV,cAAc,CAAC,KAAK,CAAC,CAACe,IAAI,CAACmB,CAAC,IAAI;MACjDzB,mBAAmB,CAACyB,CAAC,CAAC;IACvB,CAAC,CAAC;EACH,CAAC,EAAE,CAACxB,YAAY,CAAC,CAAC;EAElB,oBACCL,OAAA;IAAK8B,SAAS,EAAEhC,gBAAgB,CAACiC,MAAO;IAAAC,QAAA,eACvChC,OAAA,CAACH,sBAAsB,CAACoC,QAAQ;MAACC,KAAK,EAAE/B,gBAAiB;MAAA6B,QAAA,eACxDhC,OAAA,CAACJ,eAAe;QAACuC,WAAW,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAER,CAAC;AAACrC,EAAA,CA5CID,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
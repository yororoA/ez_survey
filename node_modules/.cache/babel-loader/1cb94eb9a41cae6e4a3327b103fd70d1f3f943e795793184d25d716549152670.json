{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\main_nav_pages\\\\nav_pages\\\\involved\\\\checkInvolvedDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getAnswerDetailsByAnswerId } from \"../../../../utils/getAnswerDetailsByAnswerId\";\nimport { getSurveyQues } from \"../../../../utils/getSurveyQues\";\nimport { getQueDetails } from \"../../../../utils/getQueDetails\";\nimport { AnswersDetailsContext, QuesDetailsBoundedContext, SurveyOverviewContext } from \"../../../../components/involvedDisplay/context/renderChecked\";\nimport RenderCheck from \"../../../../components/involvedDisplay/renderCheck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckInvolvedDetails = () => {\n  _s();\n  const {\n    answerId\n  } = useParams();\n  const [answerDetails, setAnswerDetails] = useState([]);\n  const [surveyOverview, setSurveyOverview] = useState({});\n  const [surveyBoundedQuesBounded, setSurveyQuesBounded] = useState([]);\n  useEffect(() => {\n    // 获取填写的answer内容\n    getAnswerDetailsByAnswerId(answerId).then(r => {\n      // 将answers按index排序, 便于问题读取答案\n      const answers = r.answers.sort((a, b) => a.index - b.index);\n      setAnswerDetails(answers);\n\n      // 获取与answer相关的问卷绑定的问题id\n      getSurveyQues(r.surveyId, false).then(rb => {\n        // 将survey的基础信息存入\n        setSurveyOverview({\n          title: rb.title,\n          description: rb.description\n        });\n        const questions = rb.questions;\n\n        // 获取问题内容\n        async function fetchQueDetails() {\n          const promises = questions.map(question => getQueDetails(question));\n          const results = await Promise.all(promises);\n          // 将questions按index排序, 以供与答案进行匹配\n          setSurveyQuesBounded(results.sort((a, b) => a.index - b.index));\n        }\n        fetchQueDetails();\n      });\n    });\n  }, [answerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AnswersDetailsContext.Provider, {\n      value: answerDetails,\n      children: /*#__PURE__*/_jsxDEV(QuesDetailsBoundedContext.Provider, {\n        value: surveyBoundedQuesBounded,\n        children: /*#__PURE__*/_jsxDEV(SurveyOverviewContext.Provider, {\n          value: surveyOverview,\n          children: /*#__PURE__*/_jsxDEV(RenderCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n_s(CheckInvolvedDetails, \"tKF57EdSWXNFEy+qt1ZLDWSn434=\", false, function () {\n  return [useParams];\n});\n_c = CheckInvolvedDetails;\nexport default CheckInvolvedDetails;\nvar _c;\n$RefreshReg$(_c, \"CheckInvolvedDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getAnswerDetailsByAnswerId","getSurveyQues","getQueDetails","AnswersDetailsContext","QuesDetailsBoundedContext","SurveyOverviewContext","RenderCheck","jsxDEV","_jsxDEV","CheckInvolvedDetails","_s","answerId","answerDetails","setAnswerDetails","surveyOverview","setSurveyOverview","surveyBoundedQuesBounded","setSurveyQuesBounded","then","r","answers","sort","a","b","index","surveyId","rb","title","description","questions","fetchQueDetails","promises","map","question","results","Promise","all","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/main_nav_pages/nav_pages/involved/checkInvolvedDetails.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getAnswerDetailsByAnswerId} from \"../../../../utils/getAnswerDetailsByAnswerId\";\r\nimport {getSurveyQues} from \"../../../../utils/getSurveyQues\";\r\nimport {getQueDetails} from \"../../../../utils/getQueDetails\";\r\nimport {\r\n\tAnswersDetailsContext,\r\n\tQuesDetailsBoundedContext, SurveyOverviewContext\r\n} from \"../../../../components/involvedDisplay/context/renderChecked\";\r\nimport RenderCheck from \"../../../../components/involvedDisplay/renderCheck\";\r\n\r\nconst CheckInvolvedDetails = () => {\r\n\tconst {answerId} = useParams();\r\n\tconst [answerDetails, setAnswerDetails] = useState([]);\r\n\tconst [surveyOverview, setSurveyOverview] = useState({});\r\n\tconst [surveyBoundedQuesBounded, setSurveyQuesBounded] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// 获取填写的answer内容\r\n\t\tgetAnswerDetailsByAnswerId(answerId).then(r => {\r\n\t\t\t// 将answers按index排序, 便于问题读取答案\r\n\t\t\tconst answers = r.answers.sort((a, b) => a.index - b.index);\r\n\t\t\tsetAnswerDetails(answers);\r\n\r\n\t\t\t// 获取与answer相关的问卷绑定的问题id\r\n\t\t\tgetSurveyQues(r.surveyId, false).then(rb => {\r\n\t\t\t\t// 将survey的基础信息存入\r\n\t\t\t\tsetSurveyOverview({title: rb.title, description: rb.description});\r\n\t\t\t\t\r\n\t\t\t\tconst questions = rb.questions;\r\n\r\n\t\t\t\t// 获取问题内容\r\n\t\t\t\tasync function fetchQueDetails() {\r\n\t\t\t\t\tconst promises = questions.map((question) => getQueDetails(question));\r\n\t\t\t\t\tconst results = await Promise.all(promises);\r\n\t\t\t\t\t// 将questions按index排序, 以供与答案进行匹配\r\n\t\t\t\t\tsetSurveyQuesBounded(results.sort((a, b) => a.index - b.index));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfetchQueDetails();\r\n\t\t\t})\r\n\r\n\t\t});\r\n\t}, [answerId]);\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AnswersDetailsContext.Provider value={answerDetails}>\r\n\t\t\t\t<QuesDetailsBoundedContext.Provider value={surveyBoundedQuesBounded}>\r\n\t\t\t\t\t<SurveyOverviewContext.Provider value={surveyOverview}>\r\n\t\t\t\t\t\t<RenderCheck/>\r\n\t\t\t\t\t</SurveyOverviewContext.Provider>\r\n\t\t\t\t</QuesDetailsBoundedContext.Provider>\r\n\t\t\t</AnswersDetailsContext.Provider>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CheckInvolvedDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// 创建用户相关数据api对象\nconst userApi = createApi({\n  reducerPath: 'userApis',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:1337/api/'\n    // prepareHeaders: ,\n  }),\n  endpoints(build) {\n    return {\n      // 注册\n      registerUser: build.mutation({\n        query(user) {\n          return {\n            url: 'clients',\n            method: 'POST',\n            body: {\n              data: user.attributes\n            }\n          };\n        }\n      }),\n      // 查询用户\n      findUser: build.query({\n        query() {\n          return 'clients';\n        },\n        transformResponse(baseQueryReturnValue, meta, arg) {\n          // console.log(baseQueryReturnValue)\n          return baseQueryReturnValue;\n        }\n      }),\n      // 更新用户\n\n      //\t创建问题\n      createQue: build.mutation({\n        query(que) {\n          return {\n            url: 'quests',\n            method: 'POST',\n            body: {\n              data: que.attributes\n            }\n          };\n        }\n      }),\n      // 修改问题\n      updateQue: build.mutation({\n        query(documentId, que) {\n          return {\n            url: `quests/${documentId}`,\n            method: 'PUT',\n            body: {\n              data: que.attributes\n            }\n          };\n        }\n      }),\n      // 删除问题\n      delQue: build.mutation({\n        query(documentId) {\n          return {\n            url: `quests/${documentId}`,\n            method: 'DELETE'\n          };\n        }\n      }),\n      // 创建问卷\n      saveSurvey: build.mutation({\n        query(survey) {\n          return {\n            url: 'surveys',\n            method: 'POST',\n            body: {\n              data: survey.attributes\n            }\n          };\n        }\n      }),\n      // 更新问卷\n      updateSurvey: build.mutation({\n        query(survey) {\n          return {\n            url: `surveys/${surveyId}`,\n            method: 'PUT',\n            body: {\n              data: survey.attributes\n            }\n          };\n        }\n      })\n    };\n  }\n});\n\n// 暴露钩子函数\nexport const {\n  useRegisterUserMutation,\n  useFindUserQuery,\n  useCreateQueMutation,\n  useUpdateQueMutation,\n  useDelQueMutation,\n  useSaveSurveyMutation,\n  useUpdateSurveyMutation\n} = userApi;\nexport default userApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","userApi","reducerPath","baseQuery","baseUrl","endpoints","build","registerUser","mutation","query","user","url","method","body","data","attributes","findUser","transformResponse","baseQueryReturnValue","meta","arg","createQue","que","updateQue","documentId","delQue","saveSurvey","survey","updateSurvey","surveyId","useRegisterUserMutation","useFindUserQuery","useCreateQueMutation","useUpdateQueMutation","useDelQueMutation","useSaveSurveyMutation","useUpdateSurveyMutation"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/services/apis.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\r\n\r\n// 创建用户相关数据api对象\r\nconst userApi = createApi({\r\n\treducerPath: 'userApis',\r\n\tbaseQuery: fetchBaseQuery({\r\n\t\tbaseUrl: 'http://localhost:1337/api/',\r\n\t\t// prepareHeaders: ,\r\n\t}),\r\n\tendpoints(build) {\r\n\t\treturn {\r\n\t\t\t// 注册\r\n\t\t\tregisterUser: build.mutation({\r\n\t\t\t\tquery(user) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\turl: 'clients',\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tbody: {data: user.attributes}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\t// 查询用户\r\n\t\t\tfindUser: build.query({\r\n\t\t\t\tquery() {\r\n\t\t\t\t\treturn 'clients'\r\n\t\t\t\t},\r\n\t\t\t\ttransformResponse(baseQueryReturnValue, meta, arg) {\r\n\t\t\t\t\t// console.log(baseQueryReturnValue)\r\n\t\t\t\t\treturn baseQueryReturnValue;\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\t// 更新用户\r\n\r\n\t\t\t//\t创建问题\r\n\t\t\tcreateQue: build.mutation({\r\n\t\t\t\tquery(que) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\turl: 'quests',\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tbody: {data: que.attributes}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\t// 修改问题\r\n\t\t\tupdateQue: build.mutation({\r\n\t\t\t\tquery(documentId, que) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\turl: `quests/${documentId}`,\r\n\t\t\t\t\t\tmethod: 'PUT',\r\n\t\t\t\t\t\tbody: {data: que.attributes}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\t// 删除问题\r\n\t\t\tdelQue: build.mutation({\r\n\t\t\t\tquery(documentId) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\turl: `quests/${documentId}`,\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\t// 创建问卷\r\n\t\t\tsaveSurvey: build.mutation({\r\n\t\t\t\tquery(survey) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\turl: 'surveys',\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tbody: {data: survey.attributes}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\t// 更新问卷\r\n\t\t\tupdateSurvey: build.mutation({\r\n\t\t\t\tquery(survey) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\turl: `surveys/${surveyId}`,\r\n\t\t\t\t\t\tmethod: 'PUT',\r\n\t\t\t\t\t\tbody: {data: survey.attributes}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n// 暴露钩子函数\r\nexport const {\r\n\tuseRegisterUserMutation,\r\n\tuseFindUserQuery,\r\n\tuseCreateQueMutation,\r\n\tuseUpdateQueMutation,\r\n\tuseDelQueMutation,\r\n\tuseSaveSurveyMutation,\r\n\tuseUpdateSurveyMutation,\r\n} = userApi;\r\nexport default userApi;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;;AAEtE;AACA,MAAMC,OAAO,GAAGF,SAAS,CAAC;EACzBG,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEH,cAAc,CAAC;IACzBI,OAAO,EAAE;IACT;EACD,CAAC,CAAC;EACFC,SAASA,CAACC,KAAK,EAAE;IAChB,OAAO;MACN;MACAC,YAAY,EAAED,KAAK,CAACE,QAAQ,CAAC;QAC5BC,KAAKA,CAACC,IAAI,EAAE;UACX,OAAO;YACNC,GAAG,EAAE,SAAS;YACdC,MAAM,EAAE,MAAM;YACdC,IAAI,EAAE;cAACC,IAAI,EAAEJ,IAAI,CAACK;YAAU;UAC7B,CAAC;QACF;MACD,CAAC,CAAC;MACF;MACAC,QAAQ,EAAEV,KAAK,CAACG,KAAK,CAAC;QACrBA,KAAKA,CAAA,EAAG;UACP,OAAO,SAAS;QACjB,CAAC;QACDQ,iBAAiBA,CAACC,oBAAoB,EAAEC,IAAI,EAAEC,GAAG,EAAE;UAClD;UACA,OAAOF,oBAAoB;QAC5B;MACD,CAAC,CAAC;MACF;;MAEA;MACAG,SAAS,EAAEf,KAAK,CAACE,QAAQ,CAAC;QACzBC,KAAKA,CAACa,GAAG,EAAE;UACV,OAAO;YACNX,GAAG,EAAE,QAAQ;YACbC,MAAM,EAAE,MAAM;YACdC,IAAI,EAAE;cAACC,IAAI,EAAEQ,GAAG,CAACP;YAAU;UAC5B,CAAC;QACF;MACD,CAAC,CAAC;MACF;MACAQ,SAAS,EAAEjB,KAAK,CAACE,QAAQ,CAAC;QACzBC,KAAKA,CAACe,UAAU,EAAEF,GAAG,EAAE;UACtB,OAAO;YACNX,GAAG,EAAE,UAAUa,UAAU,EAAE;YAC3BZ,MAAM,EAAE,KAAK;YACbC,IAAI,EAAE;cAACC,IAAI,EAAEQ,GAAG,CAACP;YAAU;UAC5B,CAAC;QACF;MACD,CAAC,CAAC;MACF;MACAU,MAAM,EAAEnB,KAAK,CAACE,QAAQ,CAAC;QACtBC,KAAKA,CAACe,UAAU,EAAE;UACjB,OAAO;YACNb,GAAG,EAAE,UAAUa,UAAU,EAAE;YAC3BZ,MAAM,EAAE;UACT,CAAC;QACF;MACD,CAAC,CAAC;MACF;MACAc,UAAU,EAAEpB,KAAK,CAACE,QAAQ,CAAC;QAC1BC,KAAKA,CAACkB,MAAM,EAAE;UACb,OAAO;YACNhB,GAAG,EAAE,SAAS;YACdC,MAAM,EAAE,MAAM;YACdC,IAAI,EAAE;cAACC,IAAI,EAAEa,MAAM,CAACZ;YAAU;UAC/B,CAAC;QACF;MACD,CAAC,CAAC;MACF;MACAa,YAAY,EAAEtB,KAAK,CAACE,QAAQ,CAAC;QAC5BC,KAAKA,CAACkB,MAAM,EAAE;UACb,OAAO;YACNhB,GAAG,EAAE,WAAWkB,QAAQ,EAAE;YAC1BjB,MAAM,EAAE,KAAK;YACbC,IAAI,EAAE;cAACC,IAAI,EAAEa,MAAM,CAACZ;YAAU;UAC/B,CAAC;QACF;MACD,CAAC;IACF,CAAC;EACF;AACD,CAAC,CAAC;;AAGF;AACA,OAAO,MAAM;EACZe,uBAAuB;EACvBC,gBAAgB;EAChBC,oBAAoB;EACpBC,oBAAoB;EACpBC,iBAAiB;EACjBC,qBAAqB;EACrBC;AACD,CAAC,GAAGnC,OAAO;AACX,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
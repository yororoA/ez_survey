{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\publish.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport QuesList from \"../components/editSurvey/quesList\";\nimport AddQue from \"../components/editSurvey/addQue\";\nimport { GetTitleContext } from \"../components/editSurvey/context/getTitleContext\";\nimport { useCreateQueMutation, useSaveSurveyMutation, useUpdateSurveyMutation } from \"../services/apis\";\nimport { filterQueDetails } from \"../components/editSurvey/filterQueDetails\";\nimport { CancelEditContext, ConfirmEditContext, EditingQueContext, InitialDataContext, IsEditingContext, ReEditQueContext } from \"../components/editSurvey/context/reEditQueContext\";\nimport { updateUser } from \"../utils/updateUser\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Publish = () => {\n  _s();\n  // 监测是否正在添加某个问题\n  const [adding, setAdding] = useState(false);\n  // 正在添加的问题信息\n  const [addingTitle, setAddingTitle] = useState({});\n  // 是否添加完毕\n  const [addComplete, setAddComplete] = useState(false);\n  //  问题列表\n  const [ques, setQues] = useState([]);\n  // const queType = useContext(QueContext);\n  // 检测是否保存或发布\n  const [draftOrPublish, setDraftOrPublish] = useState(false);\n  // 从草稿页面点击编辑跳转到publish时\n  // 检测sessionStorage中是否存在需要编辑的键值对, 若为null则不是从草稿页面跳转过来的\n  const storageSurveyTitle = sessionStorage.getItem('surveyTitle');\n  const storageSurveyDescription = sessionStorage.getItem('surveyDescription');\n  const isFromDrafts = storageSurveyTitle !== null || storageSurveyDescription !== null;\n  if (isFromDrafts) {\n    // 如果跳转自drafts的编辑link\n    const nums = sessionStorage.length; // 相应draft从服务器拉取到本地的数据数目\n    const questionDatas = [];\n    for (let i = 0; i < nums; i++) {\n      // 读取每个数据的key, 若为题目key则存储在列表中, 用于之后上传给ques\n      const key = sessionStorage.key(i);\n      if (key === 'surveyTitle' || key === 'surveyDescription') {\n        continue;\n      }\n      const data = JSON.parse(sessionStorage.getItem(key));\n      questionDatas.push(data);\n    }\n    // 将data按index升序排序\n    questionDatas.sort((a, b) => a.index - b.index);\n    // 将所需数据传递给ques\n    questionDatas.map(data => {\n      const newData = {\n        ...data\n      };\n      delete newData.index;\n      sessionStorage.setItem(`${newData.title}`, JSON.stringify(newData));\n      setQues([...ques, newData]);\n    });\n  }\n  // 问卷标题\n  const [surveyTitle, setSurveyTitle] = useState(isFromDrafts ? storageSurveyTitle : '');\n  const handleTitleChange = useCallback(e => {\n    const newTitle = e.target.value;\n    setSurveyTitle(newTitle);\n    // 将标题存储到 sessionStorage\n    sessionStorage.setItem('surveyTitle', newTitle);\n  }, []);\n  // 问卷描述\n  const [surveyDescr, setSurveyDescr] = useState(isFromDrafts ? storageSurveyDescription : '');\n  const handleDescrChange = useCallback(e => {\n    const newDescr = e.target.value;\n    setSurveyDescr(newDescr);\n    // 将描述存储到 sessionStorage\n    sessionStorage.setItem('surveyDescription', newDescr);\n  }, []);\n\n  // 添加问题\n  const handleAddQue = useCallback(e => {\n    e.preventDefault();\n    setAdding(true);\n    setAddComplete(false);\n    setDraftOrPublish(false);\n    // 清除上一次草稿中保存的题目title, 避免因取消空标题的添加造成的清除前一个sessionStorage\n    setAddingTitle({\n      title: '',\n      id: Date.now()\n    });\n  }, [adding, addComplete]);\n  // 获得问题 title 用于定位 sessionStorage 中的存储\n  // 草稿---未确认添加\n  function draftTitle(title) {\n    console.log(title);\n    // 将获得的标题传给 addingTitle, 即正在使用的标题\n    setAddingTitle({\n      title,\n      id: Date.now()\n    });\n  }\n\n  // 确认添加---保存问题->ques\n  function saveTitle() {\n    const queType = JSON.parse(sessionStorage.getItem(addingTitle.title)).type;\n    setQues([...ques, {\n      ...addingTitle,\n      type: queType\n    }]);\n  }\n\n  // 确认添加\n  const handleCompleteQue = e => {\n    e.preventDefault();\n    saveTitle();\n    setAdding(false);\n    setAddComplete(true);\n  };\n\n  // 取消添加\n  const handleCancel = useCallback(e => {\n    e.preventDefault();\n    setAdding(false);\n    setAddComplete(false);\n    setDraftOrPublish(false);\n    // 取消添加时移除sessionStorage中存储的临时信息\n    sessionStorage.removeItem(addingTitle.title);\n    // 清空当前问题草稿\n    setAddingTitle({});\n  }, [adding, addComplete, addingTitle]);\n\n  // 编辑问题\n  const [queToEdit, setQueToEdit] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [edintType, setEdingType] = useState(null);\n  const [editCompleted, setEditCompleted] = useState(false);\n  const [initialData, setInitialData] = useState(null);\n  const lastEditTitle = useRef('');\n\n  /*\r\n  * 编辑问题\r\n  * @title 需要编辑的问题title\r\n  * @deleteOrEdit Bool, true:delete, false:edit*/\n  function editQue(title, delteOrEdit) {\n    // 删除问题\n    if (delteOrEdit) {\n      setQues(prevQues => prevQues.filter(que => que.title !== title));\n      sessionStorage.removeItem(title);\n      setIsEditing(false);\n      setQueToEdit('');\n      return;\n    }\n    // 编辑问题\n    // 需要编辑的问题\n    const data = JSON.parse(sessionStorage.getItem(title));\n    console.log('点击编辑前的数据------', data);\n    const type = data.type;\n    setQueToEdit(title);\n    setIsEditing(true);\n    setEdingType(type);\n    // 将点击编辑前的数据保留下来\n    setInitialData(data);\n    lastEditTitle.current = title;\n  }\n\n  /*\r\n  * 确认编辑\r\n  * */\n  function confirmEdit(title) {\n    setQueToEdit(title);\n    setIsEditing(false);\n    setEditCompleted(true);\n    // 更新 ques\n    const newQues = ques;\n    newQues.forEach(que => {\n      if (que.title === lastEditTitle.current) {\n        que.title = title;\n        que.type = edintType;\n      }\n    });\n    setQues(newQues);\n  }\n\n  /*\r\n  * 取消编辑\r\n  * */\n  function cancelEdit() {\n    setQueToEdit('');\n    setIsEditing(false);\n    setEditCompleted(true);\n    // 重传 ques\n    setQues(ques);\n  }\n\n  // 将survey保存到草稿\n  const [doSaveDraft, {}] = useSaveSurveyMutation();\n  const [doSaveDraftQue, {}] = useCreateQueMutation();\n  const [doUpdateDraft, {}] = useUpdateSurveyMutation();\n  async function saveDraft(e) {\n    e.preventDefault();\n    // 1. 先上传survey的基础信息\n    const data = {\n      attributes: {\n        title: surveyTitle,\n        description: surveyDescr,\n        clientId: localStorage.getItem('token'),\n        published: false\n      }\n    };\n    if (!ques[0] || !surveyTitle || !surveyDescr) {\n      console.log('问题不可为空!');\n      return;\n    }\n    try {\n      const resp = await doSaveDraft(data).unwrap();\n      console.log('保存问卷成功', resp);\n      // 将surveyToken临时储存在本地, 用于问题上传的绑定\n      sessionStorage.setItem('tempSurveyToken', resp.data.documentId);\n    } catch (err) {\n      console.log('保存draft失败', err);\n    }\n    const surveyToken = sessionStorage.getItem('tempSurveyToken');\n    // 将该survey绑定给创建问卷的用户\n    await updateUser('surveys', {\n      id: surveyToken,\n      published: false\n    });\n    // 2. 上传问题信息并绑定survey\n    sessionStorage.removeItem(''); // 移除会话存储中的空白token\n    const queTokens = [];\n    for (const [index, que] of ques.entries()) {\n      const detail = filterQueDetails(que, index, surveyToken);\n      if (!detail) continue;\n      try {\n        const resp = await doSaveDraftQue(detail).unwrap();\n        console.log('保存问题成功', resp);\n        // 将queToken保存在数组中, 用于后续更新survey中的questions\n        queTokens.push(resp.data.documentId);\n      } catch (err) {\n        console.log('保存问题失败', err);\n      }\n    }\n    // 3. 更新survey中的questions\n    data.attributes.questions = JSON.stringify(queTokens);\n    try {\n      const resp = await doUpdateDraft(data).unwrap();\n      console.log('绑定问题成功', resp);\n    } catch (err) {\n      console.log('绑定问题失败', err);\n    }\n    // 4. 清除创建问卷产生的会话存储, 以免影响后续使用\n    sessionStorage.removeItem(`surveyTitle`);\n    sessionStorage.removeItem(`surveyDescr`);\n    sessionStorage.removeItem(`tempSurveyToken`);\n    ques.forEach(q => {\n      sessionStorage.removeItem(q.title);\n    });\n    setDraftOrPublish(true);\n    // 直接刷新页面, 绕开因清理sessionStorage造成的null错误\n    window.location.reload();\n  }\n\n  // 取消问卷\n  function cancelSurvey(e) {\n    e.preventDefault();\n    // 清除创建问卷产生的会话存储, 以免影响后续使用\n    sessionStorage.removeItem(`surveyTitle`);\n    sessionStorage.removeItem(`surveyDescription`);\n    ques.forEach(q => {\n      sessionStorage.removeItem(q.title);\n    });\n    // 清理缓存\n    setQues([]);\n    setSurveyTitle('');\n    setSurveyDescr('');\n  }\n  function publishSurvey() {}\n  useEffect(() => {\n    console.log('publish---------', ques);\n  }, [surveyTitle, surveyDescr, ques]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleTitleChange,\n        type: \"text\",\n        value: surveyTitle,\n        placeholder: '请输入问卷标题'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleDescrChange,\n        type: \"text\",\n        value: surveyDescr,\n        placeholder: '请输入问卷描述'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(GetTitleContext.Provider, {\n        value: draftTitle,\n        children: /*#__PURE__*/_jsxDEV(ConfirmEditContext.Provider, {\n          value: confirmEdit,\n          children: /*#__PURE__*/_jsxDEV(CancelEditContext.Provider, {\n            value: cancelEdit,\n            children: /*#__PURE__*/_jsxDEV(InitialDataContext.Provider, {\n              value: initialData,\n              children: [/*#__PURE__*/_jsxDEV(ReEditQueContext.Provider, {\n                value: editQue,\n                children: /*#__PURE__*/_jsxDEV(IsEditingContext.Provider, {\n                  value: isEditing,\n                  children: /*#__PURE__*/_jsxDEV(EditingQueContext.Provider, {\n                    value: queToEdit,\n                    children: !draftOrPublish && /*#__PURE__*/_jsxDEV(QuesList, {\n                      ques: ques,\n                      editingType: edintType,\n                      editCompleted: editCompleted\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 32\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [!adding && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddQue,\n                  children: \"\\u6DFB\\u52A0\\u95EE\\u9898\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 22\n                }, this), adding && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(AddQue, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCancel,\n                    children: \"\\u53D6\\u6D88\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCompleteQue,\n                    children: \"\\u786E\\u8BA4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: saveDraft,\n                    children: \"\\u4FDD\\u5B58\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: publishSurvey,\n                    children: \"\\u53D1\\u5E03\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: cancelSurvey,\n                    children: '取消'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 3\n  }, this);\n};\n_s(Publish, \"wFHUzihWe/7CEmU3aUpMUQ+avuE=\", false, function () {\n  return [useSaveSurveyMutation, useCreateQueMutation, useUpdateSurveyMutation];\n});\n_c = Publish;\nexport default Publish;\nvar _c;\n$RefreshReg$(_c, \"Publish\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","QuesList","AddQue","GetTitleContext","useCreateQueMutation","useSaveSurveyMutation","useUpdateSurveyMutation","filterQueDetails","CancelEditContext","ConfirmEditContext","EditingQueContext","InitialDataContext","IsEditingContext","ReEditQueContext","updateUser","jsxDEV","_jsxDEV","Fragment","_Fragment","Publish","_s","adding","setAdding","addingTitle","setAddingTitle","addComplete","setAddComplete","ques","setQues","draftOrPublish","setDraftOrPublish","storageSurveyTitle","sessionStorage","getItem","storageSurveyDescription","isFromDrafts","nums","length","questionDatas","i","key","data","JSON","parse","push","sort","a","b","index","map","newData","setItem","title","stringify","surveyTitle","setSurveyTitle","handleTitleChange","e","newTitle","target","value","surveyDescr","setSurveyDescr","handleDescrChange","newDescr","handleAddQue","preventDefault","id","Date","now","draftTitle","console","log","saveTitle","queType","type","handleCompleteQue","handleCancel","removeItem","queToEdit","setQueToEdit","isEditing","setIsEditing","edintType","setEdingType","editCompleted","setEditCompleted","initialData","setInitialData","lastEditTitle","editQue","delteOrEdit","prevQues","filter","que","current","confirmEdit","newQues","forEach","cancelEdit","doSaveDraft","doSaveDraftQue","doUpdateDraft","saveDraft","attributes","description","clientId","localStorage","published","resp","unwrap","documentId","err","surveyToken","queTokens","entries","detail","questions","q","window","location","reload","cancelSurvey","publishSurvey","children","action","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Provider","editingType","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/publish.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport QuesList from \"../components/editSurvey/quesList\";\r\nimport AddQue from \"../components/editSurvey/addQue\";\r\nimport {GetTitleContext} from \"../components/editSurvey/context/getTitleContext\";\r\nimport {useCreateQueMutation, useSaveSurveyMutation, useUpdateSurveyMutation} from \"../services/apis\";\r\nimport {filterQueDetails} from \"../components/editSurvey/filterQueDetails\";\r\nimport {\r\n\tCancelEditContext,\r\n\tConfirmEditContext,\r\n\tEditingQueContext, InitialDataContext,\r\n\tIsEditingContext,\r\n\tReEditQueContext\r\n} from \"../components/editSurvey/context/reEditQueContext\";\r\nimport {updateUser} from \"../utils/updateUser\";\r\n\r\nconst Publish = () => {\r\n\t// 监测是否正在添加某个问题\r\n\tconst [adding, setAdding] = useState(false);\r\n\t// 正在添加的问题信息\r\n\tconst [addingTitle, setAddingTitle] = useState({});\r\n\t// 是否添加完毕\r\n\tconst [addComplete, setAddComplete] = useState(false);\r\n\t//  问题列表\r\n\tconst [ques, setQues] = useState([]);\r\n\t// const queType = useContext(QueContext);\r\n\t// 检测是否保存或发布\r\n\tconst [draftOrPublish, setDraftOrPublish] = useState(false);\r\n\t// 从草稿页面点击编辑跳转到publish时\r\n\t// 检测sessionStorage中是否存在需要编辑的键值对, 若为null则不是从草稿页面跳转过来的\r\n\tconst storageSurveyTitle = sessionStorage.getItem('surveyTitle');\r\n\tconst storageSurveyDescription = sessionStorage.getItem('surveyDescription');\r\n\tconst isFromDrafts = (storageSurveyTitle !== null || storageSurveyDescription !== null);\r\n\tif (isFromDrafts) { // 如果跳转自drafts的编辑link\r\n\t\tconst nums = sessionStorage.length; // 相应draft从服务器拉取到本地的数据数目\r\n\t\tconst questionDatas = [];\r\n\t\tfor (let i = 0; i < nums; i++) {\r\n\t\t\t// 读取每个数据的key, 若为题目key则存储在列表中, 用于之后上传给ques\r\n\t\t\tconst key = sessionStorage.key(i);\r\n\t\t\tif (key === 'surveyTitle' || key === 'surveyDescription') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst data = JSON.parse(sessionStorage.getItem(key));\r\n\t\t\tquestionDatas.push(data);\r\n\t\t}\r\n\t\t// 将data按index升序排序\r\n\t\tquestionDatas.sort((a, b) => a.index - b.index);\r\n\t\t// 将所需数据传递给ques\r\n\t\tquestionDatas.map(data => {\r\n\t\t\tconst newData = {...data};\r\n\t\t\tdelete newData.index;\r\n\t\t\tsessionStorage.setItem(`${newData.title}`, JSON.stringify(newData));\r\n\t\t\tsetQues([...ques, newData]);\r\n\t\t})\r\n\t}\r\n\t// 问卷标题\r\n\tconst [surveyTitle, setSurveyTitle] = useState(isFromDrafts ? storageSurveyTitle : '');\r\n\tconst handleTitleChange = useCallback(e => {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tsetSurveyTitle(newTitle);\r\n\t\t// 将标题存储到 sessionStorage\r\n\t\tsessionStorage.setItem('surveyTitle', newTitle);\r\n\t}, []);\r\n\t// 问卷描述\r\n\tconst [surveyDescr, setSurveyDescr] = useState(isFromDrafts ? storageSurveyDescription : '');\r\n\tconst handleDescrChange = useCallback(e => {\r\n\t\tconst newDescr = e.target.value;\r\n\t\tsetSurveyDescr(newDescr);\r\n\t\t// 将描述存储到 sessionStorage\r\n\t\tsessionStorage.setItem('surveyDescription', newDescr);\r\n\t}, [])\r\n\r\n\t// 添加问题\r\n\tconst handleAddQue = useCallback((e) => {\r\n\t\te.preventDefault();\r\n\t\tsetAdding(true);\r\n\t\tsetAddComplete(false);\r\n\t\tsetDraftOrPublish(false);\r\n\t\t// 清除上一次草稿中保存的题目title, 避免因取消空标题的添加造成的清除前一个sessionStorage\r\n\t\tsetAddingTitle({title: '', id: Date.now()});\r\n\t}, [adding, addComplete]);\r\n\t// 获得问题 title 用于定位 sessionStorage 中的存储\r\n\t// 草稿---未确认添加\r\n\tfunction draftTitle(title) {\r\n\t\tconsole.log(title);\r\n\t\t// 将获得的标题传给 addingTitle, 即正在使用的标题\r\n\t\tsetAddingTitle({title, id: Date.now()});\r\n\t}\r\n\r\n\t// 确认添加---保存问题->ques\r\n\tfunction saveTitle() {\r\n\t\tconst queType = JSON.parse(sessionStorage.getItem(addingTitle.title)).type;\r\n\t\tsetQues([...ques, {...addingTitle, type: queType}]);\r\n\t}\r\n\r\n\t// 确认添加\r\n\tconst handleCompleteQue = e => {\r\n\t\te.preventDefault()\r\n\t\tsaveTitle();\r\n\t\tsetAdding(false);\r\n\t\tsetAddComplete(true);\r\n\t};\r\n\r\n\r\n\t// 取消添加\r\n\tconst handleCancel = useCallback(e => {\r\n\t\te.preventDefault();\r\n\t\tsetAdding(false);\r\n\t\tsetAddComplete(false);\r\n\t\tsetDraftOrPublish(false);\r\n\t\t// 取消添加时移除sessionStorage中存储的临时信息\r\n\t\tsessionStorage.removeItem(addingTitle.title);\r\n\t\t// 清空当前问题草稿\r\n\t\tsetAddingTitle({});\r\n\t}, [adding, addComplete, addingTitle])\r\n\r\n\r\n\t// 编辑问题\r\n\tconst [queToEdit, setQueToEdit] = useState('');\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst [edintType, setEdingType] = useState(null);\r\n\tconst [editCompleted, setEditCompleted] = useState(false);\r\n\tconst [initialData, setInitialData] = useState(null);\r\n\tconst lastEditTitle = useRef('');\r\n\r\n\t/*\r\n\t* 编辑问题\r\n\t* @title 需要编辑的问题title\r\n\t* @deleteOrEdit Bool, true:delete, false:edit*/\r\n\tfunction editQue(title, delteOrEdit) {\r\n\t\t// 删除问题\r\n\t\tif (delteOrEdit) {\r\n\t\t\tsetQues(prevQues => prevQues.filter(que => que.title !== title));\r\n\t\t\tsessionStorage.removeItem(title);\r\n\t\t\tsetIsEditing(false);\r\n\t\t\tsetQueToEdit('');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 编辑问题\r\n\t\t// 需要编辑的问题\r\n\t\tconst data = JSON.parse(sessionStorage.getItem(title));\r\n\t\tconsole.log('点击编辑前的数据------', data);\r\n\t\tconst type = data.type;\r\n\t\tsetQueToEdit(title);\r\n\t\tsetIsEditing(true);\r\n\t\tsetEdingType(type)\r\n\t\t// 将点击编辑前的数据保留下来\r\n\t\tsetInitialData(data);\r\n\t\tlastEditTitle.current = title;\r\n\t}\r\n\r\n\t/*\r\n\t* 确认编辑\r\n\t* */\r\n\tfunction confirmEdit(title) {\r\n\t\tsetQueToEdit(title);\r\n\t\tsetIsEditing(false);\r\n\t\tsetEditCompleted(true);\r\n\t\t// 更新 ques\r\n\t\tconst newQues = ques;\r\n\t\tnewQues.forEach(que => {\r\n\t\t\tif (que.title === lastEditTitle.current) {\r\n\t\t\t\tque.title = title;\r\n\t\t\t\tque.type = edintType;\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetQues(newQues);\r\n\t}\r\n\r\n\t/*\r\n\t* 取消编辑\r\n\t* */\r\n\tfunction cancelEdit() {\r\n\t\tsetQueToEdit('');\r\n\t\tsetIsEditing(false);\r\n\t\tsetEditCompleted(true);\r\n\t\t// 重传 ques\r\n\t\tsetQues(ques);\r\n\t}\r\n\r\n\t// 将survey保存到草稿\r\n\tconst [doSaveDraft, {}] = useSaveSurveyMutation();\r\n\tconst [doSaveDraftQue, {}] = useCreateQueMutation();\r\n\tconst [doUpdateDraft, {}] = useUpdateSurveyMutation();\r\n\r\n\tasync function saveDraft(e) {\r\n\t\te.preventDefault();\r\n\t\t// 1. 先上传survey的基础信息\r\n\t\tconst data = {\r\n\t\t\tattributes: {\r\n\t\t\t\ttitle: surveyTitle,\r\n\t\t\t\tdescription: surveyDescr,\r\n\t\t\t\tclientId: localStorage.getItem('token'),\r\n\t\t\t\tpublished: false\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (!ques[0] || !surveyTitle || !surveyDescr) {\r\n\t\t\tconsole.log('问题不可为空!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst resp = await doSaveDraft(data).unwrap();\r\n\t\t\tconsole.log('保存问卷成功', resp);\r\n\t\t\t// 将surveyToken临时储存在本地, 用于问题上传的绑定\r\n\t\t\tsessionStorage.setItem('tempSurveyToken', resp.data.documentId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('保存draft失败', err);\r\n\t\t}\r\n\t\tconst surveyToken = sessionStorage.getItem('tempSurveyToken');\r\n\t\t// 将该survey绑定给创建问卷的用户\r\n\t\tawait updateUser('surveys', {id: surveyToken, published: false});\r\n\t\t// 2. 上传问题信息并绑定survey\r\n\t\tsessionStorage.removeItem(''); // 移除会话存储中的空白token\r\n\t\tconst queTokens = [];\r\n\t\tfor (const [index, que] of ques.entries()) {\r\n\t\t\tconst detail = filterQueDetails(que, index, surveyToken);\r\n\t\t\tif (!detail) continue;\r\n\t\t\ttry {\r\n\t\t\t\tconst resp = await doSaveDraftQue(detail).unwrap();\r\n\t\t\t\tconsole.log('保存问题成功', resp);\r\n\t\t\t\t// 将queToken保存在数组中, 用于后续更新survey中的questions\r\n\t\t\t\tqueTokens.push(resp.data.documentId);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log('保存问题失败', err);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 3. 更新survey中的questions\r\n\t\tdata.attributes.questions = JSON.stringify(queTokens);\r\n\t\ttry {\r\n\t\t\tconst resp = await doUpdateDraft(data).unwrap();\r\n\t\t\tconsole.log('绑定问题成功', resp);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('绑定问题失败', err);\r\n\t\t}\r\n\t\t// 4. 清除创建问卷产生的会话存储, 以免影响后续使用\r\n\t\tsessionStorage.removeItem(`surveyTitle`);\r\n\t\tsessionStorage.removeItem(`surveyDescr`);\r\n\t\tsessionStorage.removeItem(`tempSurveyToken`);\r\n\t\tques.forEach(q => {\r\n\t\t\tsessionStorage.removeItem(q.title);\r\n\t\t})\r\n\t\tsetDraftOrPublish(true);\r\n\t\t// 直接刷新页面, 绕开因清理sessionStorage造成的null错误\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\t// 取消问卷\r\n\tfunction cancelSurvey(e) {\r\n\t\te.preventDefault();\r\n\t\t// 清除创建问卷产生的会话存储, 以免影响后续使用\r\n\t\tsessionStorage.removeItem(`surveyTitle`);\r\n\t\tsessionStorage.removeItem(`surveyDescription`);\r\n\t\tques.forEach(q => {\r\n\t\t\tsessionStorage.removeItem(q.title);\r\n\t\t})\r\n\t\t// 清理缓存\r\n\t\tsetQues([]);\r\n\t\tsetSurveyTitle('');\r\n\t\tsetSurveyDescr('');\r\n\t}\r\n\r\n\tfunction publishSurvey() {\r\n\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('publish---------', ques);\r\n\t}, [surveyTitle, surveyDescr, ques]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form action=\"\">\r\n\t\t\t\t<input onChange={handleTitleChange} type=\"text\" value={surveyTitle} placeholder={'请输入问卷标题'}/>\r\n\t\t\t\t<input onChange={handleDescrChange} type=\"text\" value={surveyDescr} placeholder={'请输入问卷描述'}/>\r\n\t\t\t\t<GetTitleContext.Provider value={draftTitle}>\r\n\t\t\t\t\t<ConfirmEditContext.Provider value={confirmEdit}>\r\n\t\t\t\t\t\t<CancelEditContext.Provider value={cancelEdit}>\r\n\t\t\t\t\t\t\t<InitialDataContext.Provider value={initialData}>\r\n\t\t\t\t\t\t\t\t<ReEditQueContext.Provider value={editQue}>\r\n\t\t\t\t\t\t\t\t\t<IsEditingContext.Provider value={isEditing}>\r\n\t\t\t\t\t\t\t\t\t\t<EditingQueContext.Provider value={queToEdit}>\r\n\t\t\t\t\t\t\t\t\t\t\t{!draftOrPublish && <QuesList ques={ques} editingType={edintType} editCompleted={editCompleted}/>}\r\n\t\t\t\t\t\t\t\t\t\t</EditingQueContext.Provider>\r\n\t\t\t\t\t\t\t\t\t</IsEditingContext.Provider>\r\n\t\t\t\t\t\t\t\t</ReEditQueContext.Provider>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{!adding && <button onClick={handleAddQue}>添加问题</button>}\r\n\t\t\t\t\t\t\t\t\t{adding && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* 使用context传递获取标题的函数 */}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* 存储到草稿中, 确认添加时通过handleCompleteQue将问题存储到ques, 取消时通过handleCancel移除草稿 */}\r\n\t\t\t\t\t\t\t\t\t\t\t<AddQue/>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={handleCancel}>取消</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={handleCompleteQue}>确认</button>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={saveDraft}>保存</button>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={publishSurvey}>发布</button>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={cancelSurvey}>{'取消'}</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</InitialDataContext.Provider>\r\n\t\t\t\t\t\t</CancelEditContext.Provider>\r\n\t\t\t\t\t</ConfirmEditContext.Provider>\r\n\t\t\t\t</GetTitleContext.Provider>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Publish;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
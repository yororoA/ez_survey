{"ast":null,"code":"import { useLoginUserMutation, useRegisterUserMutation, useFindUserQuery, userApi } from \"./apis\";\nexport function useLogin() {}\n\n// 注册---触发器, 结果集\nconst [handleRegister, result] = useRegisterUserMutation();\nexport async function register(name, pwd) {\n  const data = {\n    attributes: {\n      username: name,\n      pwd\n    }\n  };\n  try {\n    // 通过 unwrap 获取原始响应\n    const resp = await handleRegister(data).unwrap();\n    console.log('注册成功');\n    return true;\n  } catch (err) {\n    console.log('注册失败: ', err);\n    return false;\n  }\n}","map":{"version":3,"names":["useLoginUserMutation","useRegisterUserMutation","useFindUserQuery","userApi","useLogin","handleRegister","result","register","name","pwd","data","attributes","username","resp","unwrap","console","log","err"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/utils/login.js"],"sourcesContent":["import {useLoginUserMutation, useRegisterUserMutation, useFindUserQuery, userApi} from \"./apis\";\r\n\r\n\r\nexport function useLogin() {\r\n}\r\n\r\n// 注册---触发器, 结果集\r\nconst [handleRegister, result] = useRegisterUserMutation();\r\n\r\nexport async function register(name, pwd) {\r\n\tconst data = {\r\n\t\tattributes:{\r\n\t\t\tusername:name,\r\n\t\t\tpwd\r\n\t\t}\r\n\t}\r\n\ttry {\r\n\t\t// 通过 unwrap 获取原始响应\r\n\t\tconst resp = await handleRegister(data).unwrap();\r\n\t\tconsole.log('注册成功')\r\n\t\treturn true;\r\n\t}catch (err){\r\n\t\tconsole.log('注册失败: ', err);\r\n\t\treturn false;\r\n\t}\r\n}"],"mappings":"AAAA,SAAQA,oBAAoB,EAAEC,uBAAuB,EAAEC,gBAAgB,EAAEC,OAAO,QAAO,QAAQ;AAG/F,OAAO,SAASC,QAAQA,CAAA,EAAG,CAC3B;;AAEA;AACA,MAAM,CAACC,cAAc,EAAEC,MAAM,CAAC,GAAGL,uBAAuB,CAAC,CAAC;AAE1D,OAAO,eAAeM,QAAQA,CAACC,IAAI,EAAEC,GAAG,EAAE;EACzC,MAAMC,IAAI,GAAG;IACZC,UAAU,EAAC;MACVC,QAAQ,EAACJ,IAAI;MACbC;IACD;EACD,CAAC;EACD,IAAI;IACH;IACA,MAAMI,IAAI,GAAG,MAAMR,cAAc,CAACK,IAAI,CAAC,CAACI,MAAM,CAAC,CAAC;IAChDC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,OAAO,IAAI;EACZ,CAAC,QAAOC,GAAG,EAAC;IACXF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,GAAG,CAAC;IAC1B,OAAO,KAAK;EACb;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\components\\\\editSurvey\\\\ques\\\\single.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { GetTitleContext } from \"../context/getTitleContext\";\nimport { CancelEditContext, ConfirmEditContext, EditingQueContext, InitialDataContext, IsEditingContext } from \"../context/reEditQueContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Single = () => {\n  _s();\n  // edit\n  const isEditing = useContext(IsEditingContext);\n  const editingQue = useContext(EditingQueContext);\n  const initialData = useContext(InitialDataContext);\n  const confirmEdit = useContext(ConfirmEditContext);\n  const cancelEdit = useContext(CancelEditContext);\n  // 存储问题内容\n  const [question, setQuestion] = useState(isEditing ? editingQue : '');\n  // 存储选项列表, [{id, content}]\n  const [options, setOptions] = useState(isEditing ? initialData.options : []);\n  // 当前选项编号, 1 -> A\n  const [optionIndex, setOptionIndex] = useState(isEditing ? initialData.options.length + 1 : 1);\n\n  // 问题输入\n  // 获取返回标题的函数\n  const getTitle = useContext(GetTitleContext);\n  // 每次修改标题时的上一个标题\n  const lastTitle = useRef(question);\n  const handleQuestionChange = useCallback(e => {\n    const quesTitle = e.target.value;\n    // 清除上一次的会话内存\n    if (lastTitle.current) {\n      sessionStorage.removeItem(lastTitle.current);\n    }\n    lastTitle.current = quesTitle;\n    setQuestion(quesTitle);\n    // ...sessionStorage\n    const data = {\n      title: quesTitle,\n      options,\n      type: 'single'\n    };\n    sessionStorage.setItem(`${quesTitle}`, JSON.stringify(data));\n    // 将问题标题返回给publish\n    getTitle(quesTitle);\n  }, [options]);\n\n  // 添加新选项\n  const addOption = useCallback(e => {\n    e.preventDefault();\n    // 选项标识 A,B,C,...\n    const label = String.fromCharCode(optionIndex + 64);\n    // 选项编号递增, 用于下次生成新标识, 函数式更新避免依赖optionIndex\n    setOptionIndex(prevIndex => prevIndex + 1);\n    // \t添加新选项到数组, 初始为空\n    const newOptions = [...options, {\n      id: label,\n      content: ''\n    }];\n    setOptions(newOptions);\n    // ...sessionStorage\n    const data = {\n      title: question,\n      options: newOptions,\n      type: 'single'\n    };\n    sessionStorage.setItem(`${question}`, JSON.stringify(data));\n  }, [question, options]);\n\n  // 选项内容变化\n  const handleOptionChange = useCallback(e => {\n    // 更新对应选项内容\n    // console.log(e.target.value)\n    const id = e.target.id;\n    // 若选项id相同则更新content\n    const newOptions = options.map(option => option.id === id ? {\n      ...option,\n      content: e.target.value\n    } : option);\n    setOptions(newOptions);\n    // ...sessionStorage\n    const data = {\n      title: question,\n      options: newOptions,\n      type: 'single'\n    };\n    sessionStorage.setItem(`${question}`, JSON.stringify(data));\n  }, [question, options]);\n\n  // 确认编辑\n  function handleConfirmEdit(e) {\n    e.preventDefault();\n    sessionStorage.removeItem('');\n    confirmEdit(question);\n  }\n\n  // 取消编辑\n  function handleCancelEdit(e) {\n    e.preventDefault();\n    sessionStorage.removeItem('');\n    sessionStorage.removeItem(question);\n    sessionStorage.setItem(editingQue, JSON.stringify(initialData));\n    cancelEdit();\n  }\n  useEffect(() => {\n    // console.log(options);\n  }, [options]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleQuestionChange,\n      value: question,\n      placeholder: '请输入问题'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: option.id,\n          value: option.content,\n          onChange: handleOptionChange,\n          placeholder: '请输入内容'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 8\n        }, this)]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addOption,\n      children: \"\\u6DFB\\u52A0\\u9009\\u9879\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmEdit,\n        children: '确认'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelEdit,\n        children: '取消'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n};\n_s(Single, \"/qmMfHjSpqVDhjiLaOe91NWpvEs=\");\n_c = Single;\nexport default Single;\nvar _c;\n$RefreshReg$(_c, \"Single\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useRef","useState","GetTitleContext","CancelEditContext","ConfirmEditContext","EditingQueContext","InitialDataContext","IsEditingContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Single","_s","isEditing","editingQue","initialData","confirmEdit","cancelEdit","question","setQuestion","options","setOptions","optionIndex","setOptionIndex","length","getTitle","lastTitle","handleQuestionChange","e","quesTitle","target","value","current","sessionStorage","removeItem","data","title","type","setItem","JSON","stringify","addOption","preventDefault","label","String","fromCharCode","prevIndex","newOptions","id","content","handleOptionChange","map","option","handleConfirmEdit","handleCancelEdit","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/components/editSurvey/ques/single.jsx"],"sourcesContent":["import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\r\nimport {GetTitleContext} from \"../context/getTitleContext\";\r\nimport {\r\n\tCancelEditContext,\r\n\tConfirmEditContext,\r\n\tEditingQueContext,\r\n\tInitialDataContext,\r\n\tIsEditingContext\r\n} from \"../context/reEditQueContext\";\r\n\r\nconst Single = () => {\r\n\t// edit\r\n\tconst isEditing = useContext(IsEditingContext);\r\n\tconst editingQue = useContext(EditingQueContext);\r\n\tconst initialData = useContext(InitialDataContext);\r\n\tconst confirmEdit = useContext(ConfirmEditContext);\r\n\tconst cancelEdit = useContext(CancelEditContext);\r\n\t// 存储问题内容\r\n\tconst [question, setQuestion] = useState(isEditing ? editingQue : '');\r\n\t// 存储选项列表, [{id, content}]\r\n\tconst [options, setOptions] = useState(isEditing ? initialData.options : []);\r\n\t// 当前选项编号, 1 -> A\r\n\tconst [optionIndex, setOptionIndex] = useState(isEditing ? initialData.options.length + 1 : 1);\r\n\r\n\t// 问题输入\r\n\t// 获取返回标题的函数\r\n\tconst getTitle = useContext(GetTitleContext);\r\n\t// 每次修改标题时的上一个标题\r\n\tconst lastTitle = useRef(question);\r\n\tconst handleQuestionChange = useCallback(e => {\r\n\t\tconst quesTitle = e.target.value;\r\n\t\t// 清除上一次的会话内存\r\n\t\tif (lastTitle.current) {\r\n\t\t\tsessionStorage.removeItem(lastTitle.current);\r\n\t\t}\r\n\t\tlastTitle.current = quesTitle\r\n\t\tsetQuestion(quesTitle);\r\n\t\t// ...sessionStorage\r\n\t\tconst data = {\r\n\t\t\ttitle: quesTitle,\r\n\t\t\toptions,\r\n\t\t\ttype: 'single'\r\n\t\t};\r\n\t\tsessionStorage.setItem(`${quesTitle}`, JSON.stringify(data));\r\n\t\t// 将问题标题返回给publish\r\n\t\tgetTitle(quesTitle);\r\n\t}, [options]);\r\n\r\n\t// 添加新选项\r\n\tconst addOption = useCallback(e => {\r\n\t\te.preventDefault();\r\n\t\t// 选项标识 A,B,C,...\r\n\t\tconst label = String.fromCharCode(optionIndex + 64);\r\n\t\t// 选项编号递增, 用于下次生成新标识, 函数式更新避免依赖optionIndex\r\n\t\tsetOptionIndex(prevIndex => prevIndex + 1);\r\n\t\t// \t添加新选项到数组, 初始为空\r\n\t\tconst newOptions = [...options, {id: label, content: ''}];\r\n\t\tsetOptions(newOptions);\r\n\t\t// ...sessionStorage\r\n\t\tconst data = {\r\n\t\t\ttitle: question,\r\n\t\t\toptions: newOptions,\r\n\t\t\ttype: 'single'\r\n\t\t}\r\n\t\tsessionStorage.setItem(`${question}`, JSON.stringify(data));\r\n\t}, [question, options]);\r\n\r\n\t// 选项内容变化\r\n\tconst handleOptionChange = useCallback((e) => {\r\n\t\t// 更新对应选项内容\r\n\t\t// console.log(e.target.value)\r\n\t\tconst id = e.target.id;\r\n\t\t// 若选项id相同则更新content\r\n\t\tconst newOptions = options.map(option => option.id === id ? {...option, content: e.target.value} : option);\r\n\t\tsetOptions(newOptions);\r\n\t\t// ...sessionStorage\r\n\t\tconst data = {\r\n\t\t\ttitle: question,\r\n\t\t\toptions: newOptions,\r\n\t\t\ttype: 'single'\r\n\t\t}\r\n\t\tsessionStorage.setItem(`${question}`, JSON.stringify(data));\r\n\t}, [question, options]);\r\n\r\n\r\n\t// 确认编辑\r\n\tfunction handleConfirmEdit(e) {\r\n\t\te.preventDefault();\r\n\t\tsessionStorage.removeItem('');\r\n\t\tconfirmEdit(question);\r\n\t}\r\n\r\n\t// 取消编辑\r\n\tfunction handleCancelEdit(e) {\r\n\t\te.preventDefault();\r\n\t\tsessionStorage.removeItem('');\r\n\t\tsessionStorage.removeItem(question);\r\n\t\tsessionStorage.setItem(editingQue, JSON.stringify(initialData));\r\n\t\tcancelEdit();\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(options);\r\n\t}, [options])\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input onChange={handleQuestionChange} value={question} placeholder={'请输入问题'}/>\r\n\t\t\t{/* 选项列表 */}\r\n\t\t\t<div>\r\n\t\t\t\t{options.map(\r\n\t\t\t\t\t(option, index) => (\r\n\t\t\t\t\t\t<div key={option.id}>\r\n\t\t\t\t\t\t\t<span>{option.id}</span>\r\n\t\t\t\t\t\t\t<input type=\"text\" id={option.id} value={option.content} onChange={handleOptionChange}\r\n\t\t\t\t\t\t\t\t\t\t placeholder={'请输入内容'}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<button onClick={addOption}>添加选项</button>\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button onClick={handleConfirmEdit}>{'确认'}</button>\r\n\t\t\t\t\t<button onClick={handleCancelEdit}>{'取消'}</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Single;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACjF,SAAQC,eAAe,QAAO,4BAA4B;AAC1D,SACCC,iBAAiB,EACjBC,kBAAkB,EAClBC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,QACV,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAMC,SAAS,GAAGhB,UAAU,CAACS,gBAAgB,CAAC;EAC9C,MAAMQ,UAAU,GAAGjB,UAAU,CAACO,iBAAiB,CAAC;EAChD,MAAMW,WAAW,GAAGlB,UAAU,CAACQ,kBAAkB,CAAC;EAClD,MAAMW,WAAW,GAAGnB,UAAU,CAACM,kBAAkB,CAAC;EAClD,MAAMc,UAAU,GAAGpB,UAAU,CAACK,iBAAiB,CAAC;EAChD;EACA,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACa,SAAS,GAAGC,UAAU,GAAG,EAAE,CAAC;EACrE;EACA,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAACa,SAAS,GAAGE,WAAW,CAACK,OAAO,GAAG,EAAE,CAAC;EAC5E;EACA,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAACa,SAAS,GAAGE,WAAW,CAACK,OAAO,CAACI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;;EAE9F;EACA;EACA,MAAMC,QAAQ,GAAG5B,UAAU,CAACI,eAAe,CAAC;EAC5C;EACA,MAAMyB,SAAS,GAAG3B,MAAM,CAACmB,QAAQ,CAAC;EAClC,MAAMS,oBAAoB,GAAG/B,WAAW,CAACgC,CAAC,IAAI;IAC7C,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChC;IACA,IAAIL,SAAS,CAACM,OAAO,EAAE;MACtBC,cAAc,CAACC,UAAU,CAACR,SAAS,CAACM,OAAO,CAAC;IAC7C;IACAN,SAAS,CAACM,OAAO,GAAGH,SAAS;IAC7BV,WAAW,CAACU,SAAS,CAAC;IACtB;IACA,MAAMM,IAAI,GAAG;MACZC,KAAK,EAAEP,SAAS;MAChBT,OAAO;MACPiB,IAAI,EAAE;IACP,CAAC;IACDJ,cAAc,CAACK,OAAO,CAAC,GAAGT,SAAS,EAAE,EAAEU,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;IAC5D;IACAV,QAAQ,CAACI,SAAS,CAAC;EACpB,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMqB,SAAS,GAAG7C,WAAW,CAACgC,CAAC,IAAI;IAClCA,CAAC,CAACc,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACvB,WAAW,GAAG,EAAE,CAAC;IACnD;IACAC,cAAc,CAACuB,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IAC1C;IACA,MAAMC,UAAU,GAAG,CAAC,GAAG3B,OAAO,EAAE;MAAC4B,EAAE,EAAEL,KAAK;MAAEM,OAAO,EAAE;IAAE,CAAC,CAAC;IACzD5B,UAAU,CAAC0B,UAAU,CAAC;IACtB;IACA,MAAMZ,IAAI,GAAG;MACZC,KAAK,EAAElB,QAAQ;MACfE,OAAO,EAAE2B,UAAU;MACnBV,IAAI,EAAE;IACP,CAAC;IACDJ,cAAc,CAACK,OAAO,CAAC,GAAGpB,QAAQ,EAAE,EAAEqB,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACjB,QAAQ,EAAEE,OAAO,CAAC,CAAC;;EAEvB;EACA,MAAM8B,kBAAkB,GAAGtD,WAAW,CAAEgC,CAAC,IAAK;IAC7C;IACA;IACA,MAAMoB,EAAE,GAAGpB,CAAC,CAACE,MAAM,CAACkB,EAAE;IACtB;IACA,MAAMD,UAAU,GAAG3B,OAAO,CAAC+B,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAC,GAAGI,MAAM;MAAEH,OAAO,EAAErB,CAAC,CAACE,MAAM,CAACC;IAAK,CAAC,GAAGqB,MAAM,CAAC;IAC1G/B,UAAU,CAAC0B,UAAU,CAAC;IACtB;IACA,MAAMZ,IAAI,GAAG;MACZC,KAAK,EAAElB,QAAQ;MACfE,OAAO,EAAE2B,UAAU;MACnBV,IAAI,EAAE;IACP,CAAC;IACDJ,cAAc,CAACK,OAAO,CAAC,GAAGpB,QAAQ,EAAE,EAAEqB,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACjB,QAAQ,EAAEE,OAAO,CAAC,CAAC;;EAGvB;EACA,SAASiC,iBAAiBA,CAACzB,CAAC,EAAE;IAC7BA,CAAC,CAACc,cAAc,CAAC,CAAC;IAClBT,cAAc,CAACC,UAAU,CAAC,EAAE,CAAC;IAC7BlB,WAAW,CAACE,QAAQ,CAAC;EACtB;;EAEA;EACA,SAASoC,gBAAgBA,CAAC1B,CAAC,EAAE;IAC5BA,CAAC,CAACc,cAAc,CAAC,CAAC;IAClBT,cAAc,CAACC,UAAU,CAAC,EAAE,CAAC;IAC7BD,cAAc,CAACC,UAAU,CAAChB,QAAQ,CAAC;IACnCe,cAAc,CAACK,OAAO,CAACxB,UAAU,EAAEyB,IAAI,CAACC,SAAS,CAACzB,WAAW,CAAC,CAAC;IAC/DE,UAAU,CAAC,CAAC;EACb;EAEAnB,SAAS,CAAC,MAAM;IACf;EAAA,CACA,EAAE,CAACsB,OAAO,CAAC,CAAC;EAGb,oBACCZ,OAAA;IAAA+C,QAAA,gBACC/C,OAAA;MAAOgD,QAAQ,EAAE7B,oBAAqB;MAACI,KAAK,EAAEb,QAAS;MAACuC,WAAW,EAAE;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE/ErD,OAAA;MAAA+C,QAAA,EACEnC,OAAO,CAAC+B,GAAG,CACX,CAACC,MAAM,EAAEU,KAAK,kBACbtD,OAAA;QAAA+C,QAAA,gBACC/C,OAAA;UAAA+C,QAAA,EAAOH,MAAM,CAACJ;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBrD,OAAA;UAAO6B,IAAI,EAAC,MAAM;UAACW,EAAE,EAAEI,MAAM,CAACJ,EAAG;UAACjB,KAAK,EAAEqB,MAAM,CAACH,OAAQ;UAACO,QAAQ,EAAEN,kBAAmB;UAClFO,WAAW,EAAE;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA,GAHlBT,MAAM,CAACJ,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrD,OAAA;MAAQuD,OAAO,EAAEtB,SAAU;MAAAc,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxChD,SAAS,iBACTL,OAAA,CAAAE,SAAA;MAAA6C,QAAA,gBACC/C,OAAA;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLrD,OAAA;QAAQuD,OAAO,EAAEV,iBAAkB;QAAAE,QAAA,EAAE;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACnDrD,OAAA;QAAQuD,OAAO,EAAET,gBAAiB;QAAAC,QAAA,EAAE;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA,eACjD,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAACjD,EAAA,CAxHID,MAAM;AAAAqD,EAAA,GAANrD,MAAM;AA0HZ,eAAeA,MAAM;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
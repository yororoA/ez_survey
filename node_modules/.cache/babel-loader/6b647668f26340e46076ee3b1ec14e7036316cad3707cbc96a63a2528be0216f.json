{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\components\\\\editSurvey\\\\quesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { getDisplayElements } from \"./quesPreview/getDisplayElements\";\nimport { renderQue } from \"./renderQue\";\nimport { EditingQue, IsEditing } from \"./context/reEditQueContext\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuesList = ({\n  ques,\n  editingType,\n  editCompleted\n}) => {\n  _s();\n  const isEditing = useContext(IsEditing);\n  const editingQue = useContext(EditingQue);\n  let newQue = null;\n  const quesFront = [];\n  const quesBehind = [];\n  let index = null;\n  if (isEditing) {\n    ques.forEach((que, ind) => {\n      if (que.title === editingQue) {\n        index = ind;\n      }\n    });\n    ques.forEach((que, ind) => {\n      if (index === 0) {\n        if (que.title !== editingQue) {\n          quesBehind.push(que);\n        }\n      } else if (index === ques.length) {\n        if (que.title !== editingQue) {\n          quesFront.push(que);\n        }\n      } else {\n        if (que.title !== editingQue && ind < index) {\n          quesFront.push(que);\n        } else if (que.title !== editingQue && ind > index) {\n          quesBehind.push(que);\n        }\n      }\n    });\n  }\n  if (editCompleted) {\n    newQue = JSON.parse(sessionStorage.getItem(editingQue));\n  }\n  const newQues = [...quesFront, newQue, ...quesBehind];\n  const elements = getDisplayElements(!editCompleted ? ques : newQues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isEditing && elements, isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [getDisplayElements(quesFront), renderQue(editingType), getDisplayElements(quesBehind)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n_s(QuesList, \"8RcX+IYqh84NK0hhX4WmCKPBqDk=\");\n_c = QuesList;\nexport default QuesList;\nvar _c;\n$RefreshReg$(_c, \"QuesList\");","map":{"version":3,"names":["React","useContext","getDisplayElements","renderQue","EditingQue","IsEditing","Fragment","_Fragment","jsxDEV","_jsxDEV","QuesList","ques","editingType","editCompleted","_s","isEditing","editingQue","newQue","quesFront","quesBehind","index","forEach","que","ind","title","push","length","JSON","parse","sessionStorage","getItem","newQues","elements","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/components/editSurvey/quesList.jsx"],"sourcesContent":["import React, {useContext} from 'react';\r\nimport {getDisplayElements} from \"./quesPreview/getDisplayElements\";\r\nimport {renderQue} from \"./renderQue\";\r\nimport {EditingQue, IsEditing} from \"./context/reEditQueContext\";\r\n\r\nconst QuesList = ({ques, editingType, editCompleted}) => {\r\n\tconst isEditing = useContext(IsEditing);\r\n\tconst editingQue = useContext(EditingQue);\r\n\tlet newQue = null;\r\n\tconst quesFront = [];\r\n\tconst quesBehind = [];\r\n\tlet index = null;\r\n\tif (isEditing) {\r\n\t\tques.forEach((que, ind) => {\r\n\t\t\tif (que.title === editingQue) {\r\n\t\t\t\tindex = ind;\r\n\t\t\t}\r\n\t\t});\r\n\t\tques.forEach((que, ind) => {\r\n\t\t\tif (index === 0) {\r\n\t\t\t\tif (que.title !== editingQue) {\r\n\t\t\t\t\tquesBehind.push(que);\r\n\t\t\t\t}\r\n\t\t\t} else if (index === ques.length) {\r\n\t\t\t\tif (que.title !== editingQue) {\r\n\t\t\t\t\tquesFront.push(que);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (que.title !== editingQue && ind < index) {\r\n\t\t\t\t\tquesFront.push(que);\r\n\t\t\t\t} else if (que.title !== editingQue && ind > index) {\r\n\t\t\t\t\tquesBehind.push(que);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tif(editCompleted){\r\n\t\tnewQue = JSON.parse(sessionStorage.getItem(editingQue));\r\n\t}\r\n\tconst newQues = [...quesFront, newQue, ...quesBehind];\r\n\r\n\tconst elements = getDisplayElements(!editCompleted?ques:newQues);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!isEditing && elements}\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{getDisplayElements(quesFront)}\r\n\t\t\t\t\t{renderQue(editingType)}\r\n\t\t\t\t\t{getDisplayElements(quesBehind)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuesList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,SAAQC,kBAAkB,QAAO,kCAAkC;AACnE,SAAQC,SAAS,QAAO,aAAa;AACrC,SAAQC,UAAU,EAAEC,SAAS,QAAO,4BAA4B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,QAAQ,GAAGA,CAAC;EAACC,IAAI;EAAEC,WAAW;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,SAAS,GAAGd,UAAU,CAACI,SAAS,CAAC;EACvC,MAAMW,UAAU,GAAGf,UAAU,CAACG,UAAU,CAAC;EACzC,IAAIa,MAAM,GAAG,IAAI;EACjB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIL,SAAS,EAAE;IACdJ,IAAI,CAACU,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC1B,IAAID,GAAG,CAACE,KAAK,KAAKR,UAAU,EAAE;QAC7BI,KAAK,GAAGG,GAAG;MACZ;IACD,CAAC,CAAC;IACFZ,IAAI,CAACU,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC1B,IAAIH,KAAK,KAAK,CAAC,EAAE;QAChB,IAAIE,GAAG,CAACE,KAAK,KAAKR,UAAU,EAAE;UAC7BG,UAAU,CAACM,IAAI,CAACH,GAAG,CAAC;QACrB;MACD,CAAC,MAAM,IAAIF,KAAK,KAAKT,IAAI,CAACe,MAAM,EAAE;QACjC,IAAIJ,GAAG,CAACE,KAAK,KAAKR,UAAU,EAAE;UAC7BE,SAAS,CAACO,IAAI,CAACH,GAAG,CAAC;QACpB;MACD,CAAC,MAAM;QACN,IAAIA,GAAG,CAACE,KAAK,KAAKR,UAAU,IAAIO,GAAG,GAAGH,KAAK,EAAE;UAC5CF,SAAS,CAACO,IAAI,CAACH,GAAG,CAAC;QACpB,CAAC,MAAM,IAAIA,GAAG,CAACE,KAAK,KAAKR,UAAU,IAAIO,GAAG,GAAGH,KAAK,EAAE;UACnDD,UAAU,CAACM,IAAI,CAACH,GAAG,CAAC;QACrB;MACD;IACD,CAAC,CAAC;EACH;EACA,IAAGT,aAAa,EAAC;IAChBI,MAAM,GAAGU,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAACd,UAAU,CAAC,CAAC;EACxD;EACA,MAAMe,OAAO,GAAG,CAAC,GAAGb,SAAS,EAAED,MAAM,EAAE,GAAGE,UAAU,CAAC;EAErD,MAAMa,QAAQ,GAAG9B,kBAAkB,CAAC,CAACW,aAAa,GAACF,IAAI,GAACoB,OAAO,CAAC;EAEhE,oBACCtB,OAAA;IAAAwB,QAAA,GACE,CAAClB,SAAS,IAAIiB,QAAQ,EACtBjB,SAAS,iBACTN,OAAA,CAAAF,SAAA;MAAA0B,QAAA,GACE/B,kBAAkB,CAACgB,SAAS,CAAC,EAC7Bf,SAAS,CAACS,WAAW,CAAC,EACtBV,kBAAkB,CAACiB,UAAU,CAAC;IAAA,eAC9B,CACF;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAACvB,EAAA,CAlDIJ,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
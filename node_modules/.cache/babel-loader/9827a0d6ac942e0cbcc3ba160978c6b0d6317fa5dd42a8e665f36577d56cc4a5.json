{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\components\\\\check&fill\\\\renderFillSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { RenderFillContext } from \"./context/renderFillContext\";\nimport { getQueDetails } from \"../../utils/getUserSurveys\";\nimport { quesDisplay } from \"./quesDisplay/quesDisplay\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SubmitCheckEmptyContext } from \"./context/submitCheckEmptyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderFillSurvey = ({\n  surveyId\n}) => {\n  _s();\n  const surveyDetails = useContext(RenderFillContext).surveyData;\n  const navigate = useNavigate();\n\n  // 获取问卷对应questionsDetail\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    setQuestions([]);\n    const getQues = async () => {\n      // 创建所有请求的Promise数组\n      const getQuesPromise = surveyDetails.questions.map(question => {\n        return getQueDetails(question);\n      });\n      // 等待所有promise完成, 获取结果数组\n      const results = await Promise.all(getQuesPromise);\n      // 一次性更新questions\n      const sortedQues = results.sort((a, b) => a.index - b.index);\n      setQuestions(sortedQues);\n    };\n    getQues();\n  }, [surveyDetails]);\n\n  // 监控questions变化\n  useEffect(() => {\n    console.log('questions:----', questions);\n  }, [questions]);\n\n  // 获取需要渲染的问题组件\n  const elements = quesDisplay(questions);\n\n  // 取消填写问卷, 返回首页, 清空填写问卷时产生的 sessionStorage\n  const handleCancel = useCallback(e => {\n    e.preventDefault();\n    sessionStorage.clear();\n    alert('填写的信息将会消失');\n    navigate('../../published');\n  }, [surveyDetails]);\n\n  // 检查是否全部填写\n  const [allCompleted, setAllCompleted] = useState(false);\n  const checkCompleted = useCallback((title, type) => {\n    const data = JSON.parse(sessionStorage.getItem(title));\n    switch\n      // case\n    (type) {}\n  }, [surveyDetails]);\n  // 提交填写的问卷, 返回involved, 清空填写问卷产生的 sessionStorage\n  const submit = useCallback(e => {\n    e.preventDefault();\n  }, [surveyDetails]);\n  const handleSubmit = useCallback(async e => {\n    navigate('../../involved');\n  }, [surveyDetails]);\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: surveyDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: surveyDetails.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), elements, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCancel,\n      children: '取消填写'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: '提交'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n_s(RenderFillSurvey, \"asdhoYCTkmYY69RkGTpPqe/N/ww=\", false, function () {\n  return [useNavigate];\n});\n_c = RenderFillSurvey;\nexport default RenderFillSurvey;\nvar _c;\n$RefreshReg$(_c, \"RenderFillSurvey\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","RenderFillContext","getQueDetails","quesDisplay","useNavigate","SubmitCheckEmptyContext","jsxDEV","_jsxDEV","RenderFillSurvey","surveyId","_s","surveyDetails","surveyData","navigate","questions","setQuestions","getQues","getQuesPromise","map","question","results","Promise","all","sortedQues","sort","a","b","index","console","log","elements","handleCancel","e","preventDefault","sessionStorage","clear","alert","allCompleted","setAllCompleted","checkCompleted","title","type","data","JSON","parse","getItem","submit","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/components/check&fill/renderFillSurvey.jsx"],"sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {RenderFillContext} from \"./context/renderFillContext\";\r\nimport {getQueDetails} from \"../../utils/getUserSurveys\";\r\nimport {quesDisplay} from \"./quesDisplay/quesDisplay\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {SubmitCheckEmptyContext} from \"./context/submitCheckEmptyContext\";\r\n\r\nconst RenderFillSurvey = ({surveyId}) => {\r\n\tconst surveyDetails = useContext(RenderFillContext).surveyData;\r\n\tconst navigate = useNavigate();\r\n\r\n\t// 获取问卷对应questionsDetail\r\n\tconst [questions, setQuestions] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tsetQuestions([]);\r\n\t\tconst getQues = async () => {\r\n\t\t\t// 创建所有请求的Promise数组\r\n\t\t\tconst getQuesPromise = surveyDetails.questions.map(question => {\r\n\t\t\t\treturn getQueDetails(question);\r\n\t\t\t});\r\n\t\t\t// 等待所有promise完成, 获取结果数组\r\n\t\t\tconst results = await Promise.all(getQuesPromise);\r\n\t\t\t// 一次性更新questions\r\n\t\t\tconst sortedQues = results.sort((a, b) => a.index - b.index);\r\n\t\t\tsetQuestions(sortedQues);\r\n\t\t}\r\n\t\tgetQues();\r\n\t}, [surveyDetails]);\r\n\r\n\t// 监控questions变化\r\n\tuseEffect(() => {\r\n\t\tconsole.log('questions:----', questions);\r\n\t}, [questions]);\r\n\r\n\t// 获取需要渲染的问题组件\r\n\tconst elements = quesDisplay(questions);\r\n\r\n\r\n\t// 取消填写问卷, 返回首页, 清空填写问卷时产生的 sessionStorage\r\n\tconst handleCancel = useCallback(e => {\r\n\t\te.preventDefault();\r\n\t\tsessionStorage.clear();\r\n\t\talert('填写的信息将会消失');\r\n\t\tnavigate('../../published');\r\n\t}, [surveyDetails]);\r\n\r\n\r\n\t// 检查是否全部填写\r\n\tconst [allCompleted, setAllCompleted] = useState(false);\r\n\tconst checkCompleted = useCallback((title, type)=>{\r\n\t\tconst data = JSON.parse(sessionStorage.getItem(title));\r\n\t\tswitch (type){\r\n\t\t\t// case\r\n\t\t}\r\n\t},[surveyDetails]);\r\n\t// 提交填写的问卷, 返回involved, 清空填写问卷产生的 sessionStorage\r\n\tconst submit = useCallback(e=>{\r\n\t\te.preventDefault();\r\n\t},[surveyDetails]);\r\n\tconst handleSubmit = useCallback(async (e) => {\r\n\r\n\r\n\t\tnavigate('../../involved');\r\n\t}, [surveyDetails]);\r\n\r\n\r\n\treturn (\r\n\t\t<fieldset>\r\n\t\t\t<h1>{surveyDetails.title}</h1>\r\n\t\t\t<h2>{surveyDetails.description}</h2>\r\n\t\t\t<hr/>\r\n\t\t\t{/*<SubmitCheckEmptyContext.Provider value={}>*/}\r\n\t\t\t\t{elements}\r\n\t\t\t{/*</SubmitCheckEmptyContext.Provider>*/}\r\n\t\t\t<button onClick={handleCancel}>{'取消填写'}</button>\r\n\t\t\t<button onClick={submit}>{'提交'}</button>\r\n\t\t</fieldset>\r\n\t);\r\n};\r\n\r\nexport default RenderFillSurvey;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
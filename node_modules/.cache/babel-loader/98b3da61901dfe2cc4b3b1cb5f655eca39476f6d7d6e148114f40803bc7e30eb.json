{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\pages\\\\publish.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport QuesList from \"../components/editSurvey/quesList\";\nimport AddQue from \"../components/editSurvey/addQue\";\nimport { GetTitleContext } from \"../components/editSurvey/context/getTitleContext\";\nimport { updateUser, useCreateQueMutation, useSaveSurveyMutation, useUpdateSurveyMutation } from \"../services/apis\";\nimport { filterQueDetails } from \"../components/editSurvey/filterQueDetails\";\nimport { EditingQue, IsEditing, ReEditQueContext } from \"../components/editSurvey/context/reEditQueContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Publish = () => {\n  _s();\n  // 监测是否正在添加某个问题\n  const [adding, setAdding] = useState(false);\n  // 正在添加的问题信息\n  const [addingTitle, setAddingTitle] = useState({});\n  // 是否添加完毕\n  const [addComplete, setAddComplete] = useState(false);\n  //  问题列表\n  const [ques, setQues] = useState([]);\n  // const queType = useContext(QueContext);\n  // 检测是否保存或发布\n  const [draftOrPublish, setDraftOrPublish] = useState(false);\n  // 问卷标题\n  const [surveyTitle, setSurveyTitle] = useState('');\n  const handleTitleChange = useCallback(e => {\n    const newTitle = e.target.value;\n    setSurveyTitle(newTitle);\n    // 将标题存储到 sessionStorage\n    sessionStorage.setItem('surveyTitle', newTitle);\n  }, []);\n  // 问卷描述\n  const [surveyDescr, setSurveyDescr] = useState('');\n  const handleDescrChange = useCallback(e => {\n    const newDescr = e.target.value;\n    setSurveyDescr(newDescr);\n    // 将描述存储到 sessionStorage\n    sessionStorage.setItem('surveyDescription', newDescr);\n  }, []);\n\n  // 添加问题\n  const handleAddQue = useCallback(e => {\n    e.preventDefault();\n    setAdding(true);\n    setAddComplete(false);\n    setDraftOrPublish(false);\n  }, [adding, addComplete]);\n  // 获得问题 title 用于定位 sessionStorage 中的存储\n  // 草稿---未确认添加\n  function draftTitle(title) {\n    console.log(title);\n    // 将获得的标题传给 addingTitle, 即正在使用的标题\n    setAddingTitle({\n      title,\n      id: Date.now()\n    });\n  }\n\n  // 确认添加---保存问题->ques\n  function saveTitle() {\n    const queType = JSON.parse(sessionStorage.getItem(addingTitle.title)).type;\n    setQues([...ques, {\n      ...addingTitle,\n      type: queType\n    }]);\n  }\n\n  // 确认添加\n  const handleCompleteQue = e => {\n    e.preventDefault();\n    saveTitle();\n    setAdding(false);\n    setAddComplete(true);\n  };\n\n  // 取消添加\n  const handleCancel = useCallback(e => {\n    e.preventDefault();\n    setAdding(false);\n    setAddComplete(false);\n    setDraftOrPublish(false);\n    // 取消添加时移除sessionStorage中存储的临时信息\n    sessionStorage.removeItem(addingTitle.title);\n    // 清空当前问题草稿\n    setAddingTitle({});\n  }, [adding, addComplete, addingTitle]);\n\n  // 编辑问题\n  const [queToEdit, setQueToEdit] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  /*\r\n  * 编辑问题\r\n  * @title 需要编辑的问题title\r\n  * @deleteOrEdit Bool, true:delete, false:edit*/\n  function editQue(title, delteOrEdit) {\n    // 删除问题\n    if (delteOrEdit) {\n      setQues(prevQues => prevQues.filter(que => que.title !== title));\n      sessionStorage.removeItem(title);\n      setIsEditing(false);\n      setQueToEdit('');\n    }\n    // 编辑问题\n    // 需要编辑的问题\n    setQueToEdit(title);\n    setIsEditing(true);\n  }\n\n  // 将survey保存到草稿\n  const [doSaveDraft, saveDraftResult] = useSaveSurveyMutation();\n  const [doSaveDraftQue, saveDraftQueResult] = useCreateQueMutation();\n  const [doUpdateDraft, updateDraftResult] = useUpdateSurveyMutation();\n  async function saveDraft(e) {\n    e.preventDefault();\n    // 1. 先上传survey的基础信息\n    const data = {\n      attributes: {\n        title: surveyTitle,\n        description: surveyDescr,\n        clientId: localStorage.getItem('token'),\n        published: false\n      }\n    };\n    if (!ques[0] || !surveyTitle || !surveyDescr) {\n      console.log('问题不可为空!');\n      return;\n    }\n    try {\n      const resp = await doSaveDraft(data).unwrap();\n      console.log('保存问卷成功', resp);\n      // 将surveyToken临时储存在本地, 用于问题上传的绑定\n      sessionStorage.setItem('tempSurveyToken', resp.data.documentId);\n    } catch (err) {\n      console.log('保存draft失败', err);\n    }\n    const surveyToken = sessionStorage.getItem('tempSurveyToken');\n    // 将该survey绑定给创建问卷的用户\n    updateUser('surveys', surveyToken);\n    // 2. 上传问题信息并绑定survey\n    sessionStorage.removeItem(''); // 移除会话存储中的空白token\n    const queTokens = [];\n    for (const [index, que] of ques.entries()) {\n      const detail = filterQueDetails(que, index, surveyToken);\n      if (!detail) continue;\n      try {\n        const resp = await doSaveDraftQue(detail).unwrap();\n        console.log('保存问题成功', resp);\n        // 将queToken保存在数组中, 用于后续更新survey中的questions\n        queTokens.push(resp.data.documentId);\n      } catch (err) {\n        console.log('保存问题失败', err);\n      }\n    }\n    // 3. 更新survey中的questions\n    data.attributes.questions = JSON.stringify(queTokens);\n    try {\n      const resp = await doUpdateDraft(data).unwrap();\n      console.log('绑定问题成功', resp);\n    } catch (err) {\n      console.log('绑定问题失败', err);\n    }\n    // 4. 清除创建问卷产生的会话存储, 以免影响后续使用\n    sessionStorage.removeItem(`surveyTitle`);\n    sessionStorage.removeItem(`surveyDescr`);\n    sessionStorage.removeItem(`tempSurveyToken`);\n    ques.forEach(q => {\n      sessionStorage.removeItem(q.title);\n    });\n    setDraftOrPublish(true);\n    // 直接刷新页面, 绕开因清理sessionStorage造成的null错误\n    window.location.reload();\n  }\n  function publishSurvey() {}\n  useEffect(() => {\n    console.log('publish---------', ques);\n  }, [surveyTitle, surveyDescr, ques]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleTitleChange,\n        type: \"text\",\n        placeholder: '请输入问卷标题'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleDescrChange,\n        type: \"text\",\n        placeholder: '请输入问卷描述'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ReEditQueContext.Provider, {\n        value: editQue,\n        children: /*#__PURE__*/_jsxDEV(IsEditing.Provider, {\n          value: isEditing,\n          children: /*#__PURE__*/_jsxDEV(EditingQue.Provider, {\n            value: queToEdit,\n            children: !draftOrPublish && /*#__PURE__*/_jsxDEV(QuesList, {\n              ques: ques\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [!adding && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddQue,\n          children: \"\\u6DFB\\u52A0\\u95EE\\u9898\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 18\n        }, this), adding && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(GetTitleContext.Provider, {\n            value: draftTitle,\n            children: [/*#__PURE__*/_jsxDEV(AddQue, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancel,\n              children: \"\\u53D6\\u6D88\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCompleteQue,\n              children: \"\\u786E\\u8BA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 8\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveDraft,\n            children: \"\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: publishSurvey,\n            children: \"\\u53D1\\u5E03\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 3\n  }, this);\n};\n_s(Publish, \"nMB6bUw1q5p2b1VQmqUsfLWMtR0=\", false, function () {\n  return [useSaveSurveyMutation, useCreateQueMutation, useUpdateSurveyMutation];\n});\n_c = Publish;\nexport default Publish;\nvar _c;\n$RefreshReg$(_c, \"Publish\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","QuesList","AddQue","GetTitleContext","updateUser","useCreateQueMutation","useSaveSurveyMutation","useUpdateSurveyMutation","filterQueDetails","EditingQue","IsEditing","ReEditQueContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Publish","_s","adding","setAdding","addingTitle","setAddingTitle","addComplete","setAddComplete","ques","setQues","draftOrPublish","setDraftOrPublish","surveyTitle","setSurveyTitle","handleTitleChange","e","newTitle","target","value","sessionStorage","setItem","surveyDescr","setSurveyDescr","handleDescrChange","newDescr","handleAddQue","preventDefault","draftTitle","title","console","log","id","Date","now","saveTitle","queType","JSON","parse","getItem","type","handleCompleteQue","handleCancel","removeItem","queToEdit","setQueToEdit","isEditing","setIsEditing","editQue","delteOrEdit","prevQues","filter","que","doSaveDraft","saveDraftResult","doSaveDraftQue","saveDraftQueResult","doUpdateDraft","updateDraftResult","saveDraft","data","attributes","description","clientId","localStorage","published","resp","unwrap","documentId","err","surveyToken","queTokens","index","entries","detail","push","questions","stringify","forEach","q","window","location","reload","publishSurvey","children","action","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Provider","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/pages/publish.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport QuesList from \"../components/editSurvey/quesList\";\r\nimport AddQue from \"../components/editSurvey/addQue\";\r\nimport {GetTitleContext} from \"../components/editSurvey/context/getTitleContext\";\r\nimport {updateUser, useCreateQueMutation, useSaveSurveyMutation, useUpdateSurveyMutation} from \"../services/apis\";\r\nimport {filterQueDetails} from \"../components/editSurvey/filterQueDetails\";\r\nimport {EditingQue, IsEditing, ReEditQueContext} from \"../components/editSurvey/context/reEditQueContext\";\r\n\r\nconst Publish = () => {\r\n\t// 监测是否正在添加某个问题\r\n\tconst [adding, setAdding] = useState(false);\r\n\t// 正在添加的问题信息\r\n\tconst [addingTitle, setAddingTitle] = useState({});\r\n\t// 是否添加完毕\r\n\tconst [addComplete, setAddComplete] = useState(false);\r\n\t//  问题列表\r\n\tconst [ques, setQues] = useState([]);\r\n\t// const queType = useContext(QueContext);\r\n\t// 检测是否保存或发布\r\n\tconst [draftOrPublish, setDraftOrPublish] = useState(false);\r\n\t// 问卷标题\r\n\tconst [surveyTitle, setSurveyTitle] = useState('');\r\n\tconst handleTitleChange = useCallback(e => {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tsetSurveyTitle(newTitle);\r\n\t\t// 将标题存储到 sessionStorage\r\n\t\tsessionStorage.setItem('surveyTitle', newTitle);\r\n\t}, []);\r\n\t// 问卷描述\r\n\tconst [surveyDescr, setSurveyDescr] = useState('');\r\n\tconst handleDescrChange = useCallback(e => {\r\n\t\tconst newDescr = e.target.value;\r\n\t\tsetSurveyDescr(newDescr);\r\n\t\t// 将描述存储到 sessionStorage\r\n\t\tsessionStorage.setItem('surveyDescription', newDescr);\r\n\t}, [])\r\n\r\n\t// 添加问题\r\n\tconst handleAddQue = useCallback((e) => {\r\n\t\te.preventDefault();\r\n\t\tsetAdding(true);\r\n\t\tsetAddComplete(false);\r\n\t\tsetDraftOrPublish(false);\r\n\t}, [adding, addComplete]);\r\n\t// 获得问题 title 用于定位 sessionStorage 中的存储\r\n\t// 草稿---未确认添加\r\n\tfunction draftTitle(title) {\r\n\t\tconsole.log(title);\r\n\t\t// 将获得的标题传给 addingTitle, 即正在使用的标题\r\n\t\tsetAddingTitle({title, id: Date.now()});\r\n\t}\r\n\r\n\t// 确认添加---保存问题->ques\r\n\tfunction saveTitle() {\r\n\t\tconst queType = JSON.parse(sessionStorage.getItem(addingTitle.title)).type;\r\n\t\tsetQues([...ques, {...addingTitle, type: queType}]);\r\n\t}\r\n\r\n\t// 确认添加\r\n\tconst handleCompleteQue = e => {\r\n\t\te.preventDefault()\r\n\t\tsaveTitle();\r\n\t\tsetAdding(false);\r\n\t\tsetAddComplete(true);\r\n\t};\r\n\r\n\r\n\t// 取消添加\r\n\tconst handleCancel = useCallback(e => {\r\n\t\te.preventDefault();\r\n\t\tsetAdding(false);\r\n\t\tsetAddComplete(false);\r\n\t\tsetDraftOrPublish(false);\r\n\t\t// 取消添加时移除sessionStorage中存储的临时信息\r\n\t\tsessionStorage.removeItem(addingTitle.title);\r\n\t\t// 清空当前问题草稿\r\n\t\tsetAddingTitle({});\r\n\t}, [adding, addComplete, addingTitle])\r\n\r\n\t// 编辑问题\r\n\tconst [queToEdit, setQueToEdit] = useState('');\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\r\n\t/*\r\n\t* 编辑问题\r\n\t* @title 需要编辑的问题title\r\n\t* @deleteOrEdit Bool, true:delete, false:edit*/\r\n\tfunction editQue(title, delteOrEdit) {\r\n\t\t// 删除问题\r\n\t\tif (delteOrEdit) {\r\n\t\t\tsetQues(prevQues => prevQues.filter(que => que.title !== title));\r\n\t\t\tsessionStorage.removeItem(title);\r\n\t\t\tsetIsEditing(false);\r\n\t\t\tsetQueToEdit('');\r\n\t\t}\r\n\t\t// 编辑问题\r\n\t\t// 需要编辑的问题\r\n\t\tsetQueToEdit(title);\r\n\t\tsetIsEditing(true);\r\n\t}\r\n\r\n\t// 将survey保存到草稿\r\n\tconst [doSaveDraft, saveDraftResult] = useSaveSurveyMutation();\r\n\tconst [doSaveDraftQue, saveDraftQueResult] = useCreateQueMutation();\r\n\tconst [doUpdateDraft, updateDraftResult] = useUpdateSurveyMutation();\r\n\r\n\tasync function saveDraft(e) {\r\n\t\te.preventDefault();\r\n\t\t// 1. 先上传survey的基础信息\r\n\t\tconst data = {\r\n\t\t\tattributes: {\r\n\t\t\t\ttitle: surveyTitle,\r\n\t\t\t\tdescription: surveyDescr,\r\n\t\t\t\tclientId: localStorage.getItem('token'),\r\n\t\t\t\tpublished: false\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (!ques[0] || !surveyTitle || !surveyDescr) {\r\n\t\t\tconsole.log('问题不可为空!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst resp = await doSaveDraft(data).unwrap();\r\n\t\t\tconsole.log('保存问卷成功', resp);\r\n\t\t\t// 将surveyToken临时储存在本地, 用于问题上传的绑定\r\n\t\t\tsessionStorage.setItem('tempSurveyToken', resp.data.documentId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('保存draft失败', err);\r\n\t\t}\r\n\t\tconst surveyToken = sessionStorage.getItem('tempSurveyToken');\r\n\t\t// 将该survey绑定给创建问卷的用户\r\n\t\tupdateUser('surveys', surveyToken);\r\n\t\t// 2. 上传问题信息并绑定survey\r\n\t\tsessionStorage.removeItem(''); // 移除会话存储中的空白token\r\n\t\tconst queTokens = [];\r\n\t\tfor (const [index, que] of ques.entries()) {\r\n\t\t\tconst detail = filterQueDetails(que, index, surveyToken);\r\n\t\t\tif (!detail) continue;\r\n\t\t\ttry {\r\n\t\t\t\tconst resp = await doSaveDraftQue(detail).unwrap();\r\n\t\t\t\tconsole.log('保存问题成功', resp);\r\n\t\t\t\t// 将queToken保存在数组中, 用于后续更新survey中的questions\r\n\t\t\t\tqueTokens.push(resp.data.documentId);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log('保存问题失败', err);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 3. 更新survey中的questions\r\n\t\tdata.attributes.questions = JSON.stringify(queTokens);\r\n\t\ttry {\r\n\t\t\tconst resp = await doUpdateDraft(data).unwrap();\r\n\t\t\tconsole.log('绑定问题成功', resp);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('绑定问题失败', err);\r\n\t\t}\r\n\t\t// 4. 清除创建问卷产生的会话存储, 以免影响后续使用\r\n\t\tsessionStorage.removeItem(`surveyTitle`);\r\n\t\tsessionStorage.removeItem(`surveyDescr`);\r\n\t\tsessionStorage.removeItem(`tempSurveyToken`);\r\n\t\tques.forEach(q => {\r\n\t\t\tsessionStorage.removeItem(q.title);\r\n\t\t})\r\n\t\tsetDraftOrPublish(true);\r\n\t\t// 直接刷新页面, 绕开因清理sessionStorage造成的null错误\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tfunction publishSurvey() {\r\n\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('publish---------', ques);\r\n\t}, [surveyTitle, surveyDescr, ques]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form action=\"\">\r\n\t\t\t\t<input onChange={handleTitleChange} type=\"text\" placeholder={'请输入问卷标题'}/>\r\n\t\t\t\t<input onChange={handleDescrChange} type=\"text\" placeholder={'请输入问卷描述'}/>\r\n\t\t\t\t<ReEditQueContext.Provider value={editQue}>\r\n\t\t\t\t\t<IsEditing.Provider value={isEditing}>\r\n\t\t\t\t\t\t<EditingQue.Provider value={queToEdit}>\r\n\t\t\t\t\t\t\t{!draftOrPublish && <QuesList ques={ques}/>}\r\n\t\t\t\t\t\t</EditingQue.Provider>\r\n\t\t\t\t\t</IsEditing.Provider>\r\n\t\t\t\t</ReEditQueContext.Provider>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!adding && <button onClick={handleAddQue}>添加问题</button>}\r\n\t\t\t\t\t{adding && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{/* 使用context传递获取标题的函数 */}\r\n\t\t\t\t\t\t\t{/* 存储到草稿中, 确认添加时通过handleCompleteQue将问题存储到ques, 取消时通过handleCancel移除草稿 */}\r\n\t\t\t\t\t\t\t<GetTitleContext.Provider value={draftTitle}>\r\n\t\t\t\t\t\t\t\t<AddQue/>\r\n\t\t\t\t\t\t\t\t<button onClick={handleCancel}>取消</button>\r\n\t\t\t\t\t\t\t\t<button onClick={handleCompleteQue}>确认</button>\r\n\t\t\t\t\t\t\t</GetTitleContext.Provider>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button onClick={saveDraft}>保存</button>\r\n\t\t\t\t\t\t<button onClick={publishSurvey}>发布</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Publish;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
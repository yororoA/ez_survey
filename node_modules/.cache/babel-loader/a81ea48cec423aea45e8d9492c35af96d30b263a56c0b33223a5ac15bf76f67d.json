{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\\\u684C\\u9762\\\\\\u5DE5\\u4F5C\\\\\\u7F16\\u7A0B\\\\\\u524D\\u7AEF\\\\projext\\\\project\\\\src\\\\components\\\\draftsDisplay\\\\renderDrafts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useState } from 'react';\nimport { RenderDraftsContext } from \"./context/drafts\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateUser } from \"../../utils/updateUser\";\nimport { getSurveyQues } from \"../../utils/getSurveyQues\";\nimport { getQueDetails } from \"../../utils/getQueDetails\";\nimport draftsDisplay from '../../style/draftsDisplay/draftsDisplay.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RenderDrafts = () => {\n  _s();\n  // 鼠标移入移出控制按钮显示\n  const [hoverId, setHoverId] = useState(null);\n\n  // element参考信息\n  const drafts = useContext(RenderDraftsContext);\n  const elements = drafts.map(draft => {\n    return {\n      title: draft.title,\n      description: draft.description,\n      id: draft.id\n    };\n  });\n  // 编辑跳转\n  // 采用编程式导航\n  const navigate = useNavigate();\n  async function handleEditClick(e) {\n    e.preventDefault();\n    // 将问卷相关信息存入sessionStorage\n    const data = drafts.filter(draft => draft.id === e.currentTarget.id)[0];\n    sessionStorage.setItem('surveyTitleBefore', data.title);\n    sessionStorage.setItem('surveyDescriptionBefore', data.description);\n    sessionStorage.setItem('surveyTokenBefore', e.currentTarget.id);\n    // 等待所有题目信息存入sessionStorage\n    const queTokensBefore = [];\n    await Promise.all(data.questions.map(async question => {\n      const r = await getQueDetails(question);\n      if (r) {\n        sessionStorage.setItem(r.title, JSON.stringify(r));\n      }\n    }));\n    data.questions.forEach(question => {\n      queTokensBefore.push(question);\n    });\n    sessionStorage.setItem('queTokensBefore', JSON.stringify(queTokensBefore));\n    // 跳转到publish\n    navigate('../edit');\n  }\n\n  // 删除草稿\n  async function handleDeleteDraft(e) {\n    e.preventDefault();\n    const surveyId = e.currentTarget.id;\n    try {\n      const resp = await fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`);\n      const result = await resp.json();\n      const surveys = result.data.surveys;\n      // 移除原survey绑定的question\n      const surveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`);\n      const surveyResult = await surveyResp.json();\n      const quesBefore = surveyResult.data.questions;\n      for (const q of quesBefore) {\n        const qresp = await fetch(`http://localhost:1337/api/quests/${q}`, {\n          method: 'DELETE'\n        });\n        if (!qresp.ok) {\n          console.error(`删除原问题失败: ${qresp.status}`);\n        }\n      }\n      // 移除原survey\n      const delSurveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`, {\n        method: 'DELETE'\n      });\n      if (!delSurveyResp.ok) {\n        console.error(`移除原survey失败: ${delSurveyResp.status}`);\n      }\n      // 移除绑定surveys中的原问卷id\n\n      surveys.forEach((survey, index) => {\n        if (survey.id === surveyId) {\n          surveys.splice(index, 1);\n        }\n      });\n      // 将移除了原surveyId的surveys覆盖给client\n      await updateUser('surveys', surveys, true);\n    } catch (err) {\n      console.error(err);\n    }\n    // 刷新页面\n    window.location.reload();\n  }\n\n  // 预览草稿\n  async function handlePreview(e) {\n    const surveyId = e.currentTarget.id;\n    e.preventDefault();\n    // title, description, id, questions[]\n    const surveyDetails = await getSurveyQues(surveyId, true);\n    // 将问卷相关信息存储到sessionStorage用于预览组件获取\n    sessionStorage.setItem('surveyTitle', surveyDetails.title);\n    sessionStorage.setItem('surveyDescription', surveyDetails.description);\n    await Promise.all(surveyDetails.questions.map(async question => {\n      const r = await getQueDetails(question);\n      if (r) sessionStorage.setItem(`${r.title}`, JSON.stringify(r));\n    }));\n    // 显示预览组件\n    navigate('./preview');\n  }\n\n  // 发布草稿\n  async function handlePublishDraft(e) {\n    e.preventDefault();\n    const surveyId = e.currentTarget.id;\n    const token = localStorage.getItem('token');\n    // 更新surveys中相应survey的发布状态\n    const pubResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        data: {\n          published: true,\n          endCollection: false\n        }\n      })\n    });\n    if (!pubResp.ok) {\n      console.error(`更新问卷主观发布状态失败: ${pubResp.status}`);\n      return null;\n    }\n    // 获取用户绑定的所有survey\n    const getResp = await fetch(`http://localhost:1337/api/clients/${token}`);\n    if (!getResp.ok) {\n      console.error(`更新问卷客观发布状态失败(获取阶段): ${getResp.status}`);\n      return null;\n    }\n    const data = await getResp.json();\n    const surveys = data.data.surveys;\n    // 生成更新后的新数据\n    for (let survey of surveys) {\n      if (survey.id === surveyId) {\n        survey.published = true;\n      }\n    }\n    // 将更新状态后的新数据覆盖到原来的数据上\n    await updateUser('surveys', surveys, true);\n    navigate('../published');\n  }\n\n  // 草稿组件生成\n  console.log(drafts);\n  console.log(elements);\n  const elementsForRender = elements.map(element => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    id: element.id,\n    onMouseEnter: e => setHoverId(e.currentTarget.id),\n    onMouseLeave: () => setHoverId(null),\n    className: draftsDisplay.draftsDisplayFieldset,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: element.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: element.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this), hoverId === element.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        id: element.id,\n        children: '编辑'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreview,\n        id: element.id,\n        children: '预览'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteDraft,\n        id: element.id,\n        children: '删除'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePublishDraft,\n        id: element.id,\n        children: '发布'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this)]\n  }, element.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: '查看草稿'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this), elementsForRender]\n  }, void 0, true);\n};\n_s(RenderDrafts, \"+rONkpTUA59kzCSvTnWt+ZTr9F8=\", false, function () {\n  return [useNavigate];\n});\n_c = RenderDrafts;\nexport default RenderDrafts;\nvar _c;\n$RefreshReg$(_c, \"RenderDrafts\");","map":{"version":3,"names":["React","useCallback","useContext","useState","RenderDraftsContext","useNavigate","updateUser","getSurveyQues","getQueDetails","draftsDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderDrafts","_s","hoverId","setHoverId","drafts","elements","map","draft","title","description","id","navigate","handleEditClick","e","preventDefault","data","filter","currentTarget","sessionStorage","setItem","queTokensBefore","Promise","all","questions","question","r","JSON","stringify","forEach","push","handleDeleteDraft","surveyId","resp","fetch","localStorage","getItem","result","json","surveys","surveyResp","surveyResult","quesBefore","q","qresp","method","ok","console","error","status","delSurveyResp","survey","index","splice","err","window","location","reload","handlePreview","surveyDetails","handlePublishDraft","token","pubResp","headers","body","published","endCollection","getResp","log","elementsForRender","element","onMouseEnter","onMouseLeave","className","draftsDisplayFieldset","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/桌面/工作/编程/前端/projext/project/src/components/draftsDisplay/renderDrafts.jsx"],"sourcesContent":["import React, {useCallback, useContext, useState} from 'react';\r\nimport {RenderDraftsContext} from \"./context/drafts\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {updateUser} from \"../../utils/updateUser\";\r\nimport {getSurveyQues} from \"../../utils/getSurveyQues\";\r\nimport {getQueDetails} from \"../../utils/getQueDetails\";\r\nimport draftsDisplay from '../../style/draftsDisplay/draftsDisplay.module.css'\r\n\r\nconst RenderDrafts = () => {\r\n\t// 鼠标移入移出控制按钮显示\r\n\tconst [hoverId, setHoverId] = useState(null);\r\n\r\n\r\n\t// element参考信息\r\n\tconst drafts = useContext(RenderDraftsContext);\r\n\tconst elements = drafts.map(draft => {\r\n\t\treturn {\r\n\t\t\ttitle: draft.title,\r\n\t\t\tdescription: draft.description,\r\n\t\t\tid: draft.id\r\n\t\t}\r\n\t});\r\n\t// 编辑跳转\r\n\t// 采用编程式导航\r\n\tconst navigate = useNavigate()\r\n\r\n\tasync function handleEditClick(e) {\r\n\t\te.preventDefault();\r\n\t\t// 将问卷相关信息存入sessionStorage\r\n\t\tconst data = drafts.filter(draft => draft.id === e.currentTarget.id)[0];\r\n\t\tsessionStorage.setItem('surveyTitleBefore', data.title);\r\n\t\tsessionStorage.setItem('surveyDescriptionBefore', data.description);\r\n\t\tsessionStorage.setItem('surveyTokenBefore', e.currentTarget.id);\r\n\t\t// 等待所有题目信息存入sessionStorage\r\n\t\tconst queTokensBefore = [];\r\n\t\tawait Promise.all(data.questions.map(async (question) => {\r\n\t\t\tconst r = await getQueDetails(question);\r\n\t\t\tif (r) {\r\n\t\t\t\tsessionStorage.setItem(r.title, JSON.stringify(r));\r\n\t\t\t}\r\n\t\t}));\r\n\t\tdata.questions.forEach(question => {\r\n\t\t\tqueTokensBefore.push(question);\r\n\t\t})\r\n\t\tsessionStorage.setItem('queTokensBefore', JSON.stringify(queTokensBefore));\r\n\t\t// 跳转到publish\r\n\t\tnavigate('../edit')\r\n\t}\r\n\r\n\r\n\t// 删除草稿\r\n\tasync function handleDeleteDraft(e) {\r\n\t\te.preventDefault();\r\n\t\tconst surveyId = e.currentTarget.id;\r\n\t\ttry {\r\n\t\t\tconst resp = await fetch(`http://localhost:1337/api/clients/${localStorage.getItem('token')}`);\r\n\t\t\tconst result = await resp.json();\r\n\t\t\tconst surveys = result.data.surveys;\r\n\t\t\t// 移除原survey绑定的question\r\n\t\t\tconst surveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`);\r\n\t\t\tconst surveyResult = await surveyResp.json();\r\n\t\t\tconst quesBefore = surveyResult.data.questions;\r\n\t\t\tfor (const q of quesBefore) {\r\n\t\t\t\tconst qresp = await fetch(`http://localhost:1337/api/quests/${q}`, {\r\n\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t});\r\n\t\t\t\tif (!qresp.ok) {\r\n\t\t\t\t\tconsole.error(`删除原问题失败: ${qresp.status}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// 移除原survey\r\n\t\t\tconst delSurveyResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t});\r\n\t\t\tif (!delSurveyResp.ok) {\r\n\t\t\t\tconsole.error(`移除原survey失败: ${delSurveyResp.status}`);\r\n\t\t\t}\r\n\t\t\t// 移除绑定surveys中的原问卷id\r\n\r\n\t\t\tsurveys.forEach((survey, index) => {\r\n\t\t\t\tif (survey.id === surveyId) {\r\n\t\t\t\t\tsurveys.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// 将移除了原surveyId的surveys覆盖给client\r\n\t\t\tawait updateUser('surveys', surveys, true);\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t\t// 刷新页面\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\r\n\t// 预览草稿\r\n\tasync function handlePreview(e) {\r\n\t\tconst surveyId = e.currentTarget.id;\r\n\t\te.preventDefault();\r\n\t\t// title, description, id, questions[]\r\n\t\tconst surveyDetails = await getSurveyQues(surveyId, true);\r\n\t\t// 将问卷相关信息存储到sessionStorage用于预览组件获取\r\n\t\tsessionStorage.setItem('surveyTitle', surveyDetails.title);\r\n\t\tsessionStorage.setItem('surveyDescription', surveyDetails.description);\r\n\t\tawait Promise.all(surveyDetails.questions.map(async (question) => {\r\n\t\t\tconst r = await getQueDetails(question);\r\n\t\t\tif (r) sessionStorage.setItem(`${r.title}`, JSON.stringify(r));\r\n\t\t}));\r\n\t\t// 显示预览组件\r\n\t\tnavigate('./preview')\r\n\t}\r\n\r\n\r\n\t// 发布草稿\r\n\tasync function handlePublishDraft(e) {\r\n\t\te.preventDefault();\r\n\t\tconst surveyId = e.currentTarget.id;\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\t// 更新surveys中相应survey的发布状态\r\n\t\tconst pubResp = await fetch(`http://localhost:1337/api/surveys/${surveyId}`, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({data: {published: true, endCollection: false}})\r\n\t\t});\r\n\t\tif (!pubResp.ok) {\r\n\t\t\tconsole.error(`更新问卷主观发布状态失败: ${pubResp.status}`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t// 获取用户绑定的所有survey\r\n\t\tconst getResp = await fetch(`http://localhost:1337/api/clients/${token}`);\r\n\t\tif (!getResp.ok) {\r\n\t\t\tconsole.error(`更新问卷客观发布状态失败(获取阶段): ${getResp.status}`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst data = await getResp.json();\r\n\t\tconst surveys = data.data.surveys;\r\n\t\t// 生成更新后的新数据\r\n\t\tfor (let survey of surveys) {\r\n\t\t\tif (survey.id === surveyId) {\r\n\t\t\t\tsurvey.published = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 将更新状态后的新数据覆盖到原来的数据上\r\n\t\tawait updateUser('surveys', surveys, true);\r\n\t\tnavigate('../published');\r\n\t}\r\n\r\n\r\n\t// 草稿组件生成\r\n\tconsole.log(drafts);\r\n\tconsole.log(elements);\r\n\tconst elementsForRender = elements.map(element => (\r\n\t\t<fieldset key={element.id} id={element.id} onMouseEnter={e => setHoverId(e.currentTarget.id)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setHoverId(null)} className={draftsDisplay.draftsDisplayFieldset}>\r\n\t\t\t<div>\r\n\t\t\t\t<div>{element.title}</div>\r\n\t\t\t\t<div>{element.description}</div>\r\n\t\t\t</div>\r\n\t\t\t{hoverId === element.id && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={handleEditClick} id={element.id}>{'编辑'}</button>\r\n\t\t\t\t\t<button onClick={handlePreview} id={element.id}>{'预览'}</button>\r\n\t\t\t\t\t<button onClick={handleDeleteDraft} id={element.id}>{'删除'}</button>\r\n\t\t\t\t\t<button onClick={handlePublishDraft} id={element.id}>{'发布'}</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</fieldset>\r\n\t))\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header>{'查看草稿'}</header>\r\n\t\t\t{elementsForRender}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RenderDrafts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}